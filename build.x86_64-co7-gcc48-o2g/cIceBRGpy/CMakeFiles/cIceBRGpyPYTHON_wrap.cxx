/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_IceBRG__density_profile swig_types[0]
#define SWIGTYPE_p_IceBRG__galaxy swig_types[1]
#define SWIGTYPE_p_IceBRG__galaxy_group swig_types[2]
#define SWIGTYPE_p_IceBRG__lens_id swig_types[3]
#define SWIGTYPE_p_IceBRG__lens_id_lt swig_types[4]
#define SWIGTYPE_p_IceBRG__lens_source_pair swig_types[5]
#define SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t swig_types[6]
#define SWIGTYPE_p_IceBRG__lensing_tNFW_profile swig_types[7]
#define SWIGTYPE_p_IceBRG__limit_vectorT_double_t swig_types[8]
#define SWIGTYPE_p_IceBRG__pair_bin swig_types[9]
#define SWIGTYPE_p_IceBRG__pair_bin_summary swig_types[10]
#define SWIGTYPE_p_IceBRG__pair_binner swig_types[11]
#define SWIGTYPE_p_IceBRG__pair_bins_summary swig_types[12]
#define SWIGTYPE_p_IceBRG__point_mass_profile swig_types[13]
#define SWIGTYPE_p_IceBRG__redshift_obj swig_types[14]
#define SWIGTYPE_p_IceBRG__sky_obj swig_types[15]
#define SWIGTYPE_p_IceBRG__source_galaxy swig_types[16]
#define SWIGTYPE_p_IceBRG__source_obj swig_types[17]
#define SWIGTYPE_p_IceBRG__tNFW_profile swig_types[18]
#define SWIGTYPE_p_T swig_types[19]
#define SWIGTYPE_p_char swig_types[20]
#define SWIGTYPE_p_custom_unit_typeT_0_0_0_2_0_t swig_types[21]
#define SWIGTYPE_p_custom_unit_typeT_0__2_0_0_0_t swig_types[22]
#define SWIGTYPE_p_custom_unit_typeT_1_0_0__1_0_t swig_types[23]
#define SWIGTYPE_p_custom_unit_typeT__1_0_0_1_0_t swig_types[24]
#define SWIGTYPE_p_custom_unit_typeT__4_0_2_0_0_t swig_types[25]
#define SWIGTYPE_p_double swig_types[26]
#define SWIGTYPE_p_first_type swig_types[27]
#define SWIGTYPE_p_int_t swig_types[28]
#define SWIGTYPE_p_lens_source_pair swig_types[29]
#define SWIGTYPE_p_second_type swig_types[30]
#define SWIGTYPE_p_ssize_t swig_types[31]
#define SWIGTYPE_p_std__invalid_argument swig_types[32]
#define SWIGTYPE_p_std__istream swig_types[33]
#define SWIGTYPE_p_std__ostream swig_types[34]
#define SWIGTYPE_p_std__string swig_types[35]
#define SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t swig_types[36]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t swig_types[37]
#define SWIGTYPE_p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t swig_types[38]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[39]
#define SWIGTYPE_p_unitconv_map swig_types[40]
static swig_type_info *swig_types[42];
static swig_module_info swig_module = {swig_types, 41, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _cIceBRGpy.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__cIceBRGpy

#else
#  define SWIG_init    init_cIceBRGpy

#endif
#define SWIG_name    "_cIceBRGpy"

#define SWIGVERSION 0x030005 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>


#include <stddef.h>


#include <utility>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
#if PY_VERSION_HEX >= 0x03000000
      {
        long v = PyLong_AsLong(obj);
        if (!PyErr_Occurred()) {
          if (v < 0) {
            return SWIG_OverflowError;
          }
        } else {
          PyErr_Clear();
        }
      }
#endif
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <algorithm>


#include <vector>


#define SWIG_FILE_WITH_INIT


#ifndef SWIG_FILE_WITH_INIT
#define NO_IMPORT_ARRAY
#endif
#include "stdio.h"
#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION
#include <numpy/arrayobject.h>


#include <complex> 


#if NPY_API_VERSION < 0x00000007
#define NPY_ARRAY_C_CONTIGUOUS NPY_C_CONTIGUOUS
#define NPY_ARRAY_F_CONTIGUOUS NPY_F_CONTIGUOUS
#define NPY_ARRAY_ALIGNED  NPY_ALIGNED
#endif


	 
	/* Include the headers in the wrapper code */
	
	#include <utility>
	
	#include "IceBRG_main/units/unit_conversions.hpp"

	#include "IceBRG_main/vector/rebin.hpp"

	template< typename T >
	std::pair<int,int> rebin_wrap( T * p_image,
			int ss_nx,
			int ss_ny,
			int x_offset=0,
			int y_offset=0,
			int subsampling_factor=5)
	{
		auto out_array = IceBRG::rebin(p_image,
							ss_nx,
							ss_ny,
							x_offset,
							y_offset,
							subsampling_factor);
		
		for(int i=0; i<ss_nx*ss_ny; ++i)
		{
			p_image[i] = 0;
		}
		
		int ncols = out_array.cols();
		int nrows = out_array.rows();

		for(int i=0; i<ncols; ++i)
		{
			for(int j=0; j<nrows; ++j)
			{
				p_image[j+i*ncols] = out_array(j,i);
			}
		}
		
		return std::make_pair(nrows,ncols);
	}

	#include "IceBRG_physics/abundance_matching.hpp"
	#include "IceBRG_physics/cluster_visibility.hpp"
	#include "IceBRG_physics/constants.hpp"
	#include "IceBRG_physics/cosmology.hpp"
	#include "IceBRG_physics/distance_measures.hpp"
	#include "IceBRG_physics/galaxy_visibility.hpp"
	#include "IceBRG_physics/luminosity.hpp"
	#include "IceBRG_physics/mass_function.hpp"

	#include "IceBRG_physics/detail/redshift_obj.hpp"
	#include "IceBRG_physics/density_profile/detail/density_profile.hpp"
	#include "IceBRG_physics/density_profile/point_mass_profile.hpp"
	#include "IceBRG_physics/density_profile/tNFW_profile.hpp"
	#include "IceBRG_physics/sky_obj/detail/sky_obj.hpp"
	#include "IceBRG_physics/sky_obj/galaxy.hpp"

	#include "IceBRG_lensing/detail/lensing_profile_extension.hpp"
	#include "IceBRG_lensing/detail/pair_bin_summary.hpp"
	#include "IceBRG_lensing/detail/pair_bin.hpp"
	#include "IceBRG_lensing/detail/pair_bins_summary.hpp"
	#include "IceBRG_lensing/detail/source_obj.hpp"
	#include "IceBRG_lensing/lens_source_pair.hpp"
	#include "IceBRG_lensing/lensing_tNFW_profile.hpp"
	#include "IceBRG_lensing/pair_binner.hpp"
	#include "IceBRG_lensing/source_galaxy.hpp"
	
	using namespace IceBRG;
	 


  #define SWIG_From_double   PyFloat_FromDouble 


#if NPY_API_VERSION < 0x00000007
#define NPY_ARRAY_DEFAULT NPY_DEFAULT
#define NPY_ARRAY_FARRAY  NPY_FARRAY
#define NPY_FORTRANORDER  NPY_FORTRAN
#endif


/* Macros to extract array attributes.
 */
#if NPY_API_VERSION < 0x00000007
#define is_array(a)            ((a) && PyArray_Check((PyArrayObject*)a))
#define array_type(a)          (int)(PyArray_TYPE((PyArrayObject*)a))
#define array_numdims(a)       (((PyArrayObject*)a)->nd)
#define array_dimensions(a)    (((PyArrayObject*)a)->dimensions)
#define array_size(a,i)        (((PyArrayObject*)a)->dimensions[i])
#define array_strides(a)       (((PyArrayObject*)a)->strides)
#define array_stride(a,i)      (((PyArrayObject*)a)->strides[i])
#define array_data(a)          (((PyArrayObject*)a)->data)
#define array_descr(a)         (((PyArrayObject*)a)->descr)
#define array_flags(a)         (((PyArrayObject*)a)->flags)
#define array_enableflags(a,f) (((PyArrayObject*)a)->flags) = f
#else
#define is_array(a)            ((a) && PyArray_Check(a))
#define array_type(a)          PyArray_TYPE((PyArrayObject*)a)
#define array_numdims(a)       PyArray_NDIM((PyArrayObject*)a)
#define array_dimensions(a)    PyArray_DIMS((PyArrayObject*)a)
#define array_strides(a)       PyArray_STRIDES((PyArrayObject*)a)
#define array_stride(a,i)      PyArray_STRIDE((PyArrayObject*)a,i)
#define array_size(a,i)        PyArray_DIM((PyArrayObject*)a,i)
#define array_data(a)          PyArray_DATA((PyArrayObject*)a)
#define array_descr(a)         PyArray_DESCR((PyArrayObject*)a)
#define array_flags(a)         PyArray_FLAGS((PyArrayObject*)a)
#define array_enableflags(a,f) PyArray_ENABLEFLAGS((PyArrayObject*)a,f)
#endif
#define array_is_contiguous(a) (PyArray_ISCONTIGUOUS((PyArrayObject*)a))
#define array_is_native(a)     (PyArray_ISNOTSWAPPED((PyArrayObject*)a))
#define array_is_fortran(a)    (PyArray_IS_F_CONTIGUOUS((PyArrayObject*)a))


  /* Given a PyObject, return a string describing its type.
   */
  const char* pytype_string(PyObject* py_obj)
  {
    if (py_obj == NULL          ) return "C NULL value";
    if (py_obj == Py_None       ) return "Python None" ;
    if (PyCallable_Check(py_obj)) return "callable"    ;
    if (PyString_Check(  py_obj)) return "string"      ;
    if (PyInt_Check(     py_obj)) return "int"         ;
    if (PyFloat_Check(   py_obj)) return "float"       ;
    if (PyDict_Check(    py_obj)) return "dict"        ;
    if (PyList_Check(    py_obj)) return "list"        ;
    if (PyTuple_Check(   py_obj)) return "tuple"       ;
#if PY_MAJOR_VERSION < 3
    if (PyFile_Check(    py_obj)) return "file"        ;
    if (PyModule_Check(  py_obj)) return "module"      ;
    if (PyInstance_Check(py_obj)) return "instance"    ;
#endif

    return "unknown type";
  }

  /* Given a NumPy typecode, return a string describing the type.
   */
  const char* typecode_string(int typecode)
  {
    static const char* type_names[25] = {"bool",
                                         "byte",
                                         "unsigned byte",
                                         "short",
                                         "unsigned short",
                                         "int",
                                         "unsigned int",
                                         "long",
                                         "unsigned long",
                                         "long long",
                                         "unsigned long long",
                                         "float",
                                         "double",
                                         "long double",
                                         "complex float",
                                         "complex double",
                                         "complex long double",
                                         "object",
                                         "string",
                                         "unicode",
                                         "void",
                                         "ntypes",
                                         "notype",
                                         "char",
                                         "unknown"};
    return typecode < 24 ? type_names[typecode] : type_names[24];
  }

  /* Make sure input has correct numpy type.  This now just calls
     PyArray_EquivTypenums().
   */
  int type_match(int actual_type,
                 int desired_type)
  {
    return PyArray_EquivTypenums(actual_type, desired_type);
  }

#ifdef SWIGPY_USE_CAPSULE
  void free_cap(PyObject * cap)
  {
    void* array = (void*) PyCapsule_GetPointer(cap,SWIGPY_CAPSULE_NAME);
    if (array != NULL) free(array);
  }
#endif




  /* Given a PyObject pointer, cast it to a PyArrayObject pointer if
   * legal.  If not, set the python error string appropriately and
   * return NULL.
   */
  PyArrayObject* obj_to_array_no_conversion(PyObject* input,
                                            int        typecode)
  {
    PyArrayObject* ary = NULL;
    if (is_array(input) && (typecode == NPY_NOTYPE ||
                            PyArray_EquivTypenums(array_type(input), typecode)))
    {
      ary = (PyArrayObject*) input;
    }
    else if is_array(input)
    {
      const char* desired_type = typecode_string(typecode);
      const char* actual_type  = typecode_string(array_type(input));
      PyErr_Format(PyExc_TypeError,
                   "Array of type '%s' required.  Array of type '%s' given",
                   desired_type, actual_type);
      ary = NULL;
    }
    else
    {
      const char* desired_type = typecode_string(typecode);
      const char* actual_type  = pytype_string(input);
      PyErr_Format(PyExc_TypeError,
                   "Array of type '%s' required.  A '%s' was given",
                   desired_type,
                   actual_type);
      ary = NULL;
    }
    return ary;
  }

  /* Convert the given PyObject to a NumPy array with the given
   * typecode.  On success, return a valid PyArrayObject* with the
   * correct type.  On failure, the python error string will be set and
   * the routine returns NULL.
   */
  PyArrayObject* obj_to_array_allow_conversion(PyObject* input,
                                               int       typecode,
                                               int*      is_new_object)
  {
    PyArrayObject* ary = NULL;
    PyObject*      py_obj;
    if (is_array(input) && (typecode == NPY_NOTYPE ||
                            PyArray_EquivTypenums(array_type(input),typecode)))
    {
      ary = (PyArrayObject*) input;
      *is_new_object = 0;
    }
    else
    {
      py_obj = PyArray_FROMANY(input, typecode, 0, 0, NPY_ARRAY_DEFAULT);
      /* If NULL, PyArray_FromObject will have set python error value.*/
      ary = (PyArrayObject*) py_obj;
      *is_new_object = 1;
    }
    return ary;
  }

  /* Given a PyArrayObject, check to see if it is contiguous.  If so,
   * return the input pointer and flag it as not a new object.  If it is
   * not contiguous, create a new PyArrayObject using the original data,
   * flag it as a new object and return the pointer.
   */
  PyArrayObject* make_contiguous(PyArrayObject* ary,
                                 int*           is_new_object,
                                 int            min_dims,
                                 int            max_dims)
  {
    PyArrayObject* result;
    if (array_is_contiguous(ary))
    {
      result = ary;
      *is_new_object = 0;
    }
    else
    {
      result = (PyArrayObject*) PyArray_ContiguousFromObject((PyObject*)ary,
                                                              array_type(ary),
                                                              min_dims,
                                                              max_dims);
      *is_new_object = 1;
    }
    return result;
  }

  /* Given a PyArrayObject, check to see if it is Fortran-contiguous.
   * If so, return the input pointer, but do not flag it as not a new
   * object.  If it is not Fortran-contiguous, create a new
   * PyArrayObject using the original data, flag it as a new object
   * and return the pointer.
   */
  PyArrayObject* make_fortran(PyArrayObject* ary,
                              int*           is_new_object)
  {
    PyArrayObject* result;
    if (array_is_fortran(ary))
    {
      result = ary;
      *is_new_object = 0;
    }
    else
    {
      Py_INCREF(array_descr(ary));
      result = (PyArrayObject*) PyArray_FromArray(ary,
                                                  array_descr(ary),
                                                  NPY_ARRAY_F_CONTIGUOUS);
      *is_new_object = 1;
    }
    return result;
  }

  /* Convert a given PyObject to a contiguous PyArrayObject of the
   * specified type.  If the input object is not a contiguous
   * PyArrayObject, a new one will be created and the new object flag
   * will be set.
   */
  PyArrayObject* obj_to_array_contiguous_allow_conversion(PyObject* input,
                                                          int       typecode,
                                                          int*      is_new_object)
  {
    int is_new1 = 0;
    int is_new2 = 0;
    PyArrayObject* ary2;
    PyArrayObject* ary1 = obj_to_array_allow_conversion(input,
                                                        typecode,
                                                        &is_new1);
    if (ary1)
    {
      ary2 = make_contiguous(ary1, &is_new2, 0, 0);
      if ( is_new1 && is_new2)
      {
        Py_DECREF(ary1);
      }
      ary1 = ary2;
    }
    *is_new_object = is_new1 || is_new2;
    return ary1;
  }

  /* Convert a given PyObject to a Fortran-ordered PyArrayObject of the
   * specified type.  If the input object is not a Fortran-ordered
   * PyArrayObject, a new one will be created and the new object flag
   * will be set.
   */
  PyArrayObject* obj_to_array_fortran_allow_conversion(PyObject* input,
                                                       int       typecode,
                                                       int*      is_new_object)
  {
    int is_new1 = 0;
    int is_new2 = 0;
    PyArrayObject* ary2;
    PyArrayObject* ary1 = obj_to_array_allow_conversion(input,
                                                        typecode,
                                                        &is_new1);
    if (ary1)
    {
      ary2 = make_fortran(ary1, &is_new2);
      if (is_new1 && is_new2)
      {
        Py_DECREF(ary1);
      }
      ary1 = ary2;
    }
    *is_new_object = is_new1 || is_new2;
    return ary1;
  }


  /* Test whether a python object is contiguous.  If array is
   * contiguous, return 1.  Otherwise, set the python error string and
   * return 0.
   */
  int require_contiguous(PyArrayObject* ary)
  {
    int contiguous = 1;
    if (!array_is_contiguous(ary))
    {
      PyErr_SetString(PyExc_TypeError,
                      "Array must be contiguous.  A non-contiguous array was given");
      contiguous = 0;
    }
    return contiguous;
  }

  /* Test whether a python object is (C_ or F_) contiguous.  If array is
   * contiguous, return 1.  Otherwise, set the python error string and
   * return 0.
   */
  int require_c_or_f_contiguous(PyArrayObject* ary)
  {
    int contiguous = 1;
    if (!(array_is_contiguous(ary) || array_is_fortran(ary)))
    {
      PyErr_SetString(PyExc_TypeError,
                      "Array must be contiguous (C_ or F_).  A non-contiguous array was given");
      contiguous = 0;
    }
    return contiguous;
  }

  /* Require that a numpy array is not byte-swapped.  If the array is
   * not byte-swapped, return 1.  Otherwise, set the python error string
   * and return 0.
   */
  int require_native(PyArrayObject* ary)
  {
    int native = 1;
    if (!array_is_native(ary))
    {
      PyErr_SetString(PyExc_TypeError,
                      "Array must have native byteorder.  "
                      "A byte-swapped array was given");
      native = 0;
    }
    return native;
  }

  /* Require the given PyArrayObject to have a specified number of
   * dimensions.  If the array has the specified number of dimensions,
   * return 1.  Otherwise, set the python error string and return 0.
   */
  int require_dimensions(PyArrayObject* ary,
                         int            exact_dimensions)
  {
    int success = 1;
    if (array_numdims(ary) != exact_dimensions)
    {
      PyErr_Format(PyExc_TypeError,
                   "Array must have %d dimensions.  Given array has %d dimensions",
                   exact_dimensions,
                   array_numdims(ary));
      success = 0;
    }
    return success;
  }

  /* Require the given PyArrayObject to have one of a list of specified
   * number of dimensions.  If the array has one of the specified number
   * of dimensions, return 1.  Otherwise, set the python error string
   * and return 0.
   */
  int require_dimensions_n(PyArrayObject* ary,
                           int*           exact_dimensions,
                           int            n)
  {
    int success = 0;
    int i;
    char dims_str[255] = "";
    char s[255];
    for (i = 0; i < n && !success; i++)
    {
      if (array_numdims(ary) == exact_dimensions[i])
      {
        success = 1;
      }
    }
    if (!success)
    {
      for (i = 0; i < n-1; i++)
      {
        sprintf(s, "%d, ", exact_dimensions[i]);
        strcat(dims_str,s);
      }
      sprintf(s, " or %d", exact_dimensions[n-1]);
      strcat(dims_str,s);
      PyErr_Format(PyExc_TypeError,
                   "Array must have %s dimensions.  Given array has %d dimensions",
                   dims_str,
                   array_numdims(ary));
    }
    return success;
  }

  /* Require the given PyArrayObject to have a specified shape.  If the
   * array has the specified shape, return 1.  Otherwise, set the python
   * error string and return 0.
   */
  int require_size(PyArrayObject* ary,
                   npy_intp*      size,
                   int            n)
  {
    int i;
    int success = 1;
    int len;
    char desired_dims[255] = "[";
    char s[255];
    char actual_dims[255] = "[";
    for(i=0; i < n;i++)
    {
      if (size[i] != -1 &&  size[i] != array_size(ary,i))
      {
        success = 0;
      }
    }
    if (!success)
    {
      for (i = 0; i < n; i++)
      {
        if (size[i] == -1)
        {
          sprintf(s, "*,");
        }
        else
        {
          sprintf(s, "%ld,", (long int)size[i]);
        }
        strcat(desired_dims,s);
      }
      len = strlen(desired_dims);
      desired_dims[len-1] = ']';
      for (i = 0; i < n; i++)
      {
        sprintf(s, "%ld,", (long int)array_size(ary,i));
        strcat(actual_dims,s);
      }
      len = strlen(actual_dims);
      actual_dims[len-1] = ']';
      PyErr_Format(PyExc_TypeError,
                   "Array must have shape of %s.  Given array has shape of %s",
                   desired_dims,
                   actual_dims);
    }
    return success;
  }

  /* Require the given PyArrayObject to to be Fortran ordered.  If the
   * the PyArrayObject is already Fortran ordered, do nothing.  Else,
   * set the Fortran ordering flag and recompute the strides.
   */
  int require_fortran(PyArrayObject* ary)
  {
    int success = 1;
    int nd = array_numdims(ary);
    int i;
    npy_intp * strides = array_strides(ary);
    if (array_is_fortran(ary)) return success;
    /* Set the Fortran ordered flag */
    array_enableflags(ary,NPY_ARRAY_FARRAY);
    /* Recompute the strides */
    strides[0] = strides[nd-1];
    for (i=1; i < nd; ++i)
      strides[i] = strides[i-1] * array_size(ary,i-1);
    return success;
  }




#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


namespace swig {
  template <> struct traits<int > {
    typedef value_category category;
    static const char* type_name() { return"int"; }
  };  
  template <>  struct traits_asval<int > {   
    typedef int value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_int (obj, val);
    }
  };
  template <>  struct traits_from<int > {
    typedef int value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_int  (val);
    }
  };
}


  namespace swig {

















































    template <class T, class U >
    struct traits_asptr<std::pair<T,U> >  {
      typedef std::pair<T,U> value_type;

      static int get_pair(PyObject* first, PyObject* second,
			  std::pair<T,U> **val) 
      {
	if (val) {
	  value_type *vp = (new std::pair<T,U>);
	  T *pfirst = &(vp->first);
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) return res1;
	  U *psecond = &(vp->second);
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) return res2;
	  *val = vp;
	  return SWIG_AddNewMask(res1 > res2 ? res1 : res2);
	} else {
	  T *pfirst = 0;
	  int res1 = swig::asval((PyObject*)first, pfirst);
	  if (!SWIG_IsOK(res1)) return res1;
	  U *psecond = 0;
	  int res2 = swig::asval((PyObject*)second, psecond);
	  if (!SWIG_IsOK(res2)) return res2;
	  return res1 > res2 ? res1 : res2;
	}	
      }

      static int asptr(PyObject *obj, std::pair<T,U> **val) {
	int res = SWIG_ERROR;
	if (PyTuple_Check(obj)) {
	  if (PyTuple_GET_SIZE(obj) == 2) {
	    res = get_pair(PyTuple_GET_ITEM(obj,0),PyTuple_GET_ITEM(obj,1), val);
	  }
	} else if (PySequence_Check(obj)) {
	  if (PySequence_Size(obj) == 2) {
	    swig::SwigVar_PyObject first = PySequence_GetItem(obj,0);
	    swig::SwigVar_PyObject second = PySequence_GetItem(obj,1);
	    res = get_pair(first, second, val);
	  }
	} else {
	  value_type *p;
	  res = SWIG_ConvertPtr(obj,(void**)&p,swig::type_info<value_type>(),0);
	  if (SWIG_IsOK(res) && val)  *val = p;
	}
	return res;
      }
    };


    template <class T, class U >
    struct traits_from<std::pair<T,U> >   {
      static PyObject *from(const std::pair<T,U>& val) {
	PyObject* obj = PyTuple_New(2);
	PyTuple_SetItem(obj,0,swig::from(val.first));
	PyTuple_SetItem(obj,1,swig::from(val.second));
	return obj;
      }
    };
  }





































      namespace swig {
	template <>  struct traits<std::pair<int,int > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::pair<" "int" "," "int" " >";
	  }
	};
      }
    

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< int >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_mtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtomm_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtomm is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtomm_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtomm));
  return pyobj;
}


SWIGINTERN int Swig_var_mmtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mmtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mmtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mmtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtocm_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtocm is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtocm_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtocm));
  return pyobj;
}


SWIGINTERN int Swig_var_cmtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable cmtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_cmtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::cmtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoum_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoum is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoum_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoum));
  return pyobj;
}


SWIGINTERN int Swig_var_umtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable umtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_umtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::umtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtonm_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtonm is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtonm_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtonm));
  return pyobj;
}


SWIGINTERN int Swig_var_nmtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable nmtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_nmtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::nmtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoangstrom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoangstrom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoangstrom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoangstrom));
  return pyobj;
}


SWIGINTERN int Swig_var_angstromtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable angstromtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_angstromtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::angstromtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtokm_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtokm is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtokm_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtokm));
  return pyobj;
}


SWIGINTERN int Swig_var_kmtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kmtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kmtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kmtom));
  return pyobj;
}


SWIGINTERN int Swig_var_ltyrtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ltyrtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ltyrtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::ltyrtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoltyr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoltyr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoltyr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoltyr));
  return pyobj;
}


SWIGINTERN int Swig_var_AUtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable AUtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_AUtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::AUtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoAU_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoAU is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoAU_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoAU));
  return pyobj;
}


SWIGINTERN int Swig_var_pctom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable pctom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_pctom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::pctom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtopc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtopc is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtopc_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtopc));
  return pyobj;
}


SWIGINTERN int Swig_var_kpctom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kpctom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kpctom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kpctom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtokpc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtokpc is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtokpc_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtokpc));
  return pyobj;
}


SWIGINTERN int Swig_var_Mpctom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Mpctom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Mpctom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Mpctom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoMpc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoMpc is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoMpc_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoMpc));
  return pyobj;
}


SWIGINTERN int Swig_var_mitom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mitom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mitom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mitom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtomi_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtomi is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtomi_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtomi));
  return pyobj;
}


SWIGINTERN int Swig_var_Mmitom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Mmitom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Mmitom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Mmitom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoMmi_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoMmi is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoMmi_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoMmi));
  return pyobj;
}


SWIGINTERN int Swig_var_fttom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable fttom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_fttom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::fttom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoft_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoft is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoft_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoft));
  return pyobj;
}


SWIGINTERN int Swig_var_intom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable intom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_intom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::intom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoin_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoin is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoin_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoin));
  return pyobj;
}


SWIGINTERN int Swig_var_ydtom_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ydtom is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ydtom_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::ydtom));
  return pyobj;
}


SWIGINTERN int Swig_var_mtoyd_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mtoyd is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mtoyd_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mtoyd));
  return pyobj;
}


SWIGINTERN int Swig_var_stos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stos));
  return pyobj;
}


SWIGINTERN int Swig_var_stocs_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stocs is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stocs_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stocs));
  return pyobj;
}


SWIGINTERN int Swig_var_cstos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable cstos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_cstos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::cstos));
  return pyobj;
}


SWIGINTERN int Swig_var_stoms_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stoms is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stoms_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stoms));
  return pyobj;
}


SWIGINTERN int Swig_var_mstos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mstos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mstos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mstos));
  return pyobj;
}


SWIGINTERN int Swig_var_stous_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stous is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stous_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stous));
  return pyobj;
}


SWIGINTERN int Swig_var_ustos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ustos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ustos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::ustos));
  return pyobj;
}


SWIGINTERN int Swig_var_stons_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stons is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stons_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stons));
  return pyobj;
}


SWIGINTERN int Swig_var_nstos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable nstos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_nstos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::nstos));
  return pyobj;
}


SWIGINTERN int Swig_var_mintos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mintos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mintos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mintos));
  return pyobj;
}


SWIGINTERN int Swig_var_stomin_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stomin is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stomin_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stomin));
  return pyobj;
}


SWIGINTERN int Swig_var_hrtos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable hrtos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_hrtos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::hrtos));
  return pyobj;
}


SWIGINTERN int Swig_var_stohr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stohr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stohr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stohr));
  return pyobj;
}


SWIGINTERN int Swig_var_daytos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable daytos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_daytos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::daytos));
  return pyobj;
}


SWIGINTERN int Swig_var_stoday_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stoday is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stoday_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stoday));
  return pyobj;
}


SWIGINTERN int Swig_var_weektos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable weektos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_weektos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::weektos));
  return pyobj;
}


SWIGINTERN int Swig_var_stoweek_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stoweek is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stoweek_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stoweek));
  return pyobj;
}


SWIGINTERN int Swig_var_yrtos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable yrtos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_yrtos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::yrtos));
  return pyobj;
}


SWIGINTERN int Swig_var_stoyr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stoyr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stoyr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stoyr));
  return pyobj;
}


SWIGINTERN int Swig_var_monthtos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable monthtos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_monthtos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::monthtos));
  return pyobj;
}


SWIGINTERN int Swig_var_stomonth_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stomonth is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stomonth_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stomonth));
  return pyobj;
}


SWIGINTERN int Swig_var_kyrtos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kyrtos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kyrtos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kyrtos));
  return pyobj;
}


SWIGINTERN int Swig_var_stokyr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stokyr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stokyr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stokyr));
  return pyobj;
}


SWIGINTERN int Swig_var_Myrtos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Myrtos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Myrtos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Myrtos));
  return pyobj;
}


SWIGINTERN int Swig_var_stoMyr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stoMyr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stoMyr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stoMyr));
  return pyobj;
}


SWIGINTERN int Swig_var_Gyrtos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Gyrtos is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Gyrtos_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Gyrtos));
  return pyobj;
}


SWIGINTERN int Swig_var_stoGyr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable stoGyr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_stoGyr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::stoGyr));
  return pyobj;
}


SWIGINTERN int Swig_var_mpstomps_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mpstomps is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mpstomps_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mpstomps));
  return pyobj;
}


SWIGINTERN int Swig_var_mpstokmps_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mpstokmps is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mpstokmps_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mpstokmps));
  return pyobj;
}


SWIGINTERN int Swig_var_kmpstomps_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kmpstomps is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kmpstomps_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kmpstomps));
  return pyobj;
}


SWIGINTERN int Swig_var_ctomps_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ctomps is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ctomps_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::ctomps));
  return pyobj;
}


SWIGINTERN int Swig_var_mpstoc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mpstoc is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mpstoc_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mpstoc));
  return pyobj;
}


SWIGINTERN int Swig_var_mpstomiphr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mpstomiphr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mpstomiphr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::mpstomiphr));
  return pyobj;
}


SWIGINTERN int Swig_var_miphr_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable miphr is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_miphr_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::miphr));
  return pyobj;
}


SWIGINTERN int Swig_var_kgtokg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kgtokg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kgtokg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kgtokg));
  return pyobj;
}


SWIGINTERN int Swig_var_kgtogm_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kgtogm is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kgtogm_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kgtogm));
  return pyobj;
}


SWIGINTERN int Swig_var_gmtokg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable gmtokg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_gmtokg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::gmtokg));
  return pyobj;
}


SWIGINTERN int Swig_var_Mearthtokg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Mearthtokg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Mearthtokg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Mearthtokg));
  return pyobj;
}


SWIGINTERN int Swig_var_kgtoMearth_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kgtoMearth is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kgtoMearth_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kgtoMearth));
  return pyobj;
}


SWIGINTERN int Swig_var_Msuntokg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Msuntokg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Msuntokg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Msuntokg));
  return pyobj;
}


SWIGINTERN int Swig_var_kgtoMsun_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kgtoMsun is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kgtoMsun_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kgtoMsun));
  return pyobj;
}


SWIGINTERN int Swig_var_kgtottMsun_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable kgtottMsun is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_kgtottMsun_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::kgtottMsun));
  return pyobj;
}


SWIGINTERN int Swig_var_ttMsuntokg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ttMsuntokg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_ttMsuntokg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::ttMsuntokg));
  return pyobj;
}


SWIGINTERN int Swig_var_KtoK_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable KtoK is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_KtoK_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::KtoK));
  return pyobj;
}


SWIGINTERN int Swig_var_KtodegF_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable KtodegF is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_KtodegF_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::KtodegF));
  return pyobj;
}


SWIGINTERN int Swig_var_degCtoK_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degCtoK is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degCtoK_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degCtoK));
  return pyobj;
}


SWIGINTERN int Swig_var_KtodegC_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable KtodegC is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_KtodegC_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::KtodegC));
  return pyobj;
}


SWIGINTERN int Swig_var_degFtoK_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degFtoK is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degFtoK_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degFtoK));
  return pyobj;
}


SWIGINTERN int Swig_var_degCtodegF_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degCtodegF is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degCtodegF_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degCtodegF));
  return pyobj;
}


SWIGINTERN int Swig_var_degFtodegC_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degFtodegC is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degFtodegC_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degFtodegC));
  return pyobj;
}


SWIGINTERN int Swig_var_KtodegR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable KtodegR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_KtodegR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::KtodegR));
  return pyobj;
}


SWIGINTERN int Swig_var_degRtoK_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degRtoK is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degRtoK_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degRtoK));
  return pyobj;
}


SWIGINTERN int Swig_var_degCtodegR_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degCtodegR is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degCtodegR_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degCtodegR));
  return pyobj;
}


SWIGINTERN int Swig_var_degRtodegC_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degRtodegC is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degRtodegC_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degRtodegC));
  return pyobj;
}


SWIGINTERN int Swig_var_radtorad_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable radtorad is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_radtorad_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::radtorad));
  return pyobj;
}


SWIGINTERN int Swig_var_degtorad_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degtorad is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degtorad_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degtorad));
  return pyobj;
}


SWIGINTERN int Swig_var_radtodeg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable radtodeg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_radtodeg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::radtodeg));
  return pyobj;
}


SWIGINTERN int Swig_var_degtoamin_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degtoamin is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degtoamin_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degtoamin));
  return pyobj;
}


SWIGINTERN int Swig_var_amintodeg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable amintodeg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_amintodeg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::amintodeg));
  return pyobj;
}


SWIGINTERN int Swig_var_amintoasec_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable amintoasec is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_amintoasec_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::amintoasec));
  return pyobj;
}


SWIGINTERN int Swig_var_asectoamin_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable asectoamin is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_asectoamin_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::asectoamin));
  return pyobj;
}


SWIGINTERN int Swig_var_asectodeg_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable asectodeg is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_asectodeg_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::asectodeg));
  return pyobj;
}


SWIGINTERN int Swig_var_degtoasec_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable degtoasec is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_degtoasec_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::degtoasec));
  return pyobj;
}


SWIGINTERN int Swig_var_amintorad_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable amintorad is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_amintorad_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::amintorad));
  return pyobj;
}


SWIGINTERN int Swig_var_radtoamin_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable radtoamin is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_radtoamin_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::radtoamin));
  return pyobj;
}


SWIGINTERN int Swig_var_asectorad_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable asectorad is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_asectorad_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::asectorad));
  return pyobj;
}


SWIGINTERN int Swig_var_radtoasec_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable radtoasec is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_radtoasec_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::radtoasec));
  return pyobj;
}


SWIGINTERN int Swig_var_CtoC_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable CtoC is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_CtoC_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::CtoC));
  return pyobj;
}


SWIGINTERN int Swig_var_Ctoesu_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Ctoesu is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Ctoesu_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::Ctoesu));
  return pyobj;
}


SWIGINTERN int Swig_var_esutoC_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable esutoC is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_esutoC_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::unitconv::esutoC));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_rebin_int__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:rebin_int",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_INT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_int" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_int" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj3, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "rebin_int" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = rebin_wrap< int >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_int__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:rebin_int",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_INT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_int" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_int" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = rebin_wrap< int >(arg1,arg2,arg3,arg4,arg5);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_int__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rebin_int",&obj0,&obj1)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_INT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_int" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = rebin_wrap< int >(arg1,arg2,arg3,arg4);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_int__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  int arg2 ;
  int arg3 ;
  PyArrayObject *array1 = NULL ;
  PyObject * obj0 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rebin_int",&obj0)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_INT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  result = rebin_wrap< int >(arg1,arg2,arg3);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_int(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_INT);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_rebin_int__SWIG_3(self, args);
      }
      if (argc <= 2) {
        return _wrap_rebin_int__SWIG_3(self, args);
      }
      return _wrap_rebin_int__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_INT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_rebin_int__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_INT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_rebin_int__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_INT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_rebin_int__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rebin_int'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    rebin_wrap< int >(int *,int,int,int,int,int)\n"
    "    rebin_wrap< int >(int *,int,int,int,int)\n"
    "    rebin_wrap< int >(int *,int,int,int)\n"
    "    rebin_wrap< int >(int *,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_rebin_long__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long *arg1 = (long *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:rebin_long",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_LONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_long" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_long" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj3, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "rebin_long" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = rebin_wrap< long >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_long__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long *arg1 = (long *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:rebin_long",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_LONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_long" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_long" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = rebin_wrap< long >(arg1,arg2,arg3,arg4,arg5);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_long__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long *arg1 = (long *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rebin_long",&obj0,&obj1)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_LONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_long" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = rebin_wrap< long >(arg1,arg2,arg3,arg4);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_long__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  long *arg1 = (long *) 0 ;
  int arg2 ;
  int arg3 ;
  PyArrayObject *array1 = NULL ;
  PyObject * obj0 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rebin_long",&obj0)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_LONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  result = rebin_wrap< long >(arg1,arg2,arg3);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_long(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_LONG);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_rebin_long__SWIG_3(self, args);
      }
      if (argc <= 2) {
        return _wrap_rebin_long__SWIG_3(self, args);
      }
      return _wrap_rebin_long__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_LONG);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_rebin_long__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_LONG);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_rebin_long__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_LONG);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_rebin_long__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rebin_long'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    rebin_wrap< long >(long *,int,int,int,int,int)\n"
    "    rebin_wrap< long >(long *,int,int,int,int)\n"
    "    rebin_wrap< long >(long *,int,int,int)\n"
    "    rebin_wrap< long >(long *,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_rebin_uint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:rebin_uint",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_UINT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_uint" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_uint" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj3, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "rebin_uint" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = rebin_wrap< unsigned int >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_uint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:rebin_uint",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_UINT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_uint" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_uint" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = rebin_wrap< unsigned int >(arg1,arg2,arg3,arg4,arg5);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_uint__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rebin_uint",&obj0,&obj1)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_UINT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_uint" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = rebin_wrap< unsigned int >(arg1,arg2,arg3,arg4);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_uint__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  int arg2 ;
  int arg3 ;
  PyArrayObject *array1 = NULL ;
  PyObject * obj0 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rebin_uint",&obj0)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_UINT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned int*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  result = rebin_wrap< unsigned int >(arg1,arg2,arg3);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_uint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_UINT);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_rebin_uint__SWIG_3(self, args);
      }
      if (argc <= 2) {
        return _wrap_rebin_uint__SWIG_3(self, args);
      }
      return _wrap_rebin_uint__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_UINT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_rebin_uint__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_UINT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_rebin_uint__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_UINT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_rebin_uint__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rebin_uint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    rebin_wrap< unsigned int >(unsigned int *,int,int,int,int,int)\n"
    "    rebin_wrap< unsigned int >(unsigned int *,int,int,int,int)\n"
    "    rebin_wrap< unsigned int >(unsigned int *,int,int,int)\n"
    "    rebin_wrap< unsigned int >(unsigned int *,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_rebin_ulong__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long *arg1 = (unsigned long *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:rebin_ulong",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_ULONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_ulong" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_ulong" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj3, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "rebin_ulong" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = rebin_wrap< unsigned long >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_ulong__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long *arg1 = (unsigned long *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:rebin_ulong",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_ULONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_ulong" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_ulong" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = rebin_wrap< unsigned long >(arg1,arg2,arg3,arg4,arg5);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_ulong__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long *arg1 = (unsigned long *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rebin_ulong",&obj0,&obj1)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_ULONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_ulong" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = rebin_wrap< unsigned long >(arg1,arg2,arg3,arg4);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_ulong__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long *arg1 = (unsigned long *) 0 ;
  int arg2 ;
  int arg3 ;
  PyArrayObject *array1 = NULL ;
  PyObject * obj0 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rebin_ulong",&obj0)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_ULONG);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (unsigned long*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  result = rebin_wrap< unsigned long >(arg1,arg2,arg3);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_ulong(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_ULONG);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_rebin_ulong__SWIG_3(self, args);
      }
      if (argc <= 2) {
        return _wrap_rebin_ulong__SWIG_3(self, args);
      }
      return _wrap_rebin_ulong__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_ULONG);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_rebin_ulong__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_ULONG);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_rebin_ulong__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_ULONG);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_rebin_ulong__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rebin_ulong'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    rebin_wrap< unsigned long >(unsigned long *,int,int,int,int,int)\n"
    "    rebin_wrap< unsigned long >(unsigned long *,int,int,int,int)\n"
    "    rebin_wrap< unsigned long >(unsigned long *,int,int,int)\n"
    "    rebin_wrap< unsigned long >(unsigned long *,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_rebin_float__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:rebin_float",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_FLOAT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (float*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_float" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_float" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj3, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "rebin_float" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = rebin_wrap< float >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_float__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:rebin_float",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_FLOAT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (float*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_float" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_float" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = rebin_wrap< float >(arg1,arg2,arg3,arg4,arg5);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_float__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rebin_float",&obj0,&obj1)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_FLOAT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (float*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_float" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = rebin_wrap< float >(arg1,arg2,arg3,arg4);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_float__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) 0 ;
  int arg2 ;
  int arg3 ;
  PyArrayObject *array1 = NULL ;
  PyObject * obj0 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rebin_float",&obj0)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_FLOAT);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (float*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  result = rebin_wrap< float >(arg1,arg2,arg3);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_float(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_FLOAT);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_rebin_float__SWIG_3(self, args);
      }
      if (argc <= 2) {
        return _wrap_rebin_float__SWIG_3(self, args);
      }
      return _wrap_rebin_float__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_FLOAT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_rebin_float__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_FLOAT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_rebin_float__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_FLOAT);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_rebin_float__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rebin_float'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    rebin_wrap< float >(float *,int,int,int,int,int)\n"
    "    rebin_wrap< float >(float *,int,int,int,int)\n"
    "    rebin_wrap< float >(float *,int,int,int)\n"
    "    rebin_wrap< float >(float *,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_rebin_double__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  int arg6 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:rebin_double",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_DOUBLE);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (double*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_double" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_double" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(obj3, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "rebin_double" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  result = rebin_wrap< double >(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_double__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:rebin_double",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_DOUBLE);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (double*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_double" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(obj2, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "rebin_double" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = rebin_wrap< double >(arg1,arg2,arg3,arg4,arg5);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_double__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  PyArrayObject *array1 = NULL ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:rebin_double",&obj0,&obj1)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_DOUBLE);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (double*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  ecode4 = SWIG_AsVal_int(obj1, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "rebin_double" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = rebin_wrap< double >(arg1,arg2,arg3,arg4);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_double__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) 0 ;
  int arg2 ;
  int arg3 ;
  PyArrayObject *array1 = NULL ;
  PyObject * obj0 = 0 ;
  std::pair< int,int > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rebin_double",&obj0)) SWIG_fail;
  {
    array1 = obj_to_array_no_conversion(obj0, NPY_DOUBLE);
    if (!array1 || !require_dimensions(array1,2) || !require_contiguous(array1)
      || !require_native(array1)) SWIG_fail;
    arg1 = (double*) array_data(array1);
    arg2 = (int) array_size(array1,0);
    arg3 = (int) array_size(array1,1);
  }
  result = rebin_wrap< double >(arg1,arg2,arg3);
  resultobj = swig::from(static_cast< std::pair<int,int > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rebin_double(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_DOUBLE);
    }
    if (_v) {
      if (argc <= 1) {
        return _wrap_rebin_double__SWIG_3(self, args);
      }
      if (argc <= 2) {
        return _wrap_rebin_double__SWIG_3(self, args);
      }
      return _wrap_rebin_double__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_DOUBLE);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_rebin_double__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_DOUBLE);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_rebin_double__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = is_array(argv[0]) && PyArray_EquivTypenums(array_type(argv[0]),
        NPY_DOUBLE);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_rebin_double__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rebin_double'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    rebin_wrap< double >(double *,int,int,int,int,int)\n"
    "    rebin_wrap< double >(double *,int,int,int,int)\n"
    "    rebin_wrap< double >(double *,int,int,int)\n"
    "    rebin_wrap< double >(double *,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_get_abs_mag_B_from_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:get_abs_mag_B_from_mass",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "get_abs_mag_B_from_mass" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "get_abs_mag_B_from_mass" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::get_abs_mag_B_from_mass((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_get_mass_from_abs_mag_B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:get_mass_from_abs_mag_B",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "get_mass_from_abs_mag_B" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "get_mass_from_abs_mag_B" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (mass_type)IceBRG::get_mass_from_abs_mag_B((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_get_app_mag_B_from_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:get_app_mag_B_from_mass",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "get_app_mag_B_from_mass" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "get_app_mag_B_from_mass" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::get_app_mag_B_from_mass((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_get_mass_from_app_mag_B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:get_mass_from_app_mag_B",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "get_mass_from_app_mag_B" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "get_mass_from_app_mag_B" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (mass_type)IceBRG::get_mass_from_app_mag_B((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cluster_richness__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:cluster_richness",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "cluster_richness" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "cluster_richness" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "cluster_richness" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "cluster_richness" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (flt_t)IceBRG::cluster_richness((double const &)*arg1,(double const &)*arg2,(double const &)*arg3,(double const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cluster_richness__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:cluster_richness",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "cluster_richness" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "cluster_richness" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "cluster_richness" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)IceBRG::cluster_richness((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cluster_richness__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:cluster_richness",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "cluster_richness" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "cluster_richness" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::cluster_richness((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_cluster_richness(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_cluster_richness__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_cluster_richness__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_cluster_richness__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'cluster_richness'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::cluster_richness(mass_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::cluster_richness(mass_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::cluster_richness(mass_type const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_min_cluster_mass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:min_cluster_mass",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "min_cluster_mass" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "min_cluster_mass" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "min_cluster_mass" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (mass_type)IceBRG::min_cluster_mass((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_min_cluster_mass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:min_cluster_mass",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "min_cluster_mass" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "min_cluster_mass" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (mass_type)IceBRG::min_cluster_mass((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_min_cluster_mass__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:min_cluster_mass",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "min_cluster_mass" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (mass_type)IceBRG::min_cluster_mass((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_min_cluster_mass(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_min_cluster_mass__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_min_cluster_mass__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_min_cluster_mass__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'min_cluster_mass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::min_cluster_mass(flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::min_cluster_mass(flt_t const &,flt_t const &)\n"
    "    IceBRG::min_cluster_mass(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_cluster_angular_density_at_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_square_angle_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:cluster_angular_density_at_z",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "cluster_angular_density_at_z" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (inverse_square_angle_type)IceBRG::cluster_angular_density_at_z((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_clusters__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  square_angle_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  square_angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:visible_clusters",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "visible_clusters" "', argument " "1"" of type '" "square_angle_type""'");
  } 
  temp1 = static_cast< square_angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "visible_clusters" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "visible_clusters" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)IceBRG::visible_clusters((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_clusters__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  square_angle_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  square_angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visible_clusters",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "visible_clusters" "', argument " "1"" of type '" "square_angle_type""'");
  } 
  temp1 = static_cast< square_angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "visible_clusters" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::visible_clusters((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_clusters__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  square_angle_type *arg1 = 0 ;
  square_angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:visible_clusters",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "visible_clusters" "', argument " "1"" of type '" "square_angle_type""'");
  } 
  temp1 = static_cast< square_angle_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::visible_clusters((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_clusters(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_visible_clusters__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_visible_clusters__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_visible_clusters__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'visible_clusters'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::visible_clusters(square_angle_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::visible_clusters(square_angle_type const &,flt_t const &)\n"
    "    IceBRG::visible_clusters(square_angle_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_integrate_mean_cluster_richness_at_redshift(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:integrate_mean_cluster_richness_at_redshift",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_mean_cluster_richness_at_redshift" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::integrate_mean_cluster_richness_at_redshift((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_mean_cluster_richness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrate_mean_cluster_richness",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_mean_cluster_richness" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_mean_cluster_richness" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::integrate_mean_cluster_richness((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mean_cluster_richness_at_redshift(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:mean_cluster_richness_at_redshift",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mean_cluster_richness_at_redshift" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::mean_cluster_richness_at_redshift((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mean_cluster_richness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:mean_cluster_richness",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mean_cluster_richness" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mean_cluster_richness" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::mean_cluster_richness((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_Gc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Gc is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Gc_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::Gc));
  return pyobj;
}


SWIGINTERN int Swig_var_c_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable c is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_c_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::c));
  return pyobj;
}


SWIGINTERN int Swig_var_t_present_day_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable t_present_day is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_t_present_day_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::t_present_day));
  return pyobj;
}


SWIGINTERN int Swig_var_H_0_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable H_0 is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_H_0_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::H_0));
  return pyobj;
}


SWIGINTERN int Swig_var_h_0_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable h_0 is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_h_0_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::h_0));
  return pyobj;
}


SWIGINTERN int Swig_var_Omega_m_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Omega_m is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Omega_m_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::Omega_m));
  return pyobj;
}


SWIGINTERN int Swig_var_Omega_r_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Omega_r is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Omega_r_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::Omega_r));
  return pyobj;
}


SWIGINTERN int Swig_var_Omega_k_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Omega_k is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Omega_k_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::Omega_k));
  return pyobj;
}


SWIGINTERN int Swig_var_Omega_l_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Omega_l is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Omega_l_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::Omega_l));
  return pyobj;
}


SWIGINTERN int Swig_var_Omega_b_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable Omega_b is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_Omega_b_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::Omega_b));
  return pyobj;
}


SWIGINTERN int Swig_var_sigma_8_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable sigma_8 is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_sigma_8_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::sigma_8));
  return pyobj;
}


SWIGINTERN int Swig_var_n_s_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable n_s is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_n_s_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::n_s));
  return pyobj;
}


SWIGINTERN int Swig_var_default_c_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable default_c is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_default_c_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::default_c));
  return pyobj;
}


SWIGINTERN int Swig_var_default_tau_factor_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable default_tau_factor is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_default_tau_factor_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::default_tau_factor));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_H(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:H",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "H" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (inverse_time_type)IceBRG::H((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rho_bar__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:rho_bar",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "rho_bar" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (density_type)IceBRG::rho_bar((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rho_bar__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)":rho_bar")) SWIG_fail;
  result = (density_type)IceBRG::rho_bar();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_rho_bar(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_rho_bar__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_rho_bar__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'rho_bar'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::rho_bar(flt_t const &)\n"
    "    IceBRG::rho_bar()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_zfa(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:zfa",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "zfa" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::zfa((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_afz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:afz",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "afz" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::afz((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tfz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tfz",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tfz" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (time_type)IceBRG::tfz((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tfa(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tfa",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "tfa" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (time_type)IceBRG::tfa((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_zft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  time_type *arg1 = 0 ;
  time_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:zft",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "zft" "', argument " "1"" of type '" "time_type""'");
  } 
  temp1 = static_cast< time_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::zft((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_aft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  time_type *arg1 = 0 ;
  time_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:aft",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "aft" "', argument " "1"" of type '" "time_type""'");
  } 
  temp1 = static_cast< time_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::aft((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_universe_age(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:universe_age",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "universe_age" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (time_type)IceBRG::universe_age((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrate_add",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_add" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_add" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (distance_type)IceBRG::integrate_add((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_cmd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrate_cmd",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_cmd" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_cmd" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (distance_type)IceBRG::integrate_cmd((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_Ld__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrate_Ld",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_Ld" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_Ld" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (distance_type)IceBRG::integrate_Ld((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_ltd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrate_ltd",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_ltd" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_ltd" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (distance_type)IceBRG::integrate_ltd((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:integrate_add",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_add" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (distance_type)IceBRG::integrate_add((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_add(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_integrate_add__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_integrate_add__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'integrate_add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::integrate_add(flt_t const &,flt_t const &)\n"
    "    IceBRG::integrate_add(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_integrate_cmd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:integrate_cmd",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_cmd" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (distance_type)IceBRG::integrate_cmd((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_cmd(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_integrate_cmd__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_integrate_cmd__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'integrate_cmd'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::integrate_cmd(flt_t const &,flt_t const &)\n"
    "    IceBRG::integrate_cmd(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_integrate_Ld__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:integrate_Ld",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_Ld" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (distance_type)IceBRG::integrate_Ld((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_Ld(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_integrate_Ld__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_integrate_Ld__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'integrate_Ld'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::integrate_Ld(flt_t const &,flt_t const &)\n"
    "    IceBRG::integrate_Ld(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_integrate_ltd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:integrate_ltd",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_ltd" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (distance_type)IceBRG::integrate_ltd((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_ltd(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_integrate_ltd__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_integrate_ltd__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'integrate_ltd'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::integrate_ltd(flt_t const &,flt_t const &)\n"
    "    IceBRG::integrate_ltd(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_integrate_distance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  int_t *arg3 = 0 ;
  int_t *arg4 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:integrate_distance",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_distance" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_distance" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "integrate_distance" "', argument " "3"" of type '" "int_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "integrate_distance" "', argument " "3"" of type '" "int_t const &""'"); 
  }
  arg3 = reinterpret_cast< int_t * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_int_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "integrate_distance" "', argument " "4"" of type '" "int_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "integrate_distance" "', argument " "4"" of type '" "int_t const &""'"); 
  }
  arg4 = reinterpret_cast< int_t * >(argp4);
  result = (distance_type)IceBRG::integrate_distance((double const &)*arg1,(double const &)*arg2,(int_t const &)*arg3,(int_t const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_distance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  int_t *arg3 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:integrate_distance",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_distance" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrate_distance" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "integrate_distance" "', argument " "3"" of type '" "int_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "integrate_distance" "', argument " "3"" of type '" "int_t const &""'"); 
  }
  arg3 = reinterpret_cast< int_t * >(argp3);
  result = (distance_type)IceBRG::integrate_distance((double const &)*arg1,(double const &)*arg2,(int_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrate_distance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_int_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_integrate_distance__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_int_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_int_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_integrate_distance__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'integrate_distance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::integrate_distance(flt_t const &,flt_t const &,int_t const &,int_t const &)\n"
    "    IceBRG::integrate_distance(flt_t const &,flt_t const &,int_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_sigma_crit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sigma_crit",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sigma_crit" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sigma_crit" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (surface_density_type)IceBRG::sigma_crit((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dfa__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< 1,0,0,-1,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:dfa",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dfa" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = IceBRG::dfa((double const &)*arg1);
  resultobj = SWIG_NewPointerObj((new custom_unit_type< 1,0,0,-1,0 >(static_cast< const custom_unit_type< 1,0,0,-1,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT_1_0_0__1_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dfa__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:dfa",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dfa" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dfa" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (distance_type)IceBRG::dfa((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dfa__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:dfa",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dfa" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dfa" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dfa" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (distance_type)IceBRG::dfa((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dfa__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  angle_type *arg3 = 0 ;
  angle_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  angle_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:dfa",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dfa" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dfa" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dfa" "', argument " "3"" of type '" "angle_type""'");
  } 
  temp3 = static_cast< angle_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "dfa" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dfa" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (distance_type)IceBRG::dfa((double const &)*arg1,(double const &)*arg2,(double const &)*arg3,(double const &)*arg4,(double const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_afd__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< -1,0,0,1,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:afd",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "afd" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = IceBRG::afd((double const &)*arg1);
  resultobj = SWIG_NewPointerObj((new custom_unit_type< -1,0,0,1,0 >(static_cast< const custom_unit_type< -1,0,0,1,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT__1_0_0_1_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_afd__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  angle_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:afd",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "afd" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "afd" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (angle_type)IceBRG::afd((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_afd__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  angle_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:afd",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "afd" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "afd" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "afd" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (angle_type)IceBRG::afd((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_afd__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  distance_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  distance_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  angle_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:afd",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "afd" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "afd" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "afd" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "afd" "', argument " "4"" of type '" "distance_type""'");
  } 
  temp4 = static_cast< distance_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "afd" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (angle_type)IceBRG::afd((double const &)*arg1,(double const &)*arg2,(double const &)*arg3,(double const &)*arg4,(double const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_afd(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_afd__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_afd__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_afd__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_afd__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'afd'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::afd(flt_t const &)\n"
    "    IceBRG::afd(distance_type const &,flt_t const &)\n"
    "    IceBRG::afd(distance_type const &,distance_type const &,flt_t const &)\n"
    "    IceBRG::afd(distance_type const &,distance_type const &,distance_type const &,distance_type const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ad_distance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t arg1 ;
  flt_t arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ad_distance",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ad_distance" "', argument " "1"" of type '" "flt_t""'");
  } 
  arg1 = static_cast< flt_t >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ad_distance" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  result = (distance_type)IceBRG::ad_distance(arg1,arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ad_distance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ad_distance",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ad_distance" "', argument " "1"" of type '" "flt_t""'");
  } 
  arg1 = static_cast< flt_t >(val1);
  result = (distance_type)IceBRG::ad_distance(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ad_distance(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_ad_distance__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ad_distance__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ad_distance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::ad_distance(flt_t,flt_t)\n"
    "    IceBRG::ad_distance(flt_t)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_comoving_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:comoving_distance",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "comoving_distance" "', argument " "1"" of type '" "flt_t""'");
  } 
  arg1 = static_cast< flt_t >(val1);
  result = (distance_type)IceBRG::comoving_distance(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_luminosity_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:luminosity_distance",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "luminosity_distance" "', argument " "1"" of type '" "flt_t""'");
  } 
  arg1 = static_cast< flt_t >(val1);
  result = (distance_type)IceBRG::luminosity_distance(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_comoving_volume_element(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:comoving_volume_element",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "comoving_volume_element" "', argument " "1"" of type '" "flt_t""'");
  } 
  arg1 = static_cast< flt_t >(val1);
  result = (volume_type)IceBRG::comoving_volume_element(arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_max_galaxy_abs_mag_B__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:max_galaxy_abs_mag_B",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "max_galaxy_abs_mag_B" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "max_galaxy_abs_mag_B" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::max_galaxy_abs_mag_B((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_max_galaxy_abs_mag_B__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:max_galaxy_abs_mag_B",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "max_galaxy_abs_mag_B" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::max_galaxy_abs_mag_B((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_max_galaxy_abs_mag_B(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_max_galaxy_abs_mag_B__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_max_galaxy_abs_mag_B__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'max_galaxy_abs_mag_B'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::max_galaxy_abs_mag_B(flt_t const &,flt_t const &)\n"
    "    IceBRG::max_galaxy_abs_mag_B(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_galaxy_angular_density_at_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_square_angle_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_angular_density_at_z",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "galaxy_angular_density_at_z" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (inverse_square_angle_type)IceBRG::galaxy_angular_density_at_z((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_galaxies__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  square_angle_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  square_angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:visible_galaxies",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "visible_galaxies" "', argument " "1"" of type '" "square_angle_type""'");
  } 
  temp1 = static_cast< square_angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "visible_galaxies" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "visible_galaxies" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)IceBRG::visible_galaxies((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_galaxies__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  square_angle_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  square_angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:visible_galaxies",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "visible_galaxies" "', argument " "1"" of type '" "square_angle_type""'");
  } 
  temp1 = static_cast< square_angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "visible_galaxies" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::visible_galaxies((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_galaxies__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  square_angle_type *arg1 = 0 ;
  square_angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:visible_galaxies",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "visible_galaxies" "', argument " "1"" of type '" "square_angle_type""'");
  } 
  temp1 = static_cast< square_angle_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::visible_galaxies((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_visible_galaxies(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_visible_galaxies__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_visible_galaxies__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_visible_galaxies__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'visible_galaxies'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::visible_galaxies(square_angle_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::visible_galaxies(square_angle_type const &,flt_t const &)\n"
    "    IceBRG::visible_galaxies(square_angle_type const &)\n");
  return 0;
}


SWIGINTERN int Swig_var_bright_abs_mag_i_max_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable bright_abs_mag_i_max is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_bright_abs_mag_i_max_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::bright_abs_mag_i_max));
  return pyobj;
}


SWIGINTERN int Swig_var_faint_app_mag_i_max_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable faint_app_mag_i_max is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_faint_app_mag_i_max_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::faint_app_mag_i_max));
  return pyobj;
}


SWIGINTERN int Swig_var_lum_func_min_abs_mag_B_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable lum_func_min_abs_mag_B is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_lum_func_min_abs_mag_B_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::lum_func_min_abs_mag_B));
  return pyobj;
}


SWIGINTERN int Swig_var_lum_func_max_abs_mag_B_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable lum_func_max_abs_mag_B is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_lum_func_max_abs_mag_B_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::lum_func_max_abs_mag_B));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_get_abs_mag_from_app_mag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:get_abs_mag_from_app_mag",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "get_abs_mag_from_app_mag" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "get_abs_mag_from_app_mag" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::get_abs_mag_from_app_mag((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_get_app_mag_from_abs_mag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:get_app_mag_from_abs_mag",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "get_app_mag_from_abs_mag" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "get_app_mag_from_abs_mag" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::get_app_mag_from_abs_mag((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_differential_luminosity_function(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:differential_luminosity_function",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "differential_luminosity_function" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (inverse_volume_type)IceBRG::differential_luminosity_function((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrated_luminosity_function(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  inverse_volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrated_luminosity_function",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrated_luminosity_function" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrated_luminosity_function" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (inverse_volume_type)IceBRG::integrated_luminosity_function((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_faint_bright_ratio__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:faint_bright_ratio",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "faint_bright_ratio" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "faint_bright_ratio" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "faint_bright_ratio" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)IceBRG::faint_bright_ratio((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_faint_bright_ratio__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:faint_bright_ratio",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "faint_bright_ratio" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "faint_bright_ratio" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::faint_bright_ratio((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_faint_bright_ratio__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:faint_bright_ratio",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "faint_bright_ratio" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::faint_bright_ratio((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_faint_bright_ratio(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_faint_bright_ratio__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_faint_bright_ratio__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_faint_bright_ratio__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'faint_bright_ratio'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::faint_bright_ratio(flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::faint_bright_ratio(flt_t const &,flt_t const &)\n"
    "    IceBRG::faint_bright_ratio(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_g_from_stellar_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_g_from_stellar_mass",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_g_from_stellar_mass" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_g_from_stellar_mass((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_stellar_mass_from_abs_mag_g(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_stellar_mass_from_abs_mag_g",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_stellar_mass_from_abs_mag_g" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (mass_type)IceBRG::estimate_stellar_mass_from_abs_mag_g((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_i_from_stellar_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_i_from_stellar_mass",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_i_from_stellar_mass" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_i_from_stellar_mass((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_stellar_mass_from_abs_mag_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_stellar_mass_from_abs_mag_i",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_stellar_mass_from_abs_mag_i" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (mass_type)IceBRG::estimate_stellar_mass_from_abs_mag_i((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_g_from_abs_mag_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_g_from_abs_mag_i",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_g_from_abs_mag_i" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_g_from_abs_mag_i((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_i_from_abs_mag_g(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_i_from_abs_mag_g",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_i_from_abs_mag_g" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_i_from_abs_mag_g((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_vis_from_abs_mag_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_vis_from_abs_mag_i",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_vis_from_abs_mag_i" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_vis_from_abs_mag_i((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_i_from_abs_mag_vis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_i_from_abs_mag_vis",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_i_from_abs_mag_vis" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_i_from_abs_mag_vis((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_vis_from_stellar_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_vis_from_stellar_mass",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_vis_from_stellar_mass" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_vis_from_stellar_mass((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_stellar_mass_from_abs_mag_vis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_stellar_mass_from_abs_mag_vis",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_stellar_mass_from_abs_mag_vis" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (mass_type)IceBRG::estimate_stellar_mass_from_abs_mag_vis((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_g_from_abs_mag_vis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_g_from_abs_mag_vis",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_g_from_abs_mag_vis" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_g_from_abs_mag_vis((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_estimate_abs_mag_vis_from_abs_mag_g(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:estimate_abs_mag_vis_from_abs_mag_g",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "estimate_abs_mag_vis_from_abs_mag_g" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::estimate_abs_mag_vis_from_abs_mag_g((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_mass_func_l10_min_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mass_func_l10_min is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mass_func_l10_min_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::mass_func_l10_min));
  return pyobj;
}


SWIGINTERN int Swig_var_mass_func_l10_max_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable mass_func_l10_max is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_mass_func_l10_max_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::mass_func_l10_max));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_unnormed_power_spectrum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  inverse_distance_type *arg1 = 0 ;
  inverse_distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unnormed_power_spectrum",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unnormed_power_spectrum" "', argument " "1"" of type '" "inverse_distance_type""'");
  } 
  temp1 = static_cast< inverse_distance_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::unnormed_power_spectrum((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delta_c__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delta_c",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "delta_c" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::delta_c((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delta_c__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)":delta_c")) SWIG_fail;
  result = (flt_t)IceBRG::delta_c();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delta_c(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_delta_c__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_delta_c__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'delta_c'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::delta_c(flt_t const &)\n"
    "    IceBRG::delta_c()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_r_of_m(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:r_of_m",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "r_of_m" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (distance_type)IceBRG::r_of_m((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sigma_of_r(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sigma_of_r",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sigma_of_r" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::sigma_of_r((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sigma_of_m(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sigma_of_m",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sigma_of_m" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::sigma_of_m((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_nu_of_m__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:nu_of_m",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "nu_of_m" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "nu_of_m" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)IceBRG::nu_of_m((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_nu_of_m__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:nu_of_m",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "nu_of_m" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (flt_t)IceBRG::nu_of_m((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_nu_of_m(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_nu_of_m__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_nu_of_m__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'nu_of_m'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::nu_of_m(mass_type const &,flt_t const &)\n"
    "    IceBRG::nu_of_m(mass_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_mass_function__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  inverse_volume_inverse_mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:mass_function",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mass_function" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "mass_function" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (inverse_volume_inverse_mass_type)IceBRG::mass_function((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mass_function__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_volume_inverse_mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:mass_function",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mass_function" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (inverse_volume_inverse_mass_type)IceBRG::mass_function((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mass_function(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_mass_function__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_mass_function__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'mass_function'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::mass_function(mass_type const &,flt_t const &)\n"
    "    IceBRG::mass_function(mass_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_log10_mass_function__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  inverse_volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:log10_mass_function",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "log10_mass_function" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "log10_mass_function" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (inverse_volume_type)IceBRG::log10_mass_function((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_log10_mass_function__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:log10_mass_function",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "log10_mass_function" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (inverse_volume_type)IceBRG::log10_mass_function((double const &)*arg1);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_log10_mass_function(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_log10_mass_function__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_log10_mass_function__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'log10_mass_function'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::log10_mass_function(flt_t const &,flt_t const &)\n"
    "    IceBRG::log10_mass_function(flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_integrated_log10_mass_function__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  inverse_volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:integrated_log10_mass_function",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrated_log10_mass_function" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrated_log10_mass_function" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "integrated_log10_mass_function" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (inverse_volume_type)IceBRG::integrated_log10_mass_function((double const &)*arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrated_log10_mass_function__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  inverse_volume_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:integrated_log10_mass_function",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrated_log10_mass_function" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "integrated_log10_mass_function" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (inverse_volume_type)IceBRG::integrated_log10_mass_function((double const &)*arg1,(double const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_integrated_log10_mass_function(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_integrated_log10_mass_function__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_integrated_log10_mass_function__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'integrated_log10_mass_function'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::integrated_log10_mass_function(flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::integrated_log10_mass_function(flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_redshift_obj__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_redshift_obj",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_redshift_obj" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_redshift_obj" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (IceBRG::redshift_obj *)new IceBRG::redshift_obj((flt_t const &)*arg1,(flt_t const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_redshift_obj__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  flt_t *arg1 = 0 ;
  flt_t temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_redshift_obj",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_redshift_obj" "', argument " "1"" of type '" "flt_t""'");
  } 
  temp1 = static_cast< flt_t >(val1);
  arg1 = &temp1;
  result = (IceBRG::redshift_obj *)new IceBRG::redshift_obj((flt_t const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_redshift_obj__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_redshift_obj")) SWIG_fail;
  result = (IceBRG::redshift_obj *)new IceBRG::redshift_obj();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_redshift_obj(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_redshift_obj__SWIG_2(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_redshift_obj__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_redshift_obj__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_redshift_obj'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::redshift_obj::redshift_obj(flt_t const &,flt_t const &)\n"
    "    IceBRG::redshift_obj::redshift_obj(flt_t const &)\n"
    "    IceBRG::redshift_obj::redshift_obj()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_redshift_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_redshift_obj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_redshift_obj" "', argument " "1"" of type '" "IceBRG::redshift_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_set_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:redshift_obj_set_z",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_set_z" "', argument " "1"" of type '" "IceBRG::redshift_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "redshift_obj_set_z" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_z((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_set_z_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:redshift_obj_set_z_err",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_set_z_err" "', argument " "1"" of type '" "IceBRG::redshift_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "redshift_obj_set_z_err" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_z_err((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:redshift_obj_z",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_z" "', argument " "1"" of type '" "IceBRG::redshift_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  result = (flt_t)((IceBRG::redshift_obj const *)arg1)->z();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_z_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:redshift_obj_z_err",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_z_err" "', argument " "1"" of type '" "IceBRG::redshift_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  result = (flt_t)((IceBRG::redshift_obj const *)arg1)->z_err();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_H(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  inverse_time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:redshift_obj_H",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_H" "', argument " "1"" of type '" "IceBRG::redshift_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  result = (inverse_time_type)((IceBRG::redshift_obj const *)arg1)->H();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_rho_crit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:redshift_obj_rho_crit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_rho_crit" "', argument " "1"" of type '" "IceBRG::redshift_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  result = (density_type)((IceBRG::redshift_obj const *)arg1)->rho_crit();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_redshift_obj_redshift_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::redshift_obj *arg1 = (IceBRG::redshift_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:redshift_obj_redshift_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "redshift_obj_redshift_obj_clone" "', argument " "1"" of type '" "IceBRG::redshift_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::redshift_obj * >(argp1);
  result = (IceBRG::redshift_obj *)((IceBRG::redshift_obj const *)arg1)->redshift_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *redshift_obj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__redshift_obj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_virial_density_factor_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable virial_density_factor is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_virial_density_factor_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::virial_density_factor));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_delete_density_profile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_density_profile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_density_profile" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_mvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_mvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_mvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (mass_type)((IceBRG::density_profile const *)arg1)->mvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_dens" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (density_type)((IceBRG::density_profile const *)arg1)->dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_density_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::density_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_density_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_density_profile_clone" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (IceBRG::density_profile *)((IceBRG::density_profile const *)arg1)->density_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_mvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_mvir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_mvir" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_mvir" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  (arg1)->set_mvir((mass_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_vvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  velocity_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  velocity_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_vvir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_vvir" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_vvir" "', argument " "2"" of type '" "velocity_type""'");
  } 
  temp2 = static_cast< velocity_type >(val2);
  arg2 = &temp2;
  (arg1)->set_vvir((velocity_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_rvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_rvir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_rvir" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_rvir" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  (arg1)->set_rvir((distance_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_rs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_rs",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_rs" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_rs" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  (arg1)->set_rs((distance_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_rt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_rt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_rt" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_rt" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  (arg1)->set_rt((distance_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  std::vector< any_units_type,std::allocator< any_units_type > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_parameters",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_parameters" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "density_profile_set_parameters" "', argument " "2"" of type '" "std::vector< any_units_type,std::allocator< any_units_type > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "density_profile_set_parameters" "', argument " "2"" of type '" "std::vector< any_units_type,std::allocator< any_units_type > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< any_units_type,std::allocator< any_units_type > > * >(argp2);
  (arg1)->set_parameters((std::vector< any_units_type,std::allocator< any_units_type > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_tau(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_tau",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_tau" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_tau" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_tau((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_c",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_c" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_set_c" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_c((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_override_rhmvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_override_rhmvir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_override_rhmvir" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_override_rhmvir" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  (arg1)->override_rhmvir((distance_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_override_rhmtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_override_rhmtot",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_override_rhmtot" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_override_rhmtot" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  (arg1)->override_rhmtot((distance_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_mtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_mtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_mtot" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (mass_type)((IceBRG::density_profile const *)arg1)->mtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_rt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_rt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_rt" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (distance_type)((IceBRG::density_profile const *)arg1)->rt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_num_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_num_parameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_num_parameters" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = ((IceBRG::density_profile const *)arg1)->num_parameters();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_get_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< double,std::allocator< double > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_get_parameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_get_parameters" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = ((IceBRG::density_profile const *)arg1)->get_parameters();
  resultobj = SWIG_NewPointerObj((new std::vector< any_units_type,std::allocator< any_units_type > >(static_cast< const std::vector< any_units_type,std::allocator< any_units_type > >& >(result))), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_get_parameter_names(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_get_parameter_names",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_get_parameter_names" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = ((IceBRG::density_profile const *)arg1)->get_parameter_names();
  resultobj = SWIG_NewPointerObj((new std::vector< std::string,std::allocator< std::string > >(static_cast< const std::vector< std::string,std::allocator< std::string > >& >(result))), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_enc_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_enc_mass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_enc_mass" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_enc_mass" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (mass_type)((IceBRG::density_profile const *)arg1)->enc_mass((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_rvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_rvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_rvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (distance_type)((IceBRG::density_profile const *)arg1)->rvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_hmvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_hmvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_hmvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (mass_type)((IceBRG::density_profile const *)arg1)->hmvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_hmtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_hmtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_hmtot" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (mass_type)((IceBRG::density_profile const *)arg1)->hmtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_hm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_hm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_hm" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (mass_type)((IceBRG::density_profile const *)arg1)->hm();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_enc_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_enc_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_enc_dens" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_enc_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (density_type)((IceBRG::density_profile const *)arg1)->enc_dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_rhmvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_rhmvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_rhmvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (distance_type)((IceBRG::density_profile const *)arg1)->rhmvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_rhmtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_rhmtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_rhmtot" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (distance_type)((IceBRG::density_profile const *)arg1)->rhmtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_rhm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_rhm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_rhm" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (distance_type)((IceBRG::density_profile const *)arg1)->rhm();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_vvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_vvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_vvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (velocity_type)((IceBRG::density_profile const *)arg1)->vvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_vhmvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_vhmvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_vhmvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (velocity_type)((IceBRG::density_profile const *)arg1)->vhmvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_vhmtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_vhmtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_vhmtot" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (velocity_type)((IceBRG::density_profile const *)arg1)->vhmtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_vhm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_vhm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_vhm" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (velocity_type)((IceBRG::density_profile const *)arg1)->vhm();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_vt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_vt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_vt" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (velocity_type)((IceBRG::density_profile const *)arg1)->vt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_otvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_otvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_otvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (time_type)((IceBRG::density_profile const *)arg1)->otvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_othmvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_othmvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_othmvir" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (time_type)((IceBRG::density_profile const *)arg1)->othmvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_othmtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_othmtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_othmtot" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (time_type)((IceBRG::density_profile const *)arg1)->othmtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_othm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_othm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_othm" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (time_type)((IceBRG::density_profile const *)arg1)->othm();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_ott(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:density_profile_ott",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_ott" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  result = (time_type)((IceBRG::density_profile const *)arg1)->ott();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_set_hm_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  int_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_set_hm_type",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_set_hm_type" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "density_profile_set_hm_type" "', argument " "2"" of type '" "int_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "density_profile_set_hm_type" "', argument " "2"" of type '" "int_t""'");
    } else {
      int_t * temp = reinterpret_cast< int_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_hm_type(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_accel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  acceleration_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_accel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_accel" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_accel" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (acceleration_type)((IceBRG::density_profile const *)arg1)->accel((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_Daccel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  custom_unit_type< 0,-2,0,0,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_Daccel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_Daccel" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_Daccel" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = ((IceBRG::density_profile const *)arg1)->Daccel((distance_type const &)*arg2);
  resultobj = SWIG_NewPointerObj((new custom_unit_type< 0,-2,0,0,0 >(static_cast< const custom_unit_type< 0,-2,0,0,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT_0__2_0_0_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_density_profile_truncate_to_fraction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:density_profile_truncate_to_fraction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "density_profile_truncate_to_fraction" "', argument " "1"" of type '" "IceBRG::density_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "density_profile_truncate_to_fraction" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->truncate_to_fraction((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *density_profile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__density_profile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_period__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  velocity_type *arg3 = 0 ;
  velocity_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  velocity_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  velocity_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:period",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "period" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "period" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "period" "', argument " "3"" of type '" "velocity_type""'");
  } 
  temp3 = static_cast< velocity_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "period" "', argument " "4"" of type '" "velocity_type""'");
  } 
  temp4 = static_cast< velocity_type >(val4);
  arg4 = &temp4;
  result = (time_type)IceBRG::period((IceBRG::density_profile const *)arg1,(double const &)*arg2,(double const &)*arg3,(double const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_period__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::density_profile *arg1 = (IceBRG::density_profile *) 0 ;
  distance_type *arg2 = 0 ;
  velocity_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  velocity_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  time_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:period",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "period" "', argument " "1"" of type '" "IceBRG::density_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::density_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "period" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "period" "', argument " "3"" of type '" "velocity_type""'");
  } 
  temp3 = static_cast< velocity_type >(val3);
  arg3 = &temp3;
  result = (time_type)IceBRG::period((IceBRG::density_profile const *)arg1,(double const &)*arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_period(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__density_profile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_period__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__density_profile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_period__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'period'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::period(IceBRG::density_profile const *,distance_type const &,velocity_type const &,velocity_type const &)\n"
    "    IceBRG::period(IceBRG::density_profile const *,distance_type const &,velocity_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_point_mass_profile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_point_mass_profile")) SWIG_fail;
  result = (IceBRG::point_mass_profile *)new IceBRG::point_mass_profile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__point_mass_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_point_mass_profile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type arg1 ;
  flt_t *arg2 = 0 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::point_mass_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_point_mass_profile",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_point_mass_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  arg1 = static_cast< mass_type >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_point_mass_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (IceBRG::point_mass_profile *)new IceBRG::point_mass_profile(arg1,(flt_t const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__point_mass_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_point_mass_profile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_point_mass_profile__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_point_mass_profile__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_point_mass_profile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::point_mass_profile::point_mass_profile()\n"
    "    IceBRG::point_mass_profile::point_mass_profile(mass_type const,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_point_mass_profile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_point_mass_profile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_point_mass_profile" "', argument " "1"" of type '" "IceBRG::point_mass_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_set_mvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:point_mass_profile_set_mvir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_set_mvir" "', argument " "1"" of type '" "IceBRG::point_mass_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "point_mass_profile_set_mvir" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  (arg1)->set_mvir((mass_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_set_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  std::vector< any_units_type,std::allocator< any_units_type > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:point_mass_profile_set_parameters",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_set_parameters" "', argument " "1"" of type '" "IceBRG::point_mass_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "point_mass_profile_set_parameters" "', argument " "2"" of type '" "std::vector< any_units_type,std::allocator< any_units_type > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "point_mass_profile_set_parameters" "', argument " "2"" of type '" "std::vector< any_units_type,std::allocator< any_units_type > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< any_units_type,std::allocator< any_units_type > > * >(argp2);
  (arg1)->set_parameters((std::vector< any_units_type,std::allocator< any_units_type > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_mass",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_mass" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (mass_type)((IceBRG::point_mass_profile const *)arg1)->mass();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_mvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_mvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_mvir" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (mass_type)((IceBRG::point_mass_profile const *)arg1)->mvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_mtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_mtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_mtot" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (mass_type)((IceBRG::point_mass_profile const *)arg1)->mtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_rvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_rvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_rvir" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (distance_type)((IceBRG::point_mass_profile const *)arg1)->rvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_rt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_rt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_rt" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (distance_type)((IceBRG::point_mass_profile const *)arg1)->rt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_rs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_rs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_rs" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (distance_type)((IceBRG::point_mass_profile const *)arg1)->rs();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_vvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_vvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_vvir" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (velocity_type)((IceBRG::point_mass_profile const *)arg1)->vvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:point_mass_profile_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_dens" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "point_mass_profile_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (density_type)((IceBRG::point_mass_profile const *)arg1)->dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_enc_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:point_mass_profile_enc_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_enc_dens" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "point_mass_profile_enc_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (density_type)((IceBRG::point_mass_profile const *)arg1)->enc_dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_enc_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:point_mass_profile_enc_mass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_enc_mass" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "point_mass_profile_enc_mass" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (mass_type)((IceBRG::point_mass_profile const *)arg1)->enc_mass((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_num_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_num_parameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_num_parameters" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = ((IceBRG::point_mass_profile const *)arg1)->num_parameters();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_get_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< double,std::allocator< double > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_get_parameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_get_parameters" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = ((IceBRG::point_mass_profile const *)arg1)->get_parameters();
  resultobj = SWIG_NewPointerObj((new std::vector< any_units_type,std::allocator< any_units_type > >(static_cast< const std::vector< any_units_type,std::allocator< any_units_type > >& >(result))), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_get_parameter_names(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_get_parameter_names",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_get_parameter_names" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = ((IceBRG::point_mass_profile const *)arg1)->get_parameter_names();
  resultobj = SWIG_NewPointerObj((new std::vector< std::string,std::allocator< std::string > >(static_cast< const std::vector< std::string,std::allocator< std::string > >& >(result))), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_truncate_to_fraction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:point_mass_profile_truncate_to_fraction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_truncate_to_fraction" "', argument " "1"" of type '" "IceBRG::point_mass_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "point_mass_profile_truncate_to_fraction" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->truncate_to_fraction((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_redshift_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_redshift_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_redshift_obj_clone" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (IceBRG::redshift_obj *)((IceBRG::point_mass_profile const *)arg1)->redshift_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_density_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::density_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_density_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_density_profile_clone" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (IceBRG::density_profile *)((IceBRG::point_mass_profile const *)arg1)->density_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_point_mass_profile_point_mass_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::point_mass_profile *arg1 = (IceBRG::point_mass_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::point_mass_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:point_mass_profile_point_mass_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "point_mass_profile_point_mass_profile_clone" "', argument " "1"" of type '" "IceBRG::point_mass_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::point_mass_profile * >(argp1);
  result = (IceBRG::point_mass_profile *)((IceBRG::point_mass_profile const *)arg1)->point_mass_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__point_mass_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *point_mass_profile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__point_mass_profile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_tNFW_profile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_tNFW_profile")) SWIG_fail;
  result = (IceBRG::tNFW_profile *)new IceBRG::tNFW_profile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tNFW_profile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_tNFW_profile",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_tNFW_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_tNFW_profile" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_tNFW_profile" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (IceBRG::tNFW_profile *)new IceBRG::tNFW_profile((mass_type const &)*arg1,(flt_t const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tNFW_profile__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_tNFW_profile",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_tNFW_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_tNFW_profile" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (IceBRG::tNFW_profile *)new IceBRG::tNFW_profile((mass_type const &)*arg1,(flt_t const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tNFW_profile__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_tNFW_profile",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_tNFW_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (IceBRG::tNFW_profile *)new IceBRG::tNFW_profile((mass_type const &)*arg1,(flt_t const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tNFW_profile__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_tNFW_profile",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  result = (IceBRG::tNFW_profile *)new IceBRG::tNFW_profile((mass_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_tNFW_profile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_tNFW_profile__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_tNFW_profile__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_tNFW_profile__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_tNFW_profile__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_tNFW_profile__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_tNFW_profile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::tNFW_profile::tNFW_profile()\n"
    "    IceBRG::tNFW_profile::tNFW_profile(mass_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::tNFW_profile::tNFW_profile(mass_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::tNFW_profile::tNFW_profile(mass_type const &,flt_t const &)\n"
    "    IceBRG::tNFW_profile::tNFW_profile(mass_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_tNFW_profile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_tNFW_profile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_tNFW_profile" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_mvir__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_set_mvir",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_set_mvir" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_set_mvir" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  (arg1)->set_mvir((mass_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_mvir__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_set_mvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_set_mvir" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  (arg1)->set_mvir();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_mvir(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__tNFW_profile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_tNFW_profile_set_mvir__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__tNFW_profile, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_tNFW_profile_set_mvir__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'tNFW_profile_set_mvir'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::tNFW_profile::set_mvir(mass_type const &)\n"
    "    IceBRG::tNFW_profile::set_mvir()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  std::vector< any_units_type,std::allocator< any_units_type > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_set_parameters",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_set_parameters" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "tNFW_profile_set_parameters" "', argument " "2"" of type '" "std::vector< any_units_type,std::allocator< any_units_type > > const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "tNFW_profile_set_parameters" "', argument " "2"" of type '" "std::vector< any_units_type,std::allocator< any_units_type > > const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< any_units_type,std::allocator< any_units_type > > * >(argp2);
  (arg1)->set_parameters((std::vector< any_units_type,std::allocator< any_units_type > > const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_set_z",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_set_z" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_set_z" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_z((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_tau(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_set_tau",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_set_tau" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_set_tau" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_tau((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_set_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_set_c",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_set_c" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_set_c" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_c((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_mvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_mvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_mvir" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (mass_type)((IceBRG::tNFW_profile const *)arg1)->mvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_mvir0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_mvir0",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_mvir0" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (mass_type *) &((IceBRG::tNFW_profile const *)arg1)->mvir0();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_mtot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_mtot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_mtot" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (mass_type)((IceBRG::tNFW_profile const *)arg1)->mtot();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_rvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_rvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_rvir" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (distance_type)((IceBRG::tNFW_profile const *)arg1)->rvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_rvir0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_rvir0",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_rvir0" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (distance_type)((IceBRG::tNFW_profile const *)arg1)->rvir0();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_rt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_rt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_rt" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (distance_type)((IceBRG::tNFW_profile const *)arg1)->rt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_rs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_rs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_rs" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (distance_type)((IceBRG::tNFW_profile const *)arg1)->rs();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_vvir(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_vvir",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_vvir" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (velocity_type)((IceBRG::tNFW_profile const *)arg1)->vvir();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_vvir0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  velocity_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_vvir0",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_vvir0" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (velocity_type)((IceBRG::tNFW_profile const *)arg1)->vvir0();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_c",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_c" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (flt_t)((IceBRG::tNFW_profile const *)arg1)->c();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_tau(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_tau",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_tau" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (flt_t)((IceBRG::tNFW_profile const *)arg1)->tau();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_dens" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (density_type)((IceBRG::tNFW_profile const *)arg1)->dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_enc_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_enc_mass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_enc_mass" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_enc_mass" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (mass_type)((IceBRG::tNFW_profile const *)arg1)->enc_mass((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_num_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_num_parameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_num_parameters" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = ((IceBRG::tNFW_profile const *)arg1)->num_parameters();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_get_parameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< double,std::allocator< double > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_get_parameters",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_get_parameters" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = ((IceBRG::tNFW_profile const *)arg1)->get_parameters();
  resultobj = SWIG_NewPointerObj((new std::vector< any_units_type,std::allocator< any_units_type > >(static_cast< const std::vector< any_units_type,std::allocator< any_units_type > >& >(result))), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_get_parameter_names(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< std::string,std::allocator< std::string > > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_get_parameter_names",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_get_parameter_names" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = ((IceBRG::tNFW_profile const *)arg1)->get_parameter_names();
  resultobj = SWIG_NewPointerObj((new std::vector< std::string,std::allocator< std::string > >(static_cast< const std::vector< std::string,std::allocator< std::string > >& >(result))), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_truncate_to_fraction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:tNFW_profile_truncate_to_fraction",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_truncate_to_fraction" "', argument " "1"" of type '" "IceBRG::tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "tNFW_profile_truncate_to_fraction" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->truncate_to_fraction((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_redshift_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_redshift_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_redshift_obj_clone" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (IceBRG::redshift_obj *)((IceBRG::tNFW_profile const *)arg1)->redshift_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_density_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::density_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_density_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_density_profile_clone" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (IceBRG::density_profile *)((IceBRG::tNFW_profile const *)arg1)->density_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_tNFW_profile_tNFW_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::tNFW_profile *arg1 = (IceBRG::tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:tNFW_profile_tNFW_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "tNFW_profile_tNFW_profile_clone" "', argument " "1"" of type '" "IceBRG::tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::tNFW_profile * >(argp1);
  result = (IceBRG::tNFW_profile *)((IceBRG::tNFW_profile const *)arg1)->tNFW_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *tNFW_profile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__tNFW_profile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_sky_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_sky_obj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_sky_obj" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_clear" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_partial_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_partial_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_partial_clear" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  (arg1)->partial_clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ra(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_ra",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ra" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_ra" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  (arg1)->set_ra((angle_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_dec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_dec",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_dec" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_dec" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  (arg1)->set_dec((angle_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ra_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_ra_err",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ra_err" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_ra_err" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  (arg1)->set_ra_err((angle_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_dec_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_dec_err",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_dec_err" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_dec_err" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  (arg1)->set_dec_err((angle_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ra_dec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  angle_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  angle_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:sky_obj_set_ra_dec",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ra_dec" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_ra_dec" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sky_obj_set_ra_dec" "', argument " "3"" of type '" "angle_type""'");
  } 
  temp3 = static_cast< angle_type >(val3);
  arg3 = &temp3;
  (arg1)->set_ra_dec((angle_type const &)*arg2,(angle_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ra_dec_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  angle_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  angle_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:sky_obj_set_ra_dec_z",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ra_dec_z" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_ra_dec_z" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sky_obj_set_ra_dec_z" "', argument " "3"" of type '" "angle_type""'");
  } 
  temp3 = static_cast< angle_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sky_obj_set_ra_dec_z" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  (arg1)->set_ra_dec_z((angle_type const &)*arg2,(angle_type const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ra_dec_z_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  angle_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  angle_type *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  angle_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  angle_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:sky_obj_set_ra_dec_z_err",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "3"" of type '" "angle_type""'");
  } 
  temp3 = static_cast< angle_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "6"" of type '" "angle_type""'");
  } 
  temp6 = static_cast< angle_type >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "sky_obj_set_ra_dec_z_err" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  (arg1)->set_ra_dec_z_err((angle_type const &)*arg2,(angle_type const &)*arg3,(flt_t const &)*arg4,(angle_type const &)*arg5,(angle_type const &)*arg6,(flt_t const &)*arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ra_dec_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  angle_type *arg2 = 0 ;
  angle_type *arg3 = 0 ;
  angle_type *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  angle_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:sky_obj_set_ra_dec_err",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ra_dec_err" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_ra_dec_err" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sky_obj_set_ra_dec_err" "', argument " "3"" of type '" "angle_type""'");
  } 
  temp3 = static_cast< angle_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sky_obj_set_ra_dec_err" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "sky_obj_set_ra_dec_err" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  (arg1)->set_ra_dec_err((angle_type const &)*arg2,(angle_type const &)*arg3,(angle_type const &)*arg4,(angle_type const &)*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_weight",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_weight" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sky_obj_set_weight" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_weight((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  int_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_index",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_index" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sky_obj_set_index" "', argument " "2"" of type '" "int_t const""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sky_obj_set_index" "', argument " "2"" of type '" "int_t const""'");
    } else {
      int_t * temp = reinterpret_cast< int_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_index(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_set_ID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:sky_obj_set_ID",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_set_ID" "', argument " "1"" of type '" "IceBRG::sky_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "sky_obj_set_ID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "sky_obj_set_ID" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_ID((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_ra(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  angle_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_ra",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_ra" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (angle_type *) &((IceBRG::sky_obj const *)arg1)->ra();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_dec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  angle_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_dec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_dec" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (angle_type *) &((IceBRG::sky_obj const *)arg1)->dec();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_ra_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  angle_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_ra_err",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_ra_err" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (angle_type *) &((IceBRG::sky_obj const *)arg1)->ra_err();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_dec_err(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  angle_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_dec_err",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_dec_err" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (angle_type *) &((IceBRG::sky_obj const *)arg1)->dec_err();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_weight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_weight" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (flt_t *) &((IceBRG::sky_obj const *)arg1)->weight();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_index",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_index" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = ((IceBRG::sky_obj const *)arg1)->index();
  resultobj = SWIG_NewPointerObj((new int_t(static_cast< const int_t& >(result))), SWIGTYPE_p_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_ID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_ID",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_ID" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (std::string *) &((IceBRG::sky_obj const *)arg1)->ID();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_m(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_m",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_m" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (mass_type)((IceBRG::sky_obj const *)arg1)->m();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_mag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_mag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_mag" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (flt_t)((IceBRG::sky_obj const *)arg1)->mag();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_redshift_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_redshift_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_redshift_obj_clone" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (IceBRG::redshift_obj *)((IceBRG::sky_obj const *)arg1)->redshift_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sky_obj_sky_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::sky_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:sky_obj_sky_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "sky_obj_sky_obj_clone" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  result = (IceBRG::sky_obj *)((IceBRG::sky_obj const *)arg1)->sky_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *sky_obj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__sky_obj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_dfa__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  IceBRG::sky_obj *arg2 = (IceBRG::sky_obj *) 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:dfa",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dfa" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dfa" "', argument " "2"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::sky_obj * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dfa" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (distance_type)IceBRG::dfa((IceBRG::sky_obj const *)arg1,(IceBRG::sky_obj const *)arg2,(double const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dfa__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  IceBRG::sky_obj *arg2 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:dfa",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dfa" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dfa" "', argument " "2"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::sky_obj * >(argp2);
  result = (distance_type)IceBRG::dfa((IceBRG::sky_obj const *)arg1,(IceBRG::sky_obj const *)arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dfa(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_dfa__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dfa__SWIG_5(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dfa__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_dfa__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_dfa__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_dfa__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'dfa'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::dfa(flt_t const &)\n"
    "    IceBRG::dfa(angle_type const &,flt_t const &)\n"
    "    IceBRG::dfa(angle_type const &,angle_type const &,flt_t const &)\n"
    "    IceBRG::dfa(angle_type const &,angle_type const &,angle_type const &,angle_type const &,flt_t const &)\n"
    "    IceBRG::dfa(IceBRG::sky_obj const *,IceBRG::sky_obj const *,flt_t const &)\n"
    "    IceBRG::dfa(IceBRG::sky_obj const *,IceBRG::sky_obj const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_skydist2d(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  IceBRG::sky_obj *arg2 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  angle_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:skydist2d",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "skydist2d" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "skydist2d" "', argument " "2"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::sky_obj * >(argp2);
  result = (angle_type)IceBRG::skydist2d((IceBRG::sky_obj const *)arg1,(IceBRG::sky_obj const *)arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_stellar_mass_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  mass_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_stellar_mass_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_stellar_mass_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_stellar_mass_set" "', argument " "2"" of type '" "mass_type""'");
  } 
  arg2 = static_cast< mass_type >(val2);
  if (arg1) (arg1)->stellar_mass = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_stellar_mass_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_stellar_mass_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_stellar_mass_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (mass_type) ((arg1)->stellar_mass);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_umag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_umag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_umag_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_umag_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->umag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_umag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_umag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_umag_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->umag);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_umag_err_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_umag_err_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_umag_err_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_umag_err_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->umag_err = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_umag_err_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_umag_err_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_umag_err_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->umag_err);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_gmag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_gmag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_gmag_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_gmag_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->gmag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_gmag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_gmag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_gmag_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->gmag);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_gmag_err_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_gmag_err_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_gmag_err_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_gmag_err_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->gmag_err = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_gmag_err_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_gmag_err_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_gmag_err_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->gmag_err);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_rmag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_rmag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_rmag_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_rmag_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->rmag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_rmag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_rmag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_rmag_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->rmag);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_rmag_err_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_rmag_err_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_rmag_err_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_rmag_err_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->rmag_err = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_rmag_err_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_rmag_err_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_rmag_err_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->rmag_err);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_imag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_imag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_imag_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_imag_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->imag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_imag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_imag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_imag_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->imag);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_imag_err_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_imag_err_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_imag_err_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_imag_err_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->imag_err = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_imag_err_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_imag_err_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_imag_err_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->imag_err);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_zmag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_zmag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_zmag_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_zmag_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->zmag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_zmag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_zmag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_zmag_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->zmag);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_zmag_err_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_zmag_err_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_zmag_err_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_zmag_err_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->zmag_err = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_zmag_err_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_zmag_err_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_zmag_err_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->zmag_err);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_z_phot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_z_phot_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_z_phot_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_z_phot_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->z_phot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_z_phot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_z_phot_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_z_phot_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->z_phot);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_z_phot_err_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_z_phot_err_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_z_phot_err_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_z_phot_err_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->z_phot_err = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_z_phot_err_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_z_phot_err_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_z_phot_err_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->z_phot_err);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_odds_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_odds_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_odds_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_odds_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->odds = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_odds_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_odds_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_odds_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->odds);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_phot_template_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_phot_template_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_phot_template_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "galaxy_phot_template_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->phot_template = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_phot_template_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_phot_template_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_phot_template_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t) ((arg1)->phot_template);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_host_group_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  IceBRG::galaxy_group *arg2 = (IceBRG::galaxy_group *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_host_group_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_host_group_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__galaxy_group, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "galaxy_host_group_set" "', argument " "2"" of type '" "IceBRG::galaxy_group *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::galaxy_group * >(argp2);
  if (arg1) (arg1)->host_group = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_host_group_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::galaxy_group *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_host_group_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_host_group_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (IceBRG::galaxy_group *) ((arg1)->host_group);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy_group, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_host_group_index_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  int_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:galaxy_host_group_index_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_host_group_index_set" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "galaxy_host_group_index_set" "', argument " "2"" of type '" "int_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "galaxy_host_group_index_set" "', argument " "2"" of type '" "int_t""'");
    } else {
      int_t * temp = reinterpret_cast< int_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->host_group_index = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_host_group_index_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_host_group_index_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_host_group_index_get" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result =  ((arg1)->host_group_index);
  resultobj = SWIG_NewPointerObj((new int_t(static_cast< const int_t& >(result))), SWIGTYPE_p_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  flt_t arg6 ;
  mass_type *arg7 = 0 ;
  flt_t arg8 ;
  flt_t arg9 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  mass_type temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_galaxy" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_galaxy" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  arg6 = static_cast< flt_t >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_galaxy" "', argument " "7"" of type '" "mass_type""'");
  } 
  temp7 = static_cast< mass_type >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_galaxy" "', argument " "8"" of type '" "flt_t""'");
  } 
  arg8 = static_cast< flt_t >(val8);
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_galaxy" "', argument " "9"" of type '" "flt_t""'");
  } 
  arg9 = static_cast< flt_t >(val9);
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3,(angle_type const &)*arg4,(angle_type const &)*arg5,arg6,(mass_type const &)*arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  flt_t arg6 ;
  mass_type *arg7 = 0 ;
  flt_t arg8 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  mass_type temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_galaxy" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_galaxy" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  arg6 = static_cast< flt_t >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_galaxy" "', argument " "7"" of type '" "mass_type""'");
  } 
  temp7 = static_cast< mass_type >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_galaxy" "', argument " "8"" of type '" "flt_t""'");
  } 
  arg8 = static_cast< flt_t >(val8);
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3,(angle_type const &)*arg4,(angle_type const &)*arg5,arg6,(mass_type const &)*arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  flt_t arg6 ;
  mass_type *arg7 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  mass_type temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_galaxy" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_galaxy" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  arg6 = static_cast< flt_t >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_galaxy" "', argument " "7"" of type '" "mass_type""'");
  } 
  temp7 = static_cast< mass_type >(val7);
  arg7 = &temp7;
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3,(angle_type const &)*arg4,(angle_type const &)*arg5,arg6,(mass_type const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  flt_t arg6 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_galaxy" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_galaxy" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  arg6 = static_cast< flt_t >(val6);
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3,(angle_type const &)*arg4,(angle_type const &)*arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type *arg4 = 0 ;
  angle_type *arg5 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  angle_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_galaxy" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_galaxy" "', argument " "5"" of type '" "angle_type""'");
  } 
  temp5 = static_cast< angle_type >(val5);
  arg5 = &temp5;
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3,(angle_type const &)*arg4,(angle_type const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type *arg4 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  angle_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_galaxy",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_galaxy" "', argument " "4"" of type '" "angle_type""'");
  } 
  temp4 = static_cast< angle_type >(val4);
  arg4 = &temp4;
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3,(angle_type const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t arg3 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_galaxy",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_galaxy",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1,(angle_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_galaxy",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  result = (IceBRG::galaxy *)new IceBRG::galaxy((angle_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_galaxy")) SWIG_fail;
  result = (IceBRG::galaxy *)new IceBRG::galaxy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_galaxy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_galaxy__SWIG_9(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_galaxy__SWIG_8(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_galaxy__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_galaxy__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_galaxy__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_galaxy__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_galaxy__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_galaxy__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_galaxy__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_galaxy__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_galaxy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t,angle_type const &,angle_type const &,flt_t,mass_type const &,flt_t,flt_t)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t,angle_type const &,angle_type const &,flt_t,mass_type const &,flt_t)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t,angle_type const &,angle_type const &,flt_t,mass_type const &)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t,angle_type const &,angle_type const &,flt_t)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t,angle_type const &,angle_type const &)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t,angle_type const &)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &,flt_t)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &,angle_type const &)\n"
    "    IceBRG::galaxy::galaxy(angle_type const &)\n"
    "    IceBRG::galaxy::galaxy()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_galaxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_galaxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_galaxy" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_m(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_m",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_m" "', argument " "1"" of type '" "IceBRG::galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (mass_type)((IceBRG::galaxy const *)arg1)->m();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_mag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_mag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_mag" "', argument " "1"" of type '" "IceBRG::galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (flt_t)((IceBRG::galaxy const *)arg1)->mag();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_clear" "', argument " "1"" of type '" "IceBRG::galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_redshift_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_redshift_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_redshift_obj_clone" "', argument " "1"" of type '" "IceBRG::galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (IceBRG::redshift_obj *)((IceBRG::galaxy const *)arg1)->redshift_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_sky_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::sky_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_sky_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_sky_obj_clone" "', argument " "1"" of type '" "IceBRG::galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (IceBRG::sky_obj *)((IceBRG::galaxy const *)arg1)->sky_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_galaxy_galaxy_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::galaxy *arg1 = (IceBRG::galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:galaxy_galaxy_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "galaxy_galaxy_clone" "', argument " "1"" of type '" "IceBRG::galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::galaxy * >(argp1);
  result = (IceBRG::galaxy *)((IceBRG::galaxy const *)arg1)->galaxy_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *galaxy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__galaxy, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_default_mass_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable default_mass is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_default_mass_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_double(static_cast< double >(IceBRG::default_mass));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_pair_bin_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin_summary" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin_summary" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin_summary" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bin_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bin_summary" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_pair_bin_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin_summary" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin_summary" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin_summary" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bin_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(flt_t const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_pair_bin_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin_summary" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin_summary" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin_summary" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pair_bin_summary",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin_summary" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin_summary" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_pair_bin_summary",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin_summary" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pair_bin_summary",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin_summary" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pair_bin_summary",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1,(distance_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bin_summary",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((distance_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pair_bin_summary")) SWIG_fail;
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bin_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__pair_bin,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "IceBRG::pair_bin const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "IceBRG::pair_bin const &""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary((IceBRG::pair_bin const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::istream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bin_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "std::istream &""'"); 
  }
  arg1 = reinterpret_cast< std::istream * >(argp1);
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bin_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "std::string &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bin_summary" "', argument " "1"" of type '" "std::string &""'"); 
  }
  arg1 = reinterpret_cast< std::string * >(argp1);
  result = (IceBRG::pair_bin_summary *)new IceBRG::pair_bin_summary(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin_summary(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 8) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pair_bin_summary__SWIG_8(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__pair_bin, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bin_summary__SWIG_9(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bin_summary__SWIG_10(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__string, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bin_summary__SWIG_11(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_pair_bin_summary__SWIG_7(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_pair_bin_summary__SWIG_6(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_pair_bin_summary__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_pair_bin_summary__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_pair_bin_summary__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_pair_bin_summary__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_pair_bin_summary__SWIG_1(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_pair_bin_summary__SWIG_0(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_pair_bin_summary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &,mass_type const &,mass_type const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &,mass_type const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &,distance_type const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(distance_type const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary()\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(IceBRG::pair_bin const &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(std::istream &)\n"
    "    IceBRG::pair_bin_summary::pair_bin_summary(std::string &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_pair_bin_summary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pair_bin_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pair_bin_summary" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_clear" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_fixbad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_fixbad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_fixbad" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  (arg1)->fixbad();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->pair_count();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->shear_pair_count();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->magf_pair_count();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_effective_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_effective_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_effective_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->effective_pair_count();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_effective_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_effective_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_effective_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->shear_effective_pair_count();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_sum_of_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_sum_of_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_sum_of_weights" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->sum_of_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_sum_of_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_sum_of_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_sum_of_weights" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->shear_sum_of_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_sum_of_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_sum_of_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_sum_of_weights" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->magf_sum_of_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_sum_of_square_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_sum_of_square_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_sum_of_square_weights" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->sum_of_square_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_sum_of_square_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_sum_of_square_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_sum_of_square_weights" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->shear_sum_of_square_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_sum_of_square_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_sum_of_square_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_sum_of_square_weights" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->magf_sum_of_square_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_R_min(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_R_min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_R_min" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type *) &((IceBRG::pair_bin_summary const *)arg1)->R_min();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_R_max(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_R_max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_R_max" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type *) &((IceBRG::pair_bin_summary const *)arg1)->R_max();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_R_mid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_R_mid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_R_mid" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type)((IceBRG::pair_bin_summary const *)arg1)->R_mid();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_R_amid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_R_amid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_R_amid" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type)((IceBRG::pair_bin_summary const *)arg1)->R_amid();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_R_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_R_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_R_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type)((IceBRG::pair_bin_summary const *)arg1)->R_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_R_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_R_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_R_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type)((IceBRG::pair_bin_summary const *)arg1)->shear_R_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_R_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_R_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_R_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (distance_type)((IceBRG::pair_bin_summary const *)arg1)->magf_R_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_m_min(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_m_min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_m_min" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (mass_type *) &((IceBRG::pair_bin_summary const *)arg1)->m_min();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_m_max(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_m_max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_m_max" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (mass_type *) &((IceBRG::pair_bin_summary const *)arg1)->m_max();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_m_mid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_m_mid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_m_mid" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (mass_type)((IceBRG::pair_bin_summary const *)arg1)->m_mid();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_lens_m_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_lens_m_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_lens_m_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (mass_type)((IceBRG::pair_bin_summary const *)arg1)->lens_m_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_lens_m_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_lens_m_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_lens_m_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (mass_type)((IceBRG::pair_bin_summary const *)arg1)->shear_lens_m_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_lens_m_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_lens_m_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_lens_m_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (mass_type)((IceBRG::pair_bin_summary const *)arg1)->magf_lens_m_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_z_min(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_z_min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_z_min" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->z_min();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_z_max(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_z_max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_z_max" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->z_max();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_z_mid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_z_mid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_z_mid" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->z_mid();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_lens_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_lens_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_lens_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->lens_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_lens_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_lens_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_lens_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->shear_lens_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_lens_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_lens_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_lens_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->magf_lens_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_source_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_source_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_source_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->source_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_source_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_source_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_source_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->shear_source_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_source_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_source_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_source_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->magf_source_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mag_min(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mag_min",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mag_min" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mag_min();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mag_max(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mag_max",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mag_max" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mag_max();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mag_mid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mag_mid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mag_mid" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mag_mid();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_lens_mag_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_lens_mag_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_lens_mag_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->lens_mag_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_lens_mag_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_lens_mag_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_lens_mag_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->shear_lens_mag_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_lens_mag_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_lens_mag_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_lens_mag_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->magf_lens_mag_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_shear_sigma_crit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_shear_sigma_crit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_shear_sigma_crit" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->shear_sigma_crit();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_sigma_crit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_sigma_crit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_sigma_crit" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->magf_sigma_crit();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_t_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_t_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_t_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_t_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_x_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_x_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_x_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_x_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_t_mean_square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< -4,0,2,0,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_t_mean_square",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_t_mean_square" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_t_mean_square();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< -4,0,2,0,0 >(static_cast< const custom_unit_type< -4,0,2,0,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT__4_0_2_0_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_x_mean_square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< -4,0,2,0,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_x_mean_square",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_x_mean_square" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_x_mean_square();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< -4,0,2,0,0 >(static_cast< const custom_unit_type< -4,0,2,0,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT__4_0_2_0_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_t_std(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_t_std",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_t_std" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_t_std();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_x_std(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_x_std",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_x_std" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_x_std();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_t_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_t_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_t_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_t_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_delta_Sigma_x_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_delta_Sigma_x_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_delta_Sigma_x_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->delta_Sigma_x_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_t_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_t_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_t_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_t_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_x_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_x_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_x_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_x_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_mean" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_mean_square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_mean_square",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_mean_square" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_mean_square();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_t_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_t_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_t_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_t_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_x_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_x_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_x_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_x_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_gamma_square_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_gamma_square_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_gamma_square_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->gamma_square_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bin_summary_model_delta_Sigma_t",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_delta_Sigma_t((flt_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_delta_Sigma_t",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_delta_Sigma_t((flt_t const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_delta_Sigma_t",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_delta_Sigma_t((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_delta_Sigma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_delta_Sigma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_delta_Sigma_t(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pair_bin_summary_model_delta_Sigma_t__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_delta_Sigma_t'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_delta_Sigma_t(flt_t const &,mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_delta_Sigma_t(flt_t const &,mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_delta_Sigma_t(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_delta_Sigma_t() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_gamma_t__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bin_summary_model_gamma_t",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_gamma_t((flt_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_gamma_t__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_gamma_t",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_gamma_t((flt_t const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_gamma_t__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_gamma_t",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_gamma_t((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_gamma_t__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_gamma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_gamma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_gamma_t(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_gamma_t__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_gamma_t__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_gamma_t__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pair_bin_summary_model_gamma_t__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_gamma_t'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_gamma_t(flt_t const &,mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_gamma_t(flt_t const &,mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_gamma_t(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_gamma_t() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_delta_Sigma_t__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_1h_delta_Sigma_t",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_1h_delta_Sigma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_1h_delta_Sigma_t((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_delta_Sigma_t__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_1h_delta_Sigma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_1h_delta_Sigma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_delta_Sigma_t(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_1h_delta_Sigma_t__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_1h_delta_Sigma_t__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_1h_delta_Sigma_t'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_1h_delta_Sigma_t(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_1h_delta_Sigma_t() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_gamma_t__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_1h_gamma_t",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_1h_gamma_t" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_1h_gamma_t((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_gamma_t__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_1h_gamma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_1h_gamma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_gamma_t(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_1h_gamma_t__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_1h_gamma_t__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_1h_gamma_t'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_1h_gamma_t(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_1h_gamma_t() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_delta_Sigma_t__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_offset_delta_Sigma_t",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_delta_Sigma_t" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_offset_delta_Sigma_t" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_offset_delta_Sigma_t((mass_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_delta_Sigma_t__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_offset_delta_Sigma_t",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_delta_Sigma_t" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_offset_delta_Sigma_t((mass_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_delta_Sigma_t__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_offset_delta_Sigma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_offset_delta_Sigma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_delta_Sigma_t(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_offset_delta_Sigma_t__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_offset_delta_Sigma_t__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_offset_delta_Sigma_t__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_offset_delta_Sigma_t'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_offset_delta_Sigma_t(mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_delta_Sigma_t(mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_delta_Sigma_t() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_gamma_t__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_offset_gamma_t",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_gamma_t" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_offset_gamma_t" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_gamma_t((mass_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_gamma_t__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_offset_gamma_t",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_gamma_t" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_gamma_t((mass_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_gamma_t__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_offset_gamma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_gamma_t" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_gamma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_gamma_t(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_offset_gamma_t__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_offset_gamma_t__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_offset_gamma_t__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_offset_gamma_t'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_offset_gamma_t(mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_gamma_t(mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_gamma_t() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_area_per_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< 0,0,0,2,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_area_per_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_area_per_lens" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->area_per_lens();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< 0,0,0,2,0 >(static_cast< const custom_unit_type< 0,0,0,2,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT_0_0_0_2_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< 0,0,0,2,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_area",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_area" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->area();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< 0,0,0,2,0 >(static_cast< const custom_unit_type< 0,0,0,2,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT_0_0_0_2_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_num_lenses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_num_lenses",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_num_lenses" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->num_lenses();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_effective_num_lenses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_effective_num_lenses",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_effective_num_lenses" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->magf_effective_num_lenses();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_magf_num_lenses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_magf_num_lenses",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_magf_num_lenses" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = ((IceBRG::pair_bin_summary const *)arg1)->magf_num_lenses();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mu_hat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mu_hat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mu_hat" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mu_hat();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mu_square_hat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mu_square_hat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mu_square_hat" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mu_square_hat();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mu_W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mu_W",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mu_W" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mu_W();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mu_std(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mu_std",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mu_std" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mu_std();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_mu_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_mu_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_mu_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->mu_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_kappa(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_kappa",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->kappa();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_kappa_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_kappa_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_kappa_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->kappa_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_Sigma",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->Sigma();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_Sigma_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_Sigma_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_Sigma_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->Sigma_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_mu__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bin_summary_model_mu",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_mu" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_mu" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bin_summary_model_mu" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_mu((flt_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_mu__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_mu",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_mu" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_mu" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_mu((flt_t const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_mu__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_mu",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_mu" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_mu((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_mu__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_mu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_mu();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_mu(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_mu__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_mu__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_mu__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pair_bin_summary_model_mu__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_mu'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_mu(flt_t const &,mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_mu(flt_t const &,mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_mu(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_mu() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_kappa__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bin_summary_model_kappa",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_kappa" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_kappa" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bin_summary_model_kappa" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_kappa((flt_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_kappa__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_kappa",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_kappa" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_kappa" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_kappa((flt_t const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_kappa__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_kappa",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_kappa" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_kappa((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_kappa__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_kappa",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_kappa();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_kappa(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_kappa__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_kappa__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_kappa__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pair_bin_summary_model_kappa__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_kappa'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_kappa(flt_t const &,mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_kappa(flt_t const &,mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_kappa(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_kappa() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bin_summary_model_Sigma",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_Sigma" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_Sigma" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bin_summary_model_Sigma" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_Sigma((flt_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_Sigma" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_Sigma" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_Sigma((flt_t const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_Sigma__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_Sigma" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_Sigma((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_Sigma__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_Sigma",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_Sigma();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_Sigma__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_Sigma__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_Sigma__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pair_bin_summary_model_Sigma__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_Sigma(flt_t const &,mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_Sigma(flt_t const &,mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_Sigma(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_Sigma() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_mu__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_1h_mu",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_1h_mu" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_1h_mu((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_mu__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_1h_mu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_1h_mu();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_mu(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_1h_mu__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_1h_mu__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_1h_mu'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_1h_mu(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_1h_mu() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_kappa__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_1h_kappa",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_1h_kappa" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_1h_kappa((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_kappa__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_1h_kappa",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_1h_kappa();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_kappa(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_1h_kappa__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_1h_kappa__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_1h_kappa'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_1h_kappa(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_1h_kappa() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_1h_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_1h_Sigma" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_1h_Sigma((flt_t const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_1h_Sigma",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_1h_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_1h_Sigma();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_1h_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_1h_Sigma__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_1h_Sigma__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_1h_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_1h_Sigma(flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_1h_Sigma() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_mu__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_offset_mu",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_mu" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_offset_mu" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_mu((mass_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_mu__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_offset_mu",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_mu" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_mu((mass_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_mu__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_offset_mu",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_mu" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_mu();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_mu(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_offset_mu__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_offset_mu__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_offset_mu__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_offset_mu'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_offset_mu(mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_mu(mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_mu() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_kappa__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_offset_kappa",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_kappa" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_offset_kappa" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_kappa((mass_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_kappa__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_offset_kappa",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_kappa" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_kappa((mass_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_kappa__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_offset_kappa",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_kappa" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (flt_t)((IceBRG::pair_bin_summary const *)arg1)->model_offset_kappa();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_kappa(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_offset_kappa__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_offset_kappa__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_offset_kappa__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_offset_kappa'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_offset_kappa(mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_kappa(mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_kappa() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bin_summary_model_offset_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_Sigma" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bin_summary_model_offset_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_offset_Sigma((mass_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  mass_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_model_offset_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_summary_model_offset_Sigma" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_offset_Sigma((mass_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_Sigma__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_summary_model_offset_Sigma",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_model_offset_Sigma" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin_summary const *)arg1)->model_offset_Sigma();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_model_offset_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pair_bin_summary_model_offset_Sigma__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pair_bin_summary_model_offset_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bin_summary_model_offset_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_model_offset_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::model_offset_Sigma(mass_type const &,flt_t const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_Sigma(mass_type const &) const\n"
    "    IceBRG::pair_bin_summary::model_offset_Sigma() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  IceBRG::pair_bin_summary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bin_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary___iadd__" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__pair_bin_summary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary___iadd__" "', argument " "2"" of type '" "IceBRG::pair_bin_summary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary___iadd__" "', argument " "2"" of type '" "IceBRG::pair_bin_summary const &""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp2);
  result = (IceBRG::pair_bin_summary *) &(arg1)->operator +=((IceBRG::pair_bin_summary const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  IceBRG::pair_bin_summary arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bin_summary result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary___add__" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__pair_bin_summary,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary___add__" "', argument " "2"" of type '" "IceBRG::pair_bin_summary""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary___add__" "', argument " "2"" of type '" "IceBRG::pair_bin_summary""'");
    } else {
      IceBRG::pair_bin_summary * temp = reinterpret_cast< IceBRG::pair_bin_summary * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((IceBRG::pair_bin_summary const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new IceBRG::pair_bin_summary(static_cast< const IceBRG::pair_bin_summary& >(result))), SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_save__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  ((IceBRG::pair_bin_summary const *)arg1)->save(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_save__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bin_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ((IceBRG::pair_bin_summary const *)arg1)->save((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_save__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  (arg1)->save(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_save__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->save((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_save(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bin_summary_save__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bin_summary_save__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bin_summary_save__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bin_summary_save__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_save'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::save(std::ostream &) const\n"
    "    IceBRG::pair_bin_summary::save(std::string const &) const\n"
    "    IceBRG::pair_bin_summary::save(std::ostream &)\n"
    "    IceBRG::pair_bin_summary::save(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  std::istream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_load" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary_load" "', argument " "2"" of type '" "std::istream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary_load" "', argument " "2"" of type '" "std::istream &""'"); 
  }
  arg2 = reinterpret_cast< std::istream * >(argp2);
  (arg1)->load(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin_summary *arg1 = (IceBRG::pair_bin_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_summary_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_summary_load" "', argument " "1"" of type '" "IceBRG::pair_bin_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_summary_load" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_summary_load" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->load((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_summary_load(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__istream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bin_summary_load__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bin_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bin_summary_load__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bin_summary_load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin_summary::load(std::istream &)\n"
    "    IceBRG::pair_bin_summary::load(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *pair_bin_summary_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__pair_bin_summary, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_lens_id_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  ssize_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_id_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_id_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_id_id_set" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lens_id_id_set" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_id_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_id_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result =  ((arg1)->id);
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_m_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  mass_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_m_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_m_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lens_id_m_set" "', argument " "2"" of type '" "mass_type""'");
  } 
  arg2 = static_cast< mass_type >(val2);
  if (arg1) (arg1)->m = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_m_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_m_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_m_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result = (mass_type) ((arg1)->m);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_z_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_z_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lens_id_z_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_z_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_z_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result = (flt_t) ((arg1)->z);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_mag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_mag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_mag_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lens_id_mag_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->mag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_mag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_mag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_mag_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result = (flt_t) ((arg1)->mag);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_weight_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_weight_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_weight_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lens_id_weight_set" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  if (arg1) (arg1)->weight = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_weight_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_weight_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_weight_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result = (flt_t) ((arg1)->weight);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_unmasked_frac_bin_limits_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  IceBRG::limit_vector< distance_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_unmasked_frac_bin_limits_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_unmasked_frac_bin_limits_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_id_unmasked_frac_bin_limits_set" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lens_id_unmasked_frac_bin_limits_set" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->unmasked_frac_bin_limits = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_unmasked_frac_bin_limits_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::limit_vector< distance_type > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_unmasked_frac_bin_limits_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_unmasked_frac_bin_limits_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result =  ((arg1)->unmasked_frac_bin_limits);
  resultobj = SWIG_NewPointerObj((new IceBRG::limit_vector< distance_type >(static_cast< const IceBRG::limit_vector< distance_type >& >(result))), SWIGTYPE_p_IceBRG__limit_vectorT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_unmasked_fracs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  std::vector< flt_t,std::allocator< flt_t > > *arg2 = (std::vector< flt_t,std::allocator< flt_t > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_unmasked_fracs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_unmasked_fracs_set" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_id_unmasked_fracs_set" "', argument " "2"" of type '" "std::vector< flt_t,std::allocator< flt_t > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< flt_t,std::allocator< flt_t > > * >(argp2);
  if (arg1) (arg1)->unmasked_fracs = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_unmasked_fracs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< flt_t,std::allocator< flt_t > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_id_unmasked_fracs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_unmasked_fracs_get" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  result = (std::vector< flt_t,std::allocator< flt_t > > *)& ((arg1)->unmasked_fracs);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_id_unmasked_frac(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_id_unmasked_frac",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_unmasked_frac" "', argument " "1"" of type '" "IceBRG::lens_id const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lens_id_unmasked_frac" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::lens_id const *)arg1)->unmasked_frac((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_id__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ssize_t *arg1 = 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  std::vector< distance_type,std::allocator< distance_type > > *arg5 = 0 ;
  std::vector< flt_t,std::allocator< flt_t > > *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::lens_id *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_lens_id",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_lens_id" "', argument " "1"" of type '" "ssize_t const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_lens_id" "', argument " "1"" of type '" "ssize_t const &""'"); 
  }
  arg1 = reinterpret_cast< ssize_t * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_lens_id" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_lens_id" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_lens_id" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_lens_id" "', argument " "5"" of type '" "std::vector< distance_type,std::allocator< distance_type > > const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_lens_id" "', argument " "5"" of type '" "std::vector< distance_type,std::allocator< distance_type > > const &""'"); 
  }
  arg5 = reinterpret_cast< std::vector< distance_type,std::allocator< distance_type > > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_lens_id" "', argument " "6"" of type '" "std::vector< flt_t,std::allocator< flt_t > > const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_lens_id" "', argument " "6"" of type '" "std::vector< flt_t,std::allocator< flt_t > > const &""'"); 
  }
  arg6 = reinterpret_cast< std::vector< flt_t,std::allocator< flt_t > > * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_lens_id" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  result = (IceBRG::lens_id *)new IceBRG::lens_id((ssize_t const &)*arg1,(mass_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(std::vector< distance_type,std::allocator< distance_type > > const &)*arg5,(std::vector< flt_t,std::allocator< flt_t > > const &)*arg6,(flt_t const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_id, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_id__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ssize_t *arg1 = 0 ;
  mass_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  std::vector< distance_type,std::allocator< distance_type > > *arg5 = 0 ;
  std::vector< flt_t,std::allocator< flt_t > > *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::lens_id *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_lens_id",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_lens_id" "', argument " "1"" of type '" "ssize_t const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_lens_id" "', argument " "1"" of type '" "ssize_t const &""'"); 
  }
  arg1 = reinterpret_cast< ssize_t * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_lens_id" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_lens_id" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_lens_id" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_lens_id" "', argument " "5"" of type '" "std::vector< distance_type,std::allocator< distance_type > > const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_lens_id" "', argument " "5"" of type '" "std::vector< distance_type,std::allocator< distance_type > > const &""'"); 
  }
  arg5 = reinterpret_cast< std::vector< distance_type,std::allocator< distance_type > > * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_lens_id" "', argument " "6"" of type '" "std::vector< flt_t,std::allocator< flt_t > > const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_lens_id" "', argument " "6"" of type '" "std::vector< flt_t,std::allocator< flt_t > > const &""'"); 
  }
  arg6 = reinterpret_cast< std::vector< flt_t,std::allocator< flt_t > > * >(argp6);
  result = (IceBRG::lens_id *)new IceBRG::lens_id((ssize_t const &)*arg1,(mass_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(std::vector< distance_type,std::allocator< distance_type > > const &)*arg5,(std::vector< flt_t,std::allocator< flt_t > > const &)*arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_id, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_id(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[8];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ssize_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_lens_id__SWIG_1(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ssize_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_lens_id__SWIG_0(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_lens_id'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lens_id::lens_id(ssize_t const &,mass_type const &,flt_t const &,flt_t const &,std::vector< distance_type,std::allocator< distance_type > > const &,std::vector< flt_t,std::allocator< flt_t > > const &,flt_t const &)\n"
    "    IceBRG::lens_id::lens_id(ssize_t const &,mass_type const &,flt_t const &,flt_t const &,std::vector< distance_type,std::allocator< distance_type > > const &,std::vector< flt_t,std::allocator< flt_t > > const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_lens_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id *arg1 = (IceBRG::lens_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_lens_id",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lens_id" "', argument " "1"" of type '" "IceBRG::lens_id *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lens_id_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__lens_id, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_pair_bin",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bin" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bin" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_pair_bin" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_pair_bin",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bin" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bin" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_pair_bin",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bin" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(flt_t const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_pair_bin",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_pair_bin" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pair_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_pair_bin",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bin" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3,(mass_type const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pair_bin",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pair_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pair_bin",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1,(distance_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bin",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bin" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin((distance_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pair_bin")) SWIG_fail;
  result = (IceBRG::pair_bin *)new IceBRG::pair_bin();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pair_bin__SWIG_9(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_pair_bin__SWIG_8(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_pair_bin__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_pair_bin__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_pair_bin__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_pair_bin__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_pair_bin__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_pair_bin__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_pair_bin__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_pair_bin__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_pair_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &,mass_type const &,flt_t const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &,mass_type const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &,mass_type const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &,distance_type const &)\n"
    "    IceBRG::pair_bin::pair_bin(distance_type const &)\n"
    "    IceBRG::pair_bin::pair_bin()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_pair_bin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pair_bin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pair_bin" "', argument " "1"" of type '" "IceBRG::pair_bin *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_set_z_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_set_z_buffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_set_z_buffer" "', argument " "1"" of type '" "IceBRG::pair_bin *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bin_set_z_buffer" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_z_buffer((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_z_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_z_buffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_z_buffer" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->z_buffer();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_add_pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  lens_source_pair *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_add_pair",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_add_pair" "', argument " "1"" of type '" "IceBRG::pair_bin *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_lens_source_pair,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_add_pair" "', argument " "2"" of type '" "lens_source_pair const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_add_pair" "', argument " "2"" of type '" "lens_source_pair const &""'"); 
  }
  arg2 = reinterpret_cast< lens_source_pair * >(argp2);
  (arg1)->add_pair((lens_source_pair const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_add_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  IceBRG::lens_id *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bin_add_lens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_add_lens" "', argument " "1"" of type '" "IceBRG::pair_bin *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__lens_id,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bin_add_lens" "', argument " "2"" of type '" "IceBRG::lens_id const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bin_add_lens" "', argument " "2"" of type '" "IceBRG::lens_id const &""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::lens_id * >(argp2);
  (arg1)->add_lens((IceBRG::lens_id const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_clear" "', argument " "1"" of type '" "IceBRG::pair_bin *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->pair_count();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->shear_pair_count();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->magf_pair_count();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_effective_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_effective_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_effective_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->effective_pair_count();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_effective_pair_count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_effective_pair_count",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_effective_pair_count" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->shear_effective_pair_count();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_sum_of_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_sum_of_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_sum_of_weights" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->sum_of_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_sum_of_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_sum_of_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_sum_of_weights" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->shear_sum_of_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_sum_of_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_sum_of_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_sum_of_weights" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->magf_sum_of_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_sum_of_square_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_sum_of_square_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_sum_of_square_weights" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->sum_of_square_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_sum_of_square_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_sum_of_square_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_sum_of_square_weights" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->shear_sum_of_square_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_sum_of_square_weights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_sum_of_square_weights",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_sum_of_square_weights" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->magf_sum_of_square_weights();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_num_lenses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_num_lenses",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_num_lenses" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->num_lenses();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_num_lenses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ssize_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_num_lenses",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_num_lenses" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->magf_num_lenses();
  resultobj = SWIG_NewPointerObj((new ssize_t(static_cast< const ssize_t& >(result))), SWIGTYPE_p_ssize_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_R_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_R_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_R_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (distance_type)((IceBRG::pair_bin const *)arg1)->R_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_R_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_R_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_R_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (distance_type)((IceBRG::pair_bin const *)arg1)->shear_R_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_R_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_R_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_R_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (distance_type)((IceBRG::pair_bin const *)arg1)->magf_R_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_lens_m_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_lens_m_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_lens_m_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (mass_type)((IceBRG::pair_bin const *)arg1)->lens_m_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_lens_m_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_lens_m_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_lens_m_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (mass_type)((IceBRG::pair_bin const *)arg1)->shear_lens_m_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_lens_m_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_lens_m_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_lens_m_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (mass_type)((IceBRG::pair_bin const *)arg1)->magf_lens_m_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_lens_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_lens_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_lens_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->lens_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_lens_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_lens_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_lens_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->shear_lens_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_lens_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_lens_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_lens_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->magf_lens_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_lens_mag_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_lens_mag_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_lens_mag_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->lens_mag_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_lens_mag_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_lens_mag_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_lens_mag_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->shear_lens_mag_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_lens_mag_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_lens_mag_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_lens_mag_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->magf_lens_mag_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_source_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_source_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_source_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->source_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_shear_source_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_shear_source_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_shear_source_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->shear_source_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_magf_source_z_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_magf_source_z_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_magf_source_z_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->magf_source_z_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_unmasked_frac(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_unmasked_frac",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_unmasked_frac" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->unmasked_frac();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_area(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< 0,0,0,2,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_area",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_area" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->area();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< 0,0,0,2,0 >(static_cast< const custom_unit_type< 0,0,0,2,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT_0_0_0_2_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_t_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_t_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_t_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin const *)arg1)->delta_Sigma_t_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_x_mean(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_x_mean",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_x_mean" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin const *)arg1)->delta_Sigma_x_mean();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_t_mean_square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< -4,0,2,0,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_t_mean_square",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_t_mean_square" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->delta_Sigma_t_mean_square();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< -4,0,2,0,0 >(static_cast< const custom_unit_type< -4,0,2,0,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT__4_0_2_0_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_x_mean_square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  custom_unit_type< -4,0,2,0,0 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_x_mean_square",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_x_mean_square" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = ((IceBRG::pair_bin const *)arg1)->delta_Sigma_x_mean_square();
  resultobj = SWIG_NewPointerObj((new custom_unit_type< -4,0,2,0,0 >(static_cast< const custom_unit_type< -4,0,2,0,0 >& >(result))), SWIGTYPE_p_custom_unit_typeT__4_0_2_0_0_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_t_std(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_t_std",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_t_std" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin const *)arg1)->delta_Sigma_t_std();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_x_std(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_x_std",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_x_std" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin const *)arg1)->delta_Sigma_x_std();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_t_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_t_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_t_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin const *)arg1)->delta_Sigma_t_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_delta_Sigma_x_stderr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_delta_Sigma_x_stderr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_delta_Sigma_x_stderr" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (surface_density_type)((IceBRG::pair_bin const *)arg1)->delta_Sigma_x_stderr();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_mu_hat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_mu_hat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_mu_hat" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->mu_hat();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_mu_square_hat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_mu_square_hat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_mu_square_hat" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->mu_square_hat();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bin_mu_W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bin *arg1 = (IceBRG::pair_bin *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bin_mu_W",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bin, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bin_mu_W" "', argument " "1"" of type '" "IceBRG::pair_bin const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bin * >(argp1);
  result = (flt_t)((IceBRG::pair_bin const *)arg1)->mu_W();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pair_bin_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__pair_bin, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pair_bins_summary")) SWIG_fail;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  IceBRG::limit_vector< flt_t > arg3 ;
  IceBRG::limit_vector< flt_t > arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  IceBRG::limit_vector< flt_t > arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pair_bins_summary",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pair_bins_summary",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bins_summary",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  flt_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  ssize_t *arg12 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  flt_t temp10 ;
  double val10 ;
  int ecode10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  void *argp12 = 0 ;
  int res12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bins_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bins_summary" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  ecode10 = SWIG_AsVal_double(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_pair_bins_summary" "', argument " "10"" of type '" "flt_t""'");
  } 
  temp10 = static_cast< flt_t >(val10);
  arg10 = &temp10;
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_pair_bins_summary" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  res12 = SWIG_ConvertPtr(obj11, &argp12, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res12)) {
    SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "new_pair_bins_summary" "', argument " "12"" of type '" "ssize_t const &""'"); 
  }
  if (!argp12) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "12"" of type '" "ssize_t const &""'"); 
  }
  arg12 = reinterpret_cast< ssize_t * >(argp12);
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9,(flt_t const &)*arg10,(flt_t const &)*arg11,(ssize_t const &)*arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  flt_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  flt_t temp10 ;
  double val10 ;
  int ecode10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bins_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bins_summary" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  ecode10 = SWIG_AsVal_double(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_pair_bins_summary" "', argument " "10"" of type '" "flt_t""'");
  } 
  temp10 = static_cast< flt_t >(val10);
  arg10 = &temp10;
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_pair_bins_summary" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9,(flt_t const &)*arg10,(flt_t const &)*arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  flt_t *arg10 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  flt_t temp10 ;
  double val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bins_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bins_summary" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  ecode10 = SWIG_AsVal_double(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_pair_bins_summary" "', argument " "10"" of type '" "flt_t""'");
  } 
  temp10 = static_cast< flt_t >(val10);
  arg10 = &temp10;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9,(flt_t const &)*arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bins_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bins_summary" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bins_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_bins_summary" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_bins_summary" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_bins_summary" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_pair_bins_summary",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_bins_summary" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pair_bins_summary",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pair_bins_summary",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_bins_summary" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((distance_type const &)*arg1,(distance_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::istream *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bins_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "std::istream &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "std::istream &""'"); 
  }
  arg1 = reinterpret_cast< std::istream * >(argp1);
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_17(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bins_summary",&obj0)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary__SWIG_18(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_bins_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__pair_binner,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::pair_binner const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::pair_binner const &""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  result = (IceBRG::pair_bins_summary *)new IceBRG::pair_bins_summary((IceBRG::pair_binner const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_bins_summary(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[13];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 12) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pair_bins_summary__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bins_summary__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__istream, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bins_summary__SWIG_16(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bins_summary__SWIG_18(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_bins_summary__SWIG_17(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_pair_bins_summary__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_pair_bins_summary__SWIG_15(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_pair_bins_summary__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_pair_bins_summary__SWIG_14(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_pair_bins_summary__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_pair_bins_summary__SWIG_13(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_pair_bins_summary__SWIG_12(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_pair_bins_summary__SWIG_11(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_pair_bins_summary__SWIG_10(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_pair_bins_summary__SWIG_9(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_new_pair_bins_summary__SWIG_8(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_double(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_new_pair_bins_summary__SWIG_7(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_double(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_new_pair_bins_summary__SWIG_6(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_double(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          int res = SWIG_ConvertPtr(argv[11], 0, SWIGTYPE_p_ssize_t, 0);
                          _v = SWIG_CheckState(res);
                          if (_v) {
                            return _wrap_new_pair_bins_summary__SWIG_5(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_pair_bins_summary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary()\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >,IceBRG::limit_vector< flt_t >,IceBRG::limit_vector< flt_t >)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >,IceBRG::limit_vector< flt_t >)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(IceBRG::limit_vector< distance_type >)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &,mass_type const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(distance_type const &,distance_type const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(std::istream &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(std::string const &)\n"
    "    IceBRG::pair_bins_summary::pair_bins_summary(IceBRG::pair_binner const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_pair_bins_summary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pair_bins_summary",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pair_bins_summary" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_R_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< distance_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_set_R_limits",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_R_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_R_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_R_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_R_limits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_m_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_set_m_limits",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_m_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_m_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_m_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_m_limits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_z_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< flt_t > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_set_z_limits",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_z_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_z_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_z_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_z_limits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_mag_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< flt_t > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_set_mag_limits",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_mag_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_mag_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_mag_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_mag_limits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_R_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_linear_R_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_R_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_R_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_R_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_R_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_R_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_linear_R_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_m_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  mass_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_linear_m_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_m_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_m_limits" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_m_limits" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_m_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_m_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_linear_m_limits((mass_type const &)*arg2,(mass_type const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_z_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_linear_z_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_z_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_z_limits" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_z_limits" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_z_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_z_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_linear_z_limits((flt_t const &)*arg2,(flt_t const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_mag_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_linear_mag_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_mag_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_mag_limits" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_mag_limits" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_mag_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_mag_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_linear_mag_limits((flt_t const &)*arg2,(flt_t const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_R_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_log_R_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_log_R_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_R_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_log_R_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_R_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  (arg1)->set_log_R_limits((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_R_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bins_summary_set_log_R_limits__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_log_R_limits__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_log_R_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_log_R_limits(distance_type const &,distance_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_R_limits(distance_type const &,distance_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_m_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  mass_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_log_m_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_log_m_limits((mass_type const &)*arg2,(mass_type const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_m_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  mass_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mass_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_log_m_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "2"" of type '" "mass_type""'");
  } 
  temp2 = static_cast< mass_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_m_limits" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  (arg1)->set_log_m_limits((mass_type const &)*arg2,(mass_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_m_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bins_summary_set_log_m_limits__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_log_m_limits__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_log_m_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_log_m_limits(mass_type const &,mass_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_m_limits(mass_type const &,mass_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_z_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_log_z_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_log_z_limits((flt_t const &)*arg2,(flt_t const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_z_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_log_z_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_z_limits" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  (arg1)->set_log_z_limits((flt_t const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_z_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bins_summary_set_log_z_limits__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_log_z_limits__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_log_z_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_log_z_limits(flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_z_limits(flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_mag_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_log_mag_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_log_mag_limits((flt_t const &)*arg2,(flt_t const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_mag_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_log_mag_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_mag_limits" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  (arg1)->set_log_mag_limits((flt_t const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_mag_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bins_summary_set_log_mag_limits__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_log_mag_limits__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_log_mag_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_log_mag_limits(flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_mag_limits(flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_clear_R_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_clear_R_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_clear_R_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  (arg1)->clear_R_limits();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_clear_m_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_clear_m_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_clear_m_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  (arg1)->clear_m_limits();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_clear_z_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_clear_z_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_clear_z_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  (arg1)->clear_z_limits();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_clear_mag_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_clear_mag_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_clear_mag_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  (arg1)->clear_mag_limits();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< distance_type > arg2 ;
  IceBRG::limit_vector< mass_type > arg3 ;
  IceBRG::limit_vector< flt_t > arg4 ;
  IceBRG::limit_vector< flt_t > arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_set_limits",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_set_limits" "', argument " "3"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "3"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_limits" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_set_limits" "', argument " "5"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "5"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  (arg1)->set_limits(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< distance_type > arg2 ;
  IceBRG::limit_vector< mass_type > arg3 ;
  IceBRG::limit_vector< flt_t > arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_set_limits" "', argument " "3"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "3"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_limits" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  (arg1)->set_limits(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_limits__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< distance_type > arg2 ;
  IceBRG::limit_vector< mass_type > arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_set_limits" "', argument " "3"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "3"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  (arg1)->set_limits(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_limits__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::limit_vector< distance_type > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_set_limits",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_limits" "', argument " "2"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->set_limits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_set_limits__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pair_bins_summary_set_limits__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_limits__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_set_limits__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_limits(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >,IceBRG::limit_vector< flt_t >,IceBRG::limit_vector< flt_t >)\n"
    "    IceBRG::pair_bins_summary::set_limits(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >,IceBRG::limit_vector< flt_t >)\n"
    "    IceBRG::pair_bins_summary::set_limits(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >)\n"
    "    IceBRG::pair_bins_summary::set_limits(IceBRG::limit_vector< distance_type >)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  flt_t *arg12 = 0 ;
  ssize_t *arg13 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  flt_t temp12 ;
  double val12 ;
  int ecode12 = 0 ;
  void *argp13 = 0 ;
  int res13 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  ecode12 = SWIG_AsVal_double(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "12"" of type '" "flt_t""'");
  } 
  temp12 = static_cast< flt_t >(val12);
  arg12 = &temp12;
  res13 = SWIG_ConvertPtr(obj12, &argp13, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "13"" of type '" "ssize_t const &""'"); 
  }
  if (!argp13) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "13"" of type '" "ssize_t const &""'"); 
  }
  arg13 = reinterpret_cast< ssize_t * >(argp13);
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10,(flt_t const &)*arg11,(flt_t const &)*arg12,(ssize_t const &)*arg13);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  flt_t *arg12 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  flt_t temp12 ;
  double val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  ecode12 = SWIG_AsVal_double(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "12"" of type '" "flt_t""'");
  } 
  temp12 = static_cast< flt_t >(val12);
  arg12 = &temp12;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10,(flt_t const &)*arg11,(flt_t const &)*arg12);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10,(flt_t const &)*arg11);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_linear_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_linear_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_linear_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  (arg1)->set_linear_limits((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_linear_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[14];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 13) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bins_summary_set_linear_limits__SWIG_10(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_linear_limits__SWIG_9(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_set_linear_limits__SWIG_8(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pair_bins_summary_set_linear_limits__SWIG_7(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_pair_bins_summary_set_linear_limits__SWIG_6(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_pair_bins_summary_set_linear_limits__SWIG_5(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_pair_bins_summary_set_linear_limits__SWIG_4(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_pair_bins_summary_set_linear_limits__SWIG_3(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_pair_bins_summary_set_linear_limits__SWIG_2(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_double(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_pair_bins_summary_set_linear_limits__SWIG_1(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_double(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_ConvertPtr(argv[12], 0, SWIGTYPE_p_ssize_t, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              return _wrap_pair_bins_summary_set_linear_limits__SWIG_0(self, args);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_linear_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_linear_limits(distance_type const &,distance_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  flt_t *arg12 = 0 ;
  ssize_t *arg13 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  flt_t temp12 ;
  double val12 ;
  int ecode12 = 0 ;
  void *argp13 = 0 ;
  int res13 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  PyObject * obj12 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_log_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_log_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "pair_bins_summary_set_log_limits" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  ecode12 = SWIG_AsVal_double(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "pair_bins_summary_set_log_limits" "', argument " "12"" of type '" "flt_t""'");
  } 
  temp12 = static_cast< flt_t >(val12);
  arg12 = &temp12;
  res13 = SWIG_ConvertPtr(obj12, &argp13, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "pair_bins_summary_set_log_limits" "', argument " "13"" of type '" "ssize_t const &""'"); 
  }
  if (!argp13) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "13"" of type '" "ssize_t const &""'"); 
  }
  arg13 = reinterpret_cast< ssize_t * >(argp13);
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10,(flt_t const &)*arg11,(flt_t const &)*arg12,(ssize_t const &)*arg13);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  flt_t *arg12 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  flt_t temp12 ;
  double val12 ;
  int ecode12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_log_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_log_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "pair_bins_summary_set_log_limits" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  ecode12 = SWIG_AsVal_double(obj11, &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "pair_bins_summary_set_log_limits" "', argument " "12"" of type '" "flt_t""'");
  } 
  temp12 = static_cast< flt_t >(val12);
  arg12 = &temp12;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10,(flt_t const &)*arg11,(flt_t const &)*arg12);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_log_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_log_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "pair_bins_summary_set_log_limits" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10,(flt_t const &)*arg11);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  ssize_t *arg10 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_log_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_log_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "10"" of type '" "ssize_t const &""'"); 
  }
  arg10 = reinterpret_cast< ssize_t * >(argp10);
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9,(ssize_t const &)*arg10);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_log_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pair_bins_summary_set_log_limits" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pair_bins_summary_set_log_limits" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  ssize_t *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "7"" of type '" "ssize_t const &""'"); 
  }
  arg7 = reinterpret_cast< ssize_t * >(argp7);
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6,(ssize_t const &)*arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  mass_type *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  mass_type temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_bins_summary_set_log_limits" "', argument " "6"" of type '" "mass_type""'");
  } 
  temp6 = static_cast< mass_type >(val6);
  arg6 = &temp6;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5,(mass_type const &)*arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_set_log_limits" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4,(mass_type const &)*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  ssize_t *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_set_log_limits" "', argument " "4"" of type '" "ssize_t const &""'"); 
  }
  arg4 = reinterpret_cast< ssize_t * >(argp4);
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3,(ssize_t const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_set_log_limits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_set_log_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_set_log_limits" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_set_log_limits" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  (arg1)->set_log_limits((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_set_log_limits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[14];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 13) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pair_bins_summary_set_log_limits__SWIG_10(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pair_bins_summary_set_log_limits__SWIG_9(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_set_log_limits__SWIG_8(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pair_bins_summary_set_log_limits__SWIG_7(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  return _wrap_pair_bins_summary_set_log_limits__SWIG_6(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_pair_bins_summary_set_log_limits__SWIG_5(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_pair_bins_summary_set_log_limits__SWIG_4(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_pair_bins_summary_set_log_limits__SWIG_3(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_pair_bins_summary_set_log_limits__SWIG_2(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_double(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            return _wrap_pair_bins_summary_set_log_limits__SWIG_1(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 13) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                int res = SWIG_ConvertPtr(argv[6], 0, SWIGTYPE_p_ssize_t, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_ConvertPtr(argv[9], 0, SWIGTYPE_p_ssize_t, 0);
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          {
                            int res = SWIG_AsVal_double(argv[11], NULL);
                            _v = SWIG_CheckState(res);
                          }
                          if (_v) {
                            int res = SWIG_ConvertPtr(argv[12], 0, SWIGTYPE_p_ssize_t, 0);
                            _v = SWIG_CheckState(res);
                            if (_v) {
                              return _wrap_pair_bins_summary_set_log_limits__SWIG_0(self, args);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_set_log_limits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &,mass_type const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &,ssize_t const &)\n"
    "    IceBRG::pair_bins_summary::set_log_limits(distance_type const &,distance_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_fixbad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_fixbad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_fixbad" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  (arg1)->fixbad();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_R_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::limit_vector< distance_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_R_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_R_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  result = (IceBRG::limit_vector< distance_type > *) &((IceBRG::pair_bins_summary const *)arg1)->R_limits();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_m_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::limit_vector< mass_type > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_m_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_m_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  result = (IceBRG::limit_vector< mass_type > *) &((IceBRG::pair_bins_summary const *)arg1)->m_limits();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_z_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::limit_vector< flt_t > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_z_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_z_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  result = (IceBRG::limit_vector< flt_t > *) &((IceBRG::pair_bins_summary const *)arg1)->z_limits();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_mag_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::limit_vector< flt_t > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_mag_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_mag_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  result = (IceBRG::limit_vector< flt_t > *) &((IceBRG::pair_bins_summary const *)arg1)->mag_limits();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_valid_limits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_valid_limits",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_valid_limits" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  result = (bool)((IceBRG::pair_bins_summary const *)arg1)->valid_limits();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_sort" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ((IceBRG::pair_bins_summary const *)arg1)->sort();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_clear" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_pair_bin_summaries(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::vector< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > >,std::allocator< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > > > >,std::allocator< std::vector< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > >,std::allocator< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > > > > > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_bins_summary_pair_bin_summaries",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_pair_bin_summaries" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  result = (std::vector< std::vector< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > >,std::allocator< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > > > >,std::allocator< std::vector< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > >,std::allocator< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > > > > > > *) &((IceBRG::pair_bins_summary const *)arg1)->pair_bin_summaries();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_mean_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_t_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_t_mean_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_mean_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_x_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_x_mean_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_std_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_t_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_t_std_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_std_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_x_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_x_std_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_stderr_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_t_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_t_stderr_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_stderr_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_x_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_x_stderr_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_mean_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t arg4 ;
  flt_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_t_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  arg4 = static_cast< flt_t >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_delta_Sigma_t_mean_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  arg5 = static_cast< flt_t >(val5);
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_t_mean_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_mean_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_t_mean_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_t_mean_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_delta_Sigma_t_mean_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_t_mean_for_bin(ssize_t,ssize_t,ssize_t,ssize_t) const\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_t_mean_for_bin(distance_type const &,mass_type const &,flt_t,flt_t) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_mean_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t arg4 ;
  flt_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_x_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  arg4 = static_cast< flt_t >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_delta_Sigma_x_mean_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  arg5 = static_cast< flt_t >(val5);
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_x_mean_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_mean_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_x_mean_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_x_mean_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_delta_Sigma_x_mean_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_x_mean_for_bin(ssize_t,ssize_t,ssize_t,ssize_t) const\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_x_mean_for_bin(distance_type const &,mass_type const &,flt_t,flt_t) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_std_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t arg4 ;
  flt_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_t_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  arg4 = static_cast< flt_t >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_delta_Sigma_t_std_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  arg5 = static_cast< flt_t >(val5);
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_t_std_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_std_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_t_std_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_t_std_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_delta_Sigma_t_std_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_t_std_for_bin(ssize_t,ssize_t,ssize_t,ssize_t) const\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_t_std_for_bin(distance_type const &,mass_type const &,flt_t,flt_t) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_std_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t arg4 ;
  flt_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_x_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  arg4 = static_cast< flt_t >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_delta_Sigma_x_std_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  arg5 = static_cast< flt_t >(val5);
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_x_std_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_std_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_x_std_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_x_std_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_delta_Sigma_x_std_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_x_std_for_bin(ssize_t,ssize_t,ssize_t,ssize_t) const\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_x_std_for_bin(distance_type const &,mass_type const &,flt_t,flt_t) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_stderr_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t arg4 ;
  flt_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_t_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  arg4 = static_cast< flt_t >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_delta_Sigma_t_stderr_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  arg5 = static_cast< flt_t >(val5);
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_t_stderr_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_t_stderr_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_t_stderr_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_t_stderr_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_delta_Sigma_t_stderr_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_t_stderr_for_bin(ssize_t,ssize_t,ssize_t,ssize_t) const\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_t_stderr_for_bin(distance_type const &,mass_type const &,flt_t,flt_t) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_stderr_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t arg4 ;
  flt_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_bins_summary_delta_Sigma_x_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  arg4 = static_cast< flt_t >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_bins_summary_delta_Sigma_x_stderr_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  arg5 = static_cast< flt_t >(val5);
  result = (surface_density_type)((IceBRG::pair_bins_summary const *)arg1)->delta_Sigma_x_stderr_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_delta_Sigma_x_stderr_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_x_stderr_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_bins_summary_delta_Sigma_x_stderr_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_delta_Sigma_x_stderr_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_x_stderr_for_bin(ssize_t,ssize_t,ssize_t,ssize_t) const\n"
    "    IceBRG::pair_bins_summary::delta_Sigma_x_stderr_for_bin(distance_type const &,mass_type const &,flt_t,flt_t) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_print_bin_data__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::ostream *arg2 = 0 ;
  unitconv_map *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_print_bin_data",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_print_bin_data" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_unitconv_map,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_print_bin_data" "', argument " "3"" of type '" "unitconv_map const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_print_bin_data" "', argument " "3"" of type '" "unitconv_map const &""'"); 
  }
  arg3 = reinterpret_cast< unitconv_map * >(argp3);
  (arg1)->print_bin_data(*arg2,(unitconv_map const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_print_bin_data__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_print_bin_data",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_print_bin_data" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  (arg1)->print_bin_data(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_print_bin_data__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::string *arg2 = 0 ;
  unitconv_map *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pair_bins_summary_print_bin_data",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_print_bin_data" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_unitconv_map,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_bins_summary_print_bin_data" "', argument " "3"" of type '" "unitconv_map const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_print_bin_data" "', argument " "3"" of type '" "unitconv_map const &""'"); 
  }
  arg3 = reinterpret_cast< unitconv_map * >(argp3);
  (arg1)->print_bin_data((std::string const &)*arg2,(unitconv_map const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_print_bin_data__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_print_bin_data",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_print_bin_data" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_print_bin_data" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->print_bin_data((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_print_bin_data(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_print_bin_data__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_print_bin_data__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_unitconv_map, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pair_bins_summary_print_bin_data__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_unitconv_map, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pair_bins_summary_print_bin_data__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_print_bin_data'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::print_bin_data(std::ostream &,unitconv_map const &)\n"
    "    IceBRG::pair_bins_summary::print_bin_data(std::ostream &)\n"
    "    IceBRG::pair_bins_summary::print_bin_data(std::string const &,unitconv_map const &)\n"
    "    IceBRG::pair_bins_summary::print_bin_data(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::pair_bins_summary *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bins_summary *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary___iadd__" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__pair_bins_summary,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary___iadd__" "', argument " "2"" of type '" "IceBRG::pair_bins_summary const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary___iadd__" "', argument " "2"" of type '" "IceBRG::pair_bins_summary const &""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp2);
  result = (IceBRG::pair_bins_summary *) &(arg1)->operator +=((IceBRG::pair_bins_summary const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  IceBRG::pair_bins_summary arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_bins_summary result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary___add__" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__pair_bins_summary,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary___add__" "', argument " "2"" of type '" "IceBRG::pair_bins_summary""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary___add__" "', argument " "2"" of type '" "IceBRG::pair_bins_summary""'");
    } else {
      IceBRG::pair_bins_summary * temp = reinterpret_cast< IceBRG::pair_bins_summary * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = ((IceBRG::pair_bins_summary const *)arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new IceBRG::pair_bins_summary(static_cast< const IceBRG::pair_bins_summary& >(result))), SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_save__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  ((IceBRG::pair_bins_summary const *)arg1)->save(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_save__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bins_summary const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ((IceBRG::pair_bins_summary const *)arg1)->save((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_save__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::ostream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__ostream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::ostream &""'"); 
  }
  arg2 = reinterpret_cast< std::ostream * >(argp2);
  (arg1)->save(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_save__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_save" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_save" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->save((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_save(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_save__SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__ostream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_save__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_save__SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_save__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_save'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::save(std::ostream &) const\n"
    "    IceBRG::pair_bins_summary::save(std::string const &) const\n"
    "    IceBRG::pair_bins_summary::save(std::ostream &)\n"
    "    IceBRG::pair_bins_summary::save(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::istream *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_load" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__istream,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_load" "', argument " "2"" of type '" "std::istream &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_load" "', argument " "2"" of type '" "std::istream &""'"); 
  }
  arg2 = reinterpret_cast< std::istream * >(argp2);
  (arg1)->load(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_bins_summary *arg1 = (IceBRG::pair_bins_summary *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_bins_summary_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_bins_summary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_bins_summary_load" "', argument " "1"" of type '" "IceBRG::pair_bins_summary *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_bins_summary * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_bins_summary_load" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_bins_summary_load" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->load((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_bins_summary_load(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__istream, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_load__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_bins_summary, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pair_bins_summary_load__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_bins_summary_load'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_bins_summary::load(std::istream &)\n"
    "    IceBRG::pair_bins_summary::load(std::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *pair_bins_summary_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__pair_bins_summary, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_source_obj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_source_obj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_source_obj" "', argument " "1"" of type '" "IceBRG::source_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_source_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::source_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_obj_source_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_source_obj_clone" "', argument " "1"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  result = (IceBRG::source_obj *)((IceBRG::source_obj const *)arg1)->source_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_gamma_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_obj_gamma_1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_gamma_1" "', argument " "1"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  result = (flt_t)((IceBRG::source_obj const *)arg1)->gamma_1();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_gamma_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_obj_gamma_2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_gamma_2" "', argument " "1"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  result = (flt_t)((IceBRG::source_obj const *)arg1)->gamma_2();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_kappa(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_obj_kappa",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_kappa" "', argument " "1"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  result = (flt_t)((IceBRG::source_obj const *)arg1)->kappa();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_set_gamma_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:source_obj_set_gamma_1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_set_gamma_1" "', argument " "1"" of type '" "IceBRG::source_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "source_obj_set_gamma_1" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  (arg1)->set_gamma_1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_set_gamma_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:source_obj_set_gamma_2",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_set_gamma_2" "', argument " "1"" of type '" "IceBRG::source_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "source_obj_set_gamma_2" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  (arg1)->set_gamma_2(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_obj_set_kappa(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_obj *arg1 = (IceBRG::source_obj *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:source_obj_set_kappa",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_obj_set_kappa" "', argument " "1"" of type '" "IceBRG::source_obj *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_obj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "source_obj_set_kappa" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  (arg1)->set_kappa(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *source_obj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__source_obj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_lens_source_pair_store_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_store_data",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_store_data" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  ((IceBRG::lens_source_pair const *)arg1)->store_data();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_source_pair__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_lens_source_pair")) SWIG_fail;
  result = (IceBRG::lens_source_pair *)new IceBRG::lens_source_pair();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_source_pair, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_source_pair__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  IceBRG::source_obj *arg2 = (IceBRG::source_obj *) 0 ;
  flt_t arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::lens_source_pair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_lens_source_pair",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_lens_source_pair" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_lens_source_pair" "', argument " "2"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::source_obj * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_lens_source_pair" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_lens_source_pair" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (IceBRG::lens_source_pair *)new IceBRG::lens_source_pair((IceBRG::sky_obj const *)arg1,(IceBRG::source_obj const *)arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_source_pair, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_source_pair__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  IceBRG::source_obj *arg2 = (IceBRG::source_obj *) 0 ;
  flt_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::lens_source_pair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_lens_source_pair",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_lens_source_pair" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_lens_source_pair" "', argument " "2"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::source_obj * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_lens_source_pair" "', argument " "3"" of type '" "flt_t""'");
  } 
  arg3 = static_cast< flt_t >(val3);
  result = (IceBRG::lens_source_pair *)new IceBRG::lens_source_pair((IceBRG::sky_obj const *)arg1,(IceBRG::source_obj const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_source_pair, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_source_pair__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::sky_obj *arg1 = (IceBRG::sky_obj *) 0 ;
  IceBRG::source_obj *arg2 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::lens_source_pair *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_lens_source_pair",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_lens_source_pair" "', argument " "1"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::sky_obj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_lens_source_pair" "', argument " "2"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::source_obj * >(argp2);
  result = (IceBRG::lens_source_pair *)new IceBRG::lens_source_pair((IceBRG::sky_obj const *)arg1,(IceBRG::source_obj const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_source_pair, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_source_pair(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_lens_source_pair__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__source_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_lens_source_pair__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__source_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_lens_source_pair__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__source_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_lens_source_pair__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_lens_source_pair'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lens_source_pair::lens_source_pair()\n"
    "    IceBRG::lens_source_pair::lens_source_pair(IceBRG::sky_obj const *,IceBRG::source_obj const *,flt_t,bool)\n"
    "    IceBRG::lens_source_pair::lens_source_pair(IceBRG::sky_obj const *,IceBRG::source_obj const *,flt_t)\n"
    "    IceBRG::lens_source_pair::lens_source_pair(IceBRG::sky_obj const *,IceBRG::source_obj const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_lens_source_pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_lens_source_pair",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lens_source_pair" "', argument " "1"" of type '" "IceBRG::lens_source_pair *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_lens__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  IceBRG::sky_obj *arg2 = (IceBRG::sky_obj *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lens_source_pair_set_lens",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_set_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_source_pair_set_lens" "', argument " "2"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::sky_obj * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lens_source_pair_set_lens" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->set_lens((IceBRG::sky_obj const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_lens__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  IceBRG::sky_obj *arg2 = (IceBRG::sky_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_source_pair_set_lens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_set_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_source_pair_set_lens" "', argument " "2"" of type '" "IceBRG::sky_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::sky_obj * >(argp2);
  (arg1)->set_lens((IceBRG::sky_obj const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_lens(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lens_source_pair, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_lens_source_pair_set_lens__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lens_source_pair, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__sky_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lens_source_pair_set_lens__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lens_source_pair_set_lens'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lens_source_pair::set_lens(IceBRG::sky_obj const *,bool const)\n"
    "    IceBRG::lens_source_pair::set_lens(IceBRG::sky_obj const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_source__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  IceBRG::source_obj *arg2 = (IceBRG::source_obj *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lens_source_pair_set_source",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_set_source" "', argument " "1"" of type '" "IceBRG::lens_source_pair *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_source_pair_set_source" "', argument " "2"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::source_obj * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lens_source_pair_set_source" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->set_source((IceBRG::source_obj const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_source__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  IceBRG::source_obj *arg2 = (IceBRG::source_obj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_source_pair_set_source",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_set_source" "', argument " "1"" of type '" "IceBRG::lens_source_pair *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_source_pair_set_source" "', argument " "2"" of type '" "IceBRG::source_obj const *""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::source_obj * >(argp2);
  (arg1)->set_source((IceBRG::source_obj const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_source(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lens_source_pair, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__source_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_lens_source_pair_set_source__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lens_source_pair, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IceBRG__source_obj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lens_source_pair_set_source__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lens_source_pair_set_source'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lens_source_pair::set_source(IceBRG::source_obj const *,bool const)\n"
    "    IceBRG::lens_source_pair::set_source(IceBRG::source_obj const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_set_weight_pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  flt_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lens_source_pair_set_weight_pair",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_set_weight_pair" "', argument " "1"" of type '" "IceBRG::lens_source_pair *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lens_source_pair_set_weight_pair" "', argument " "2"" of type '" "flt_t""'");
  } 
  arg2 = static_cast< flt_t >(val2);
  (arg1)->set_weight_pair(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::sky_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (IceBRG::sky_obj *)((IceBRG::lens_source_pair const *)arg1)->lens();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_source(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::source_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_source",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_source" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (IceBRG::source_obj *)((IceBRG::lens_source_pair const *)arg1)->source();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_z_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_z_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_z_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->z_lens();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_z_source(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_z_source",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_z_source" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->z_source();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_z_diff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_z_diff",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_z_diff" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t)((IceBRG::lens_source_pair const *)arg1)->z_diff();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_m_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_m_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_m_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (mass_type *) &((IceBRG::lens_source_pair const *)arg1)->m_lens();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_id_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_id_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_id_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (size_t *) &((IceBRG::lens_source_pair const *)arg1)->id_lens();
  resultobj = SWIG_From_size_t(static_cast< size_t >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_mag_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_mag_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_mag_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->mag_lens();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_mag_source(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_mag_source",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_mag_source" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->mag_source();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_R_proj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  distance_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_R_proj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_R_proj" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (distance_type *) &((IceBRG::lens_source_pair const *)arg1)->R_proj();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_theta(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  angle_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_theta",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_theta" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (angle_type *) &((IceBRG::lens_source_pair const *)arg1)->theta();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_gamma_t(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_gamma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_gamma_t" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->gamma_t();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_gamma_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_gamma_x",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_gamma_x" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->gamma_x();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_weight_lens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_weight_lens",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_weight_lens" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->weight_lens();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_weight_source(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_weight_source",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_weight_source" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->weight_source();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_weight_pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_weight_pair",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_weight_pair" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t *) &((IceBRG::lens_source_pair const *)arg1)->weight_pair();
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_shear_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_shear_weight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_shear_weight" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t)((IceBRG::lens_source_pair const *)arg1)->shear_weight();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_mag_weight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_mag_weight",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_mag_weight" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (flt_t)((IceBRG::lens_source_pair const *)arg1)->mag_weight();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_sigma_crit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_sigma_crit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_sigma_crit" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (surface_density_type)((IceBRG::lens_source_pair const *)arg1)->sigma_crit();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_delta_Sigma_t(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_delta_Sigma_t",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_delta_Sigma_t" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (surface_density_type)((IceBRG::lens_source_pair const *)arg1)->delta_Sigma_t();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lens_source_pair_delta_Sigma_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_source_pair *arg1 = (IceBRG::lens_source_pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lens_source_pair_delta_Sigma_x",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_source_pair, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_source_pair_delta_Sigma_x" "', argument " "1"" of type '" "IceBRG::lens_source_pair const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_source_pair * >(argp1);
  result = (surface_density_type)((IceBRG::lens_source_pair const *)arg1)->delta_Sigma_x();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lens_source_pair_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__lens_source_pair, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_lensing_tNFW_profile_extension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_lensing_tNFW_profile_extension")) SWIG_fail;
  result = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *)new IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_lensing_tNFW_profile_extension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_lensing_tNFW_profile_extension",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lensing_tNFW_profile_extension" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_lensing_profile_extension_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::lensing_tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lensing_tNFW_profile_extension_lensing_profile_extension_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_lensing_profile_extension_clone" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  result = (IceBRG::lensing_tNFW_profile *)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->lensing_profile_extension_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lensing_tNFW_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_proj_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_proj_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_proj_dens" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_proj_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->proj_dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_proj_enc_mass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_proj_enc_mass",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_proj_enc_mass" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_proj_enc_mass" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->proj_enc_mass((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_proj_enc_dens(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_proj_enc_dens",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_proj_enc_dens" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_proj_enc_dens" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->proj_enc_dens((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_offset_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_offset_Delta_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_offset_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_offset_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_offset_Delta_Sigma" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->offset_Delta_Sigma((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_offset_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_quick_offset_Delta_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_offset_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_offset_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_quick_offset_Delta_Sigma" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_offset_Delta_Sigma((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_group_Delta_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_group_Delta_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_group_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_group_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_group_Delta_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->group_Delta_Sigma((distance_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_group_Delta_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_group_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_group_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_group_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->group_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_group_Delta_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lensing_tNFW_profile_extension_group_Delta_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lensing_tNFW_profile_extension_group_Delta_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lensing_tNFW_profile_extension_group_Delta_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::group_Delta_Sigma(distance_type const &,flt_t const &) const\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::group_Delta_Sigma(distance_type const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->semiquick_group_Delta_Sigma((distance_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->semiquick_group_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::semiquick_group_Delta_Sigma(distance_type const &,flt_t const &) const\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::semiquick_group_Delta_Sigma(distance_type const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_group_Delta_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_quick_group_Delta_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_group_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_group_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_quick_group_Delta_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_group_Delta_Sigma((distance_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_group_Delta_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_group_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_group_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_group_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_group_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_group_Delta_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lensing_tNFW_profile_extension_quick_group_Delta_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lensing_tNFW_profile_extension_quick_group_Delta_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lensing_tNFW_profile_extension_quick_group_Delta_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::quick_group_Delta_Sigma(distance_type const &,flt_t const &) const\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::quick_group_Delta_Sigma(distance_type const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_two_halo_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_two_halo_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_two_halo_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_two_halo_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->two_halo_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_two_halo_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_two_halo_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_two_halo_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_two_halo_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_two_halo_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_shift_factor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_shift_factor",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_shift_factor" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_shift_factor" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (flt_t)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->shift_factor((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_shifted_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_shifted_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_shifted_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_shifted_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->shifted_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_shifted_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_semiquick_shifted_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_semiquick_shifted_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_semiquick_shifted_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->semiquick_shifted_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_shifted_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_shifted_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_shifted_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_shifted_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_shifted_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_shifted_no_enh_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_shifted_no_enh_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_shifted_no_enh_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_shifted_no_enh_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->shifted_no_enh_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_shifted_no_enh_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_semiquick_shifted_no_enh_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_semiquick_shifted_no_enh_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_semiquick_shifted_no_enh_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->semiquick_shifted_no_enh_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_shifted_no_enh_Delta_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_shifted_no_enh_Delta_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_shifted_no_enh_Delta_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_shifted_no_enh_Delta_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_shifted_no_enh_Delta_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_offset_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_offset_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_offset_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_offset_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_offset_Sigma" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->offset_Sigma((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_offset_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  distance_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  distance_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_quick_offset_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_offset_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_offset_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_quick_offset_Sigma" "', argument " "3"" of type '" "distance_type""'");
  } 
  temp3 = static_cast< distance_type >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_offset_Sigma((distance_type const &)*arg2,(distance_type const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_group_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_group_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_group_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_group_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_group_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->group_Sigma((distance_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_group_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_group_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_group_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_group_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->group_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_group_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lensing_tNFW_profile_extension_group_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lensing_tNFW_profile_extension_group_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lensing_tNFW_profile_extension_group_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::group_Sigma(distance_type const &,flt_t const &) const\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::group_Sigma(distance_type const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_group_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_semiquick_group_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->semiquick_group_Sigma((distance_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_group_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_semiquick_group_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_semiquick_group_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->semiquick_group_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_semiquick_group_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lensing_tNFW_profile_extension_semiquick_group_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lensing_tNFW_profile_extension_semiquick_group_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lensing_tNFW_profile_extension_semiquick_group_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::semiquick_group_Sigma(distance_type const &,flt_t const &) const\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::semiquick_group_Sigma(distance_type const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_group_Sigma__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lensing_tNFW_profile_extension_quick_group_Sigma",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_group_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_group_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "lensing_tNFW_profile_extension_quick_group_Sigma" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_group_Sigma((distance_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_group_Sigma__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_group_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_group_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_group_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_group_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_group_Sigma(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_lensing_tNFW_profile_extension_quick_group_Sigma__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_lensing_tNFW_profile_extension_quick_group_Sigma__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'lensing_tNFW_profile_extension_quick_group_Sigma'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::quick_group_Sigma(distance_type const &,flt_t const &) const\n"
    "    IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile >::quick_group_Sigma(distance_type const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_two_halo_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_two_halo_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_two_halo_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_two_halo_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->two_halo_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_extension_quick_two_halo_Sigma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *arg1 = (IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *) 0 ;
  distance_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:lensing_tNFW_profile_extension_quick_two_halo_Sigma",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_extension_quick_two_halo_Sigma" "', argument " "1"" of type '" "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "lensing_tNFW_profile_extension_quick_two_halo_Sigma" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  result = (surface_density_type)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > const *)arg1)->quick_two_halo_Sigma((distance_type const &)*arg2);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lensing_tNFW_profile_extension_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_lensing_tNFW_profile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_lensing_tNFW_profile")) SWIG_fail;
  result = (IceBRG::lensing_tNFW_profile *)new IceBRG::lensing_tNFW_profile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lensing_tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lensing_tNFW_profile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::lensing_tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_lensing_tNFW_profile",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_lensing_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_lensing_tNFW_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_lensing_tNFW_profile" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_lensing_tNFW_profile" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (IceBRG::lensing_tNFW_profile *)new IceBRG::lensing_tNFW_profile((mass_type const &)*arg1,(flt_t const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lensing_tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lensing_tNFW_profile__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::lensing_tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_lensing_tNFW_profile",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_lensing_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_lensing_tNFW_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_lensing_tNFW_profile" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (IceBRG::lensing_tNFW_profile *)new IceBRG::lensing_tNFW_profile((mass_type const &)*arg1,(flt_t const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lensing_tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lensing_tNFW_profile__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  mass_type *arg1 = 0 ;
  flt_t *arg2 = 0 ;
  mass_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::lensing_tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_lensing_tNFW_profile",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_lensing_tNFW_profile" "', argument " "1"" of type '" "mass_type""'");
  } 
  temp1 = static_cast< mass_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_lensing_tNFW_profile" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  result = (IceBRG::lensing_tNFW_profile *)new IceBRG::lensing_tNFW_profile((mass_type const &)*arg1,(flt_t const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lensing_tNFW_profile, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lensing_tNFW_profile(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_lensing_tNFW_profile__SWIG_0(self, args);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_lensing_tNFW_profile__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_lensing_tNFW_profile__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_lensing_tNFW_profile__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_lensing_tNFW_profile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::lensing_tNFW_profile::lensing_tNFW_profile()\n"
    "    IceBRG::lensing_tNFW_profile::lensing_tNFW_profile(mass_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::lensing_tNFW_profile::lensing_tNFW_profile(mass_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::lensing_tNFW_profile::lensing_tNFW_profile(mass_type const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_lensing_tNFW_profile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_tNFW_profile *arg1 = (IceBRG::lensing_tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_lensing_tNFW_profile",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_tNFW_profile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lensing_tNFW_profile" "', argument " "1"" of type '" "IceBRG::lensing_tNFW_profile *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_tNFW_profile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_density_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_tNFW_profile *arg1 = (IceBRG::lensing_tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::density_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lensing_tNFW_profile_density_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_density_profile_clone" "', argument " "1"" of type '" "IceBRG::lensing_tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_tNFW_profile * >(argp1);
  result = (IceBRG::density_profile *)((IceBRG::lensing_tNFW_profile const *)arg1)->density_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__density_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_lensing_tNFW_profile_tNFW_profile_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lensing_tNFW_profile *arg1 = (IceBRG::lensing_tNFW_profile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::tNFW_profile *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:lensing_tNFW_profile_tNFW_profile_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lensing_tNFW_profile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lensing_tNFW_profile_tNFW_profile_clone" "', argument " "1"" of type '" "IceBRG::lensing_tNFW_profile const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lensing_tNFW_profile * >(argp1);
  result = (IceBRG::tNFW_profile *)((IceBRG::lensing_tNFW_profile const *)arg1)->tNFW_profile_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__tNFW_profile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lensing_tNFW_profile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__lensing_tNFW_profile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_lens_id_lt___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id_lt *arg1 = (IceBRG::lens_id_lt *) 0 ;
  IceBRG::lens_id *arg2 = 0 ;
  IceBRG::lens_id *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:lens_id_lt___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id_lt, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "lens_id_lt___call__" "', argument " "1"" of type '" "IceBRG::lens_id_lt const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id_lt * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__lens_id,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "lens_id_lt___call__" "', argument " "2"" of type '" "IceBRG::lens_id const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lens_id_lt___call__" "', argument " "2"" of type '" "IceBRG::lens_id const &""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::lens_id * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__lens_id,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "lens_id_lt___call__" "', argument " "3"" of type '" "IceBRG::lens_id const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "lens_id_lt___call__" "', argument " "3"" of type '" "IceBRG::lens_id const &""'"); 
  }
  arg3 = reinterpret_cast< IceBRG::lens_id * >(argp3);
  result = (bool)((IceBRG::lens_id_lt const *)arg1)->operator ()((IceBRG::lens_id const &)*arg2,(IceBRG::lens_id const &)*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_lens_id_lt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id_lt *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_lens_id_lt")) SWIG_fail;
  result = (IceBRG::lens_id_lt *)new IceBRG::lens_id_lt();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__lens_id_lt, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_lens_id_lt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::lens_id_lt *arg1 = (IceBRG::lens_id_lt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_lens_id_lt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__lens_id_lt, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_lens_id_lt" "', argument " "1"" of type '" "IceBRG::lens_id_lt *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::lens_id_lt * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *lens_id_lt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__lens_id_lt, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pair_binner")) SWIG_fail;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  IceBRG::limit_vector< flt_t > arg3 ;
  IceBRG::limit_vector< flt_t > arg4 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "4"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  IceBRG::limit_vector< flt_t > arg3 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pair_binner",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "IceBRG::limit_vector< flt_t >""'");
    } else {
      IceBRG::limit_vector< flt_t > * temp = reinterpret_cast< IceBRG::limit_vector< flt_t > * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  IceBRG::limit_vector< mass_type > arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pair_binner",&obj0,&obj1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "2"" of type '" "IceBRG::limit_vector< mass_type >""'");
    } else {
      IceBRG::limit_vector< mass_type > * temp = reinterpret_cast< IceBRG::limit_vector< mass_type > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::limit_vector< distance_type > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pair_binner",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_IceBRG__limit_vectorT_double_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "1"" of type '" "IceBRG::limit_vector< distance_type >""'");
    } else {
      IceBRG::limit_vector< distance_type > * temp = reinterpret_cast< IceBRG::limit_vector< distance_type > * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  flt_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  ssize_t *arg12 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  flt_t temp10 ;
  double val10 ;
  int ecode10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  void *argp12 = 0 ;
  int res12 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_binner" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_binner" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  ecode10 = SWIG_AsVal_double(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_pair_binner" "', argument " "10"" of type '" "flt_t""'");
  } 
  temp10 = static_cast< flt_t >(val10);
  arg10 = &temp10;
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_pair_binner" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  res12 = SWIG_ConvertPtr(obj11, &argp12, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res12)) {
    SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "new_pair_binner" "', argument " "12"" of type '" "ssize_t const &""'"); 
  }
  if (!argp12) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "12"" of type '" "ssize_t const &""'"); 
  }
  arg12 = reinterpret_cast< ssize_t * >(argp12);
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9,(flt_t const &)*arg10,(flt_t const &)*arg11,(ssize_t const &)*arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  flt_t *arg10 = 0 ;
  flt_t *arg11 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  flt_t temp10 ;
  double val10 ;
  int ecode10 = 0 ;
  flt_t temp11 ;
  double val11 ;
  int ecode11 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  PyObject * obj10 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_binner" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_binner" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  ecode10 = SWIG_AsVal_double(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_pair_binner" "', argument " "10"" of type '" "flt_t""'");
  } 
  temp10 = static_cast< flt_t >(val10);
  arg10 = &temp10;
  ecode11 = SWIG_AsVal_double(obj10, &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_pair_binner" "', argument " "11"" of type '" "flt_t""'");
  } 
  temp11 = static_cast< flt_t >(val11);
  arg11 = &temp11;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9,(flt_t const &)*arg10,(flt_t const &)*arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  flt_t *arg10 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  flt_t temp10 ;
  double val10 ;
  int ecode10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_binner" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_binner" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  ecode10 = SWIG_AsVal_double(obj9, &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_pair_binner" "', argument " "10"" of type '" "flt_t""'");
  } 
  temp10 = static_cast< flt_t >(val10);
  arg10 = &temp10;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9,(flt_t const &)*arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  ssize_t *arg9 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_binner" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_binner" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "9"" of type '" "ssize_t const &""'"); 
  }
  arg9 = reinterpret_cast< ssize_t * >(argp9);
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8,(ssize_t const &)*arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_binner" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_pair_binner" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  flt_t *arg7 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  flt_t temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_pair_binner" "', argument " "7"" of type '" "flt_t""'");
  } 
  temp7 = static_cast< flt_t >(val7);
  arg7 = &temp7;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6,(flt_t const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  ssize_t *arg6 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "6"" of type '" "ssize_t const &""'"); 
  }
  arg6 = reinterpret_cast< ssize_t * >(argp6);
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5,(ssize_t const &)*arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  mass_type *arg5 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  mass_type temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_pair_binner" "', argument " "5"" of type '" "mass_type""'");
  } 
  temp5 = static_cast< mass_type >(val5);
  arg5 = &temp5;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4,(mass_type const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  mass_type *arg4 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mass_type temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_pair_binner",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_pair_binner" "', argument " "4"" of type '" "mass_type""'");
  } 
  temp4 = static_cast< mass_type >(val4);
  arg4 = &temp4;
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3,(mass_type const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner__SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  distance_type *arg1 = 0 ;
  distance_type *arg2 = 0 ;
  ssize_t *arg3 = 0 ;
  distance_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::pair_binner *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pair_binner",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pair_binner" "', argument " "1"" of type '" "distance_type""'");
  } 
  temp1 = static_cast< distance_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pair_binner" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pair_binner" "', argument " "3"" of type '" "ssize_t const &""'"); 
  }
  arg3 = reinterpret_cast< ssize_t * >(argp3);
  result = (IceBRG::pair_binner *)new IceBRG::pair_binner((distance_type const &)*arg1,(distance_type const &)*arg2,(ssize_t const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pair_binner(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[13];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 12) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pair_binner__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pair_binner__SWIG_4(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_pair_binner__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_pair_binner__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_pair_binner__SWIG_14(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_IceBRG__limit_vectorT_double_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_pair_binner__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_pair_binner__SWIG_13(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_pair_binner__SWIG_12(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_new_pair_binner__SWIG_11(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_pair_binner__SWIG_10(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_pair_binner__SWIG_9(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      return _wrap_new_pair_binner__SWIG_8(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_double(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        return _wrap_new_pair_binner__SWIG_7(self, args);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_double(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          return _wrap_new_pair_binner__SWIG_6(self, args);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_ssize_t, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    int res = SWIG_ConvertPtr(argv[8], 0, SWIGTYPE_p_ssize_t, 0);
                    _v = SWIG_CheckState(res);
                    if (_v) {
                      {
                        int res = SWIG_AsVal_double(argv[9], NULL);
                        _v = SWIG_CheckState(res);
                      }
                      if (_v) {
                        {
                          int res = SWIG_AsVal_double(argv[10], NULL);
                          _v = SWIG_CheckState(res);
                        }
                        if (_v) {
                          int res = SWIG_ConvertPtr(argv[11], 0, SWIGTYPE_p_ssize_t, 0);
                          _v = SWIG_CheckState(res);
                          if (_v) {
                            return _wrap_new_pair_binner__SWIG_5(self, args);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_pair_binner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::pair_binner()\n"
    "    IceBRG::pair_binner::pair_binner(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >,IceBRG::limit_vector< flt_t >,IceBRG::limit_vector< flt_t >)\n"
    "    IceBRG::pair_binner::pair_binner(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >,IceBRG::limit_vector< flt_t >)\n"
    "    IceBRG::pair_binner::pair_binner(IceBRG::limit_vector< distance_type >,IceBRG::limit_vector< mass_type >)\n"
    "    IceBRG::pair_binner::pair_binner(IceBRG::limit_vector< distance_type >)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &,ssize_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &,flt_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &,ssize_t const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &,mass_type const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &,mass_type const &)\n"
    "    IceBRG::pair_binner::pair_binner(distance_type const &,distance_type const &,ssize_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_pair_binner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pair_binner",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pair_binner" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_set_z_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  flt_t *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  flt_t temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_binner_set_z_buffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_set_z_buffer" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_set_z_buffer" "', argument " "2"" of type '" "flt_t""'");
  } 
  temp2 = static_cast< flt_t >(val2);
  arg2 = &temp2;
  (arg1)->set_z_buffer((flt_t const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_z_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_binner_z_buffer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_z_buffer" "', argument " "1"" of type '" "IceBRG::pair_binner const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  result = (flt_t)((IceBRG::pair_binner const *)arg1)->z_buffer();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_binnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  IceBRG::galaxy *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_binner_binnable",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_binnable" "', argument " "1"" of type '" "IceBRG::pair_binner const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__galaxy,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_binnable" "', argument " "2"" of type '" "IceBRG::galaxy const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_binnable" "', argument " "2"" of type '" "IceBRG::galaxy const &""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::galaxy * >(argp2);
  result = (bool)((IceBRG::pair_binner const *)arg1)->binnable((IceBRG::galaxy const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_add_pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  IceBRG::lens_source_pair *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pair_binner_add_pair",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_add_pair" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_IceBRG__lens_source_pair,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_add_pair" "', argument " "2"" of type '" "IceBRG::lens_source_pair const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_add_pair" "', argument " "2"" of type '" "IceBRG::lens_source_pair const &""'"); 
  }
  arg2 = reinterpret_cast< IceBRG::lens_source_pair * >(argp2);
  (arg1)->add_pair((IceBRG::lens_source_pair const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_add_lens_id__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pair_binner_add_lens_id",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_add_lens_id" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_add_lens_id" "', argument " "2"" of type '" "ssize_t const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_add_lens_id" "', argument " "2"" of type '" "ssize_t const &""'"); 
  }
  arg2 = reinterpret_cast< ssize_t * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_add_lens_id" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_add_lens_id" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_add_lens_id" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pair_binner_add_lens_id" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  (arg1)->add_lens_id((ssize_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_add_lens_id__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_add_lens_id",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_add_lens_id" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_add_lens_id" "', argument " "2"" of type '" "ssize_t const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_add_lens_id" "', argument " "2"" of type '" "ssize_t const &""'"); 
  }
  arg2 = reinterpret_cast< ssize_t * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_add_lens_id" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_add_lens_id" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_add_lens_id" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  (arg1)->add_lens_id((ssize_t const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_add_lens_id(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_add_lens_id__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pair_binner_add_lens_id__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_add_lens_id'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::add_lens_id(ssize_t const &,mass_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::pair_binner::add_lens_id(ssize_t const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_binner_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_binner_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_clear" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_binner_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_empty" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  (arg1)->empty();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pair_binner_sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_sort" "', argument " "1"" of type '" "IceBRG::pair_binner const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ((IceBRG::pair_binner const *)arg1)->sort();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_mean_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_t_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)(arg1)->delta_Sigma_t_mean_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_mean_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_x_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)(arg1)->delta_Sigma_x_mean_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_std_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_t_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)(arg1)->delta_Sigma_t_std_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_std_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_x_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)(arg1)->delta_Sigma_x_std_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_stderr_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_t_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)(arg1)->delta_Sigma_t_stderr_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_stderr_for_bin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  ssize_t arg2 ;
  ssize_t arg3 ;
  ssize_t arg4 ;
  ssize_t arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_x_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "2"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "3"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "4"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "5"" of type '" "ssize_t""'");
    } else {
      ssize_t * temp = reinterpret_cast< ssize_t * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  result = (surface_density_type)(arg1)->delta_Sigma_x_stderr_for_bin(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_mean_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_t_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_delta_Sigma_t_mean_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (surface_density_type)(arg1)->delta_Sigma_t_mean_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_mean_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_t_mean_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_t_mean_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_delta_Sigma_t_mean_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::delta_Sigma_t_mean_for_bin(ssize_t,ssize_t,ssize_t,ssize_t)\n"
    "    IceBRG::pair_binner::delta_Sigma_t_mean_for_bin(distance_type const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_mean_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_x_mean_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_delta_Sigma_x_mean_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (surface_density_type)(arg1)->delta_Sigma_x_mean_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_mean_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_x_mean_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_x_mean_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_delta_Sigma_x_mean_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::delta_Sigma_x_mean_for_bin(ssize_t,ssize_t,ssize_t,ssize_t)\n"
    "    IceBRG::pair_binner::delta_Sigma_x_mean_for_bin(distance_type const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_std_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_t_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_delta_Sigma_t_std_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (surface_density_type)(arg1)->delta_Sigma_t_std_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_std_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_t_std_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_t_std_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_delta_Sigma_t_std_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::delta_Sigma_t_std_for_bin(ssize_t,ssize_t,ssize_t,ssize_t)\n"
    "    IceBRG::pair_binner::delta_Sigma_t_std_for_bin(distance_type const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_std_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_x_std_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_delta_Sigma_x_std_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (surface_density_type)(arg1)->delta_Sigma_x_std_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_std_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_x_std_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_x_std_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_delta_Sigma_x_std_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::delta_Sigma_x_std_for_bin(ssize_t,ssize_t,ssize_t,ssize_t)\n"
    "    IceBRG::pair_binner::delta_Sigma_x_std_for_bin(distance_type const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_stderr_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_t_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_delta_Sigma_t_stderr_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (surface_density_type)(arg1)->delta_Sigma_t_stderr_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_t_stderr_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_t_stderr_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_t_stderr_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_delta_Sigma_t_stderr_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::delta_Sigma_t_stderr_for_bin(ssize_t,ssize_t,ssize_t,ssize_t)\n"
    "    IceBRG::pair_binner::delta_Sigma_t_stderr_for_bin(distance_type const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_stderr_for_bin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::pair_binner *arg1 = (IceBRG::pair_binner *) 0 ;
  distance_type *arg2 = 0 ;
  mass_type *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  distance_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  mass_type temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  surface_density_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pair_binner_delta_Sigma_x_stderr_for_bin",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__pair_binner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "1"" of type '" "IceBRG::pair_binner *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::pair_binner * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "2"" of type '" "distance_type""'");
  } 
  temp2 = static_cast< distance_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "3"" of type '" "mass_type""'");
  } 
  temp3 = static_cast< mass_type >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pair_binner_delta_Sigma_x_stderr_for_bin" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (surface_density_type)(arg1)->delta_Sigma_x_stderr_for_bin((distance_type const &)*arg2,(mass_type const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pair_binner_delta_Sigma_x_stderr_for_bin(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ssize_t, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ssize_t, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_ssize_t, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_x_stderr_for_bin__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_IceBRG__pair_binner, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pair_binner_delta_Sigma_x_stderr_for_bin__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'pair_binner_delta_Sigma_x_stderr_for_bin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::pair_binner::delta_Sigma_x_stderr_for_bin(ssize_t,ssize_t,ssize_t,ssize_t)\n"
    "    IceBRG::pair_binner::delta_Sigma_x_stderr_for_bin(distance_type const &,mass_type const &,flt_t const &,flt_t const &)\n");
  return 0;
}


SWIGINTERN PyObject *pair_binner_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__pair_binner, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  mass_type *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  flt_t *arg9 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  mass_type temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  flt_t temp9 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:new_source_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_source_galaxy" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_source_galaxy" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_source_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_source_galaxy" "', argument " "7"" of type '" "mass_type""'");
  } 
  temp7 = static_cast< mass_type >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_source_galaxy" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_source_galaxy" "', argument " "9"" of type '" "flt_t""'");
  } 
  temp9 = static_cast< flt_t >(val9);
  arg9 = &temp9;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(mass_type const &)*arg7,(flt_t const &)*arg8,(flt_t const &)*arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  mass_type *arg7 = 0 ;
  flt_t *arg8 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  mass_type temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  flt_t temp8 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:new_source_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_source_galaxy" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_source_galaxy" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_source_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_source_galaxy" "', argument " "7"" of type '" "mass_type""'");
  } 
  temp7 = static_cast< mass_type >(val7);
  arg7 = &temp7;
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_source_galaxy" "', argument " "8"" of type '" "flt_t""'");
  } 
  temp8 = static_cast< flt_t >(val8);
  arg8 = &temp8;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(mass_type const &)*arg7,(flt_t const &)*arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  mass_type *arg7 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  mass_type temp7 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:new_source_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_source_galaxy" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_source_galaxy" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_source_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_source_galaxy" "', argument " "7"" of type '" "mass_type""'");
  } 
  temp7 = static_cast< mass_type >(val7);
  arg7 = &temp7;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6,(mass_type const &)*arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  flt_t *arg6 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  flt_t temp6 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:new_source_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_source_galaxy" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_source_galaxy" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_source_galaxy" "', argument " "6"" of type '" "flt_t""'");
  } 
  temp6 = static_cast< flt_t >(val6);
  arg6 = &temp6;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5,(flt_t const &)*arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  flt_t *arg5 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  flt_t temp5 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_source_galaxy",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_source_galaxy" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_source_galaxy" "', argument " "5"" of type '" "flt_t""'");
  } 
  temp5 = static_cast< flt_t >(val5);
  arg5 = &temp5;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4,(flt_t const &)*arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  flt_t *arg4 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  flt_t temp4 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:new_source_galaxy",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_source_galaxy" "', argument " "4"" of type '" "flt_t""'");
  } 
  temp4 = static_cast< flt_t >(val4);
  arg4 = &temp4;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3,(flt_t const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  flt_t *arg3 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  flt_t temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_source_galaxy",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_source_galaxy" "', argument " "3"" of type '" "flt_t""'");
  } 
  temp3 = static_cast< flt_t >(val3);
  arg3 = &temp3;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2,(flt_t const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type *arg2 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  angle_type temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_source_galaxy",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_source_galaxy" "', argument " "2"" of type '" "angle_type""'");
  } 
  temp2 = static_cast< angle_type >(val2);
  arg2 = &temp2;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1,(angle_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  angle_type *arg1 = 0 ;
  angle_type temp1 ;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_source_galaxy",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_source_galaxy" "', argument " "1"" of type '" "angle_type""'");
  } 
  temp1 = static_cast< angle_type >(val1);
  arg1 = &temp1;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy((angle_type const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_source_galaxy")) SWIG_fail;
  result = (IceBRG::source_galaxy *)new IceBRG::source_galaxy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_source_galaxy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_source_galaxy__SWIG_9(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_source_galaxy__SWIG_8(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_source_galaxy__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_source_galaxy__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_source_galaxy__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_source_galaxy__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_source_galaxy__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_new_source_galaxy__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_new_source_galaxy__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_new_source_galaxy__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_source_galaxy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &,mass_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &,mass_type const &,flt_t const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &,mass_type const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &,flt_t const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &,flt_t const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &,angle_type const &)\n"
    "    IceBRG::source_galaxy::source_galaxy(angle_type const &)\n"
    "    IceBRG::source_galaxy::source_galaxy()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_source_galaxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_source_galaxy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_source_galaxy" "', argument " "1"" of type '" "IceBRG::source_galaxy *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_galaxy_m(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  mass_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_galaxy_m",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_galaxy_m" "', argument " "1"" of type '" "IceBRG::source_galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  result = (mass_type)((IceBRG::source_galaxy const *)arg1)->m();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_galaxy_mag(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  flt_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_galaxy_mag",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_galaxy_mag" "', argument " "1"" of type '" "IceBRG::source_galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  result = (flt_t)((IceBRG::source_galaxy const *)arg1)->mag();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_galaxy_redshift_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::redshift_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_galaxy_redshift_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_galaxy_redshift_obj_clone" "', argument " "1"" of type '" "IceBRG::source_galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  result = (IceBRG::redshift_obj *)((IceBRG::source_galaxy const *)arg1)->redshift_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__redshift_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_galaxy_sky_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::sky_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_galaxy_sky_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_galaxy_sky_obj_clone" "', argument " "1"" of type '" "IceBRG::source_galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  result = (IceBRG::sky_obj *)((IceBRG::source_galaxy const *)arg1)->sky_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__sky_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_galaxy_galaxy_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::galaxy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_galaxy_galaxy_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_galaxy_galaxy_clone" "', argument " "1"" of type '" "IceBRG::source_galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  result = (IceBRG::galaxy *)((IceBRG::source_galaxy const *)arg1)->galaxy_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__galaxy, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_source_galaxy_source_obj_clone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  IceBRG::source_galaxy *arg1 = (IceBRG::source_galaxy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  IceBRG::source_obj *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:source_galaxy_source_obj_clone",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_IceBRG__source_galaxy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "source_galaxy_source_obj_clone" "', argument " "1"" of type '" "IceBRG::source_galaxy const *""'"); 
  }
  arg1 = reinterpret_cast< IceBRG::source_galaxy * >(argp1);
  result = (IceBRG::source_obj *)((IceBRG::source_galaxy const *)arg1)->source_obj_clone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IceBRG__source_obj, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *source_galaxy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_IceBRG__source_galaxy, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"rebin_int", _wrap_rebin_int, METH_VARARGS, NULL},
	 { (char *)"rebin_long", _wrap_rebin_long, METH_VARARGS, NULL},
	 { (char *)"rebin_uint", _wrap_rebin_uint, METH_VARARGS, NULL},
	 { (char *)"rebin_ulong", _wrap_rebin_ulong, METH_VARARGS, NULL},
	 { (char *)"rebin_float", _wrap_rebin_float, METH_VARARGS, NULL},
	 { (char *)"rebin_double", _wrap_rebin_double, METH_VARARGS, NULL},
	 { (char *)"get_abs_mag_B_from_mass", _wrap_get_abs_mag_B_from_mass, METH_VARARGS, NULL},
	 { (char *)"get_mass_from_abs_mag_B", _wrap_get_mass_from_abs_mag_B, METH_VARARGS, NULL},
	 { (char *)"get_app_mag_B_from_mass", _wrap_get_app_mag_B_from_mass, METH_VARARGS, NULL},
	 { (char *)"get_mass_from_app_mag_B", _wrap_get_mass_from_app_mag_B, METH_VARARGS, NULL},
	 { (char *)"cluster_richness", _wrap_cluster_richness, METH_VARARGS, NULL},
	 { (char *)"min_cluster_mass", _wrap_min_cluster_mass, METH_VARARGS, NULL},
	 { (char *)"cluster_angular_density_at_z", _wrap_cluster_angular_density_at_z, METH_VARARGS, NULL},
	 { (char *)"visible_clusters", _wrap_visible_clusters, METH_VARARGS, NULL},
	 { (char *)"integrate_mean_cluster_richness_at_redshift", _wrap_integrate_mean_cluster_richness_at_redshift, METH_VARARGS, NULL},
	 { (char *)"integrate_mean_cluster_richness", _wrap_integrate_mean_cluster_richness, METH_VARARGS, NULL},
	 { (char *)"mean_cluster_richness_at_redshift", _wrap_mean_cluster_richness_at_redshift, METH_VARARGS, NULL},
	 { (char *)"mean_cluster_richness", _wrap_mean_cluster_richness, METH_VARARGS, NULL},
	 { (char *)"H", _wrap_H, METH_VARARGS, NULL},
	 { (char *)"rho_bar", _wrap_rho_bar, METH_VARARGS, NULL},
	 { (char *)"zfa", _wrap_zfa, METH_VARARGS, NULL},
	 { (char *)"afz", _wrap_afz, METH_VARARGS, NULL},
	 { (char *)"tfz", _wrap_tfz, METH_VARARGS, NULL},
	 { (char *)"tfa", _wrap_tfa, METH_VARARGS, NULL},
	 { (char *)"zft", _wrap_zft, METH_VARARGS, NULL},
	 { (char *)"aft", _wrap_aft, METH_VARARGS, NULL},
	 { (char *)"universe_age", _wrap_universe_age, METH_VARARGS, NULL},
	 { (char *)"integrate_add", _wrap_integrate_add, METH_VARARGS, NULL},
	 { (char *)"integrate_cmd", _wrap_integrate_cmd, METH_VARARGS, NULL},
	 { (char *)"integrate_Ld", _wrap_integrate_Ld, METH_VARARGS, NULL},
	 { (char *)"integrate_ltd", _wrap_integrate_ltd, METH_VARARGS, NULL},
	 { (char *)"integrate_distance", _wrap_integrate_distance, METH_VARARGS, NULL},
	 { (char *)"sigma_crit", _wrap_sigma_crit, METH_VARARGS, NULL},
	 { (char *)"afd", _wrap_afd, METH_VARARGS, NULL},
	 { (char *)"ad_distance", _wrap_ad_distance, METH_VARARGS, NULL},
	 { (char *)"comoving_distance", _wrap_comoving_distance, METH_VARARGS, NULL},
	 { (char *)"luminosity_distance", _wrap_luminosity_distance, METH_VARARGS, NULL},
	 { (char *)"comoving_volume_element", _wrap_comoving_volume_element, METH_VARARGS, NULL},
	 { (char *)"max_galaxy_abs_mag_B", _wrap_max_galaxy_abs_mag_B, METH_VARARGS, NULL},
	 { (char *)"galaxy_angular_density_at_z", _wrap_galaxy_angular_density_at_z, METH_VARARGS, NULL},
	 { (char *)"visible_galaxies", _wrap_visible_galaxies, METH_VARARGS, NULL},
	 { (char *)"get_abs_mag_from_app_mag", _wrap_get_abs_mag_from_app_mag, METH_VARARGS, NULL},
	 { (char *)"get_app_mag_from_abs_mag", _wrap_get_app_mag_from_abs_mag, METH_VARARGS, NULL},
	 { (char *)"differential_luminosity_function", _wrap_differential_luminosity_function, METH_VARARGS, NULL},
	 { (char *)"integrated_luminosity_function", _wrap_integrated_luminosity_function, METH_VARARGS, NULL},
	 { (char *)"faint_bright_ratio", _wrap_faint_bright_ratio, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_g_from_stellar_mass", _wrap_estimate_abs_mag_g_from_stellar_mass, METH_VARARGS, NULL},
	 { (char *)"estimate_stellar_mass_from_abs_mag_g", _wrap_estimate_stellar_mass_from_abs_mag_g, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_i_from_stellar_mass", _wrap_estimate_abs_mag_i_from_stellar_mass, METH_VARARGS, NULL},
	 { (char *)"estimate_stellar_mass_from_abs_mag_i", _wrap_estimate_stellar_mass_from_abs_mag_i, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_g_from_abs_mag_i", _wrap_estimate_abs_mag_g_from_abs_mag_i, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_i_from_abs_mag_g", _wrap_estimate_abs_mag_i_from_abs_mag_g, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_vis_from_abs_mag_i", _wrap_estimate_abs_mag_vis_from_abs_mag_i, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_i_from_abs_mag_vis", _wrap_estimate_abs_mag_i_from_abs_mag_vis, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_vis_from_stellar_mass", _wrap_estimate_abs_mag_vis_from_stellar_mass, METH_VARARGS, NULL},
	 { (char *)"estimate_stellar_mass_from_abs_mag_vis", _wrap_estimate_stellar_mass_from_abs_mag_vis, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_g_from_abs_mag_vis", _wrap_estimate_abs_mag_g_from_abs_mag_vis, METH_VARARGS, NULL},
	 { (char *)"estimate_abs_mag_vis_from_abs_mag_g", _wrap_estimate_abs_mag_vis_from_abs_mag_g, METH_VARARGS, NULL},
	 { (char *)"unnormed_power_spectrum", _wrap_unnormed_power_spectrum, METH_VARARGS, NULL},
	 { (char *)"delta_c", _wrap_delta_c, METH_VARARGS, NULL},
	 { (char *)"r_of_m", _wrap_r_of_m, METH_VARARGS, NULL},
	 { (char *)"sigma_of_r", _wrap_sigma_of_r, METH_VARARGS, NULL},
	 { (char *)"sigma_of_m", _wrap_sigma_of_m, METH_VARARGS, NULL},
	 { (char *)"nu_of_m", _wrap_nu_of_m, METH_VARARGS, NULL},
	 { (char *)"mass_function", _wrap_mass_function, METH_VARARGS, NULL},
	 { (char *)"log10_mass_function", _wrap_log10_mass_function, METH_VARARGS, NULL},
	 { (char *)"integrated_log10_mass_function", _wrap_integrated_log10_mass_function, METH_VARARGS, NULL},
	 { (char *)"new_redshift_obj", _wrap_new_redshift_obj, METH_VARARGS, NULL},
	 { (char *)"delete_redshift_obj", _wrap_delete_redshift_obj, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_set_z", _wrap_redshift_obj_set_z, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_set_z_err", _wrap_redshift_obj_set_z_err, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_z", _wrap_redshift_obj_z, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_z_err", _wrap_redshift_obj_z_err, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_H", _wrap_redshift_obj_H, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_rho_crit", _wrap_redshift_obj_rho_crit, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_redshift_obj_clone", _wrap_redshift_obj_redshift_obj_clone, METH_VARARGS, NULL},
	 { (char *)"redshift_obj_swigregister", redshift_obj_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_density_profile", _wrap_delete_density_profile, METH_VARARGS, NULL},
	 { (char *)"density_profile_mvir", _wrap_density_profile_mvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_dens", _wrap_density_profile_dens, METH_VARARGS, NULL},
	 { (char *)"density_profile_density_profile_clone", _wrap_density_profile_density_profile_clone, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_mvir", _wrap_density_profile_set_mvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_vvir", _wrap_density_profile_set_vvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_rvir", _wrap_density_profile_set_rvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_rs", _wrap_density_profile_set_rs, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_rt", _wrap_density_profile_set_rt, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_parameters", _wrap_density_profile_set_parameters, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_tau", _wrap_density_profile_set_tau, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_c", _wrap_density_profile_set_c, METH_VARARGS, NULL},
	 { (char *)"density_profile_override_rhmvir", _wrap_density_profile_override_rhmvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_override_rhmtot", _wrap_density_profile_override_rhmtot, METH_VARARGS, NULL},
	 { (char *)"density_profile_mtot", _wrap_density_profile_mtot, METH_VARARGS, NULL},
	 { (char *)"density_profile_rt", _wrap_density_profile_rt, METH_VARARGS, NULL},
	 { (char *)"density_profile_num_parameters", _wrap_density_profile_num_parameters, METH_VARARGS, NULL},
	 { (char *)"density_profile_get_parameters", _wrap_density_profile_get_parameters, METH_VARARGS, NULL},
	 { (char *)"density_profile_get_parameter_names", _wrap_density_profile_get_parameter_names, METH_VARARGS, NULL},
	 { (char *)"density_profile_enc_mass", _wrap_density_profile_enc_mass, METH_VARARGS, NULL},
	 { (char *)"density_profile_rvir", _wrap_density_profile_rvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_hmvir", _wrap_density_profile_hmvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_hmtot", _wrap_density_profile_hmtot, METH_VARARGS, NULL},
	 { (char *)"density_profile_hm", _wrap_density_profile_hm, METH_VARARGS, NULL},
	 { (char *)"density_profile_enc_dens", _wrap_density_profile_enc_dens, METH_VARARGS, NULL},
	 { (char *)"density_profile_rhmvir", _wrap_density_profile_rhmvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_rhmtot", _wrap_density_profile_rhmtot, METH_VARARGS, NULL},
	 { (char *)"density_profile_rhm", _wrap_density_profile_rhm, METH_VARARGS, NULL},
	 { (char *)"density_profile_vvir", _wrap_density_profile_vvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_vhmvir", _wrap_density_profile_vhmvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_vhmtot", _wrap_density_profile_vhmtot, METH_VARARGS, NULL},
	 { (char *)"density_profile_vhm", _wrap_density_profile_vhm, METH_VARARGS, NULL},
	 { (char *)"density_profile_vt", _wrap_density_profile_vt, METH_VARARGS, NULL},
	 { (char *)"density_profile_otvir", _wrap_density_profile_otvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_othmvir", _wrap_density_profile_othmvir, METH_VARARGS, NULL},
	 { (char *)"density_profile_othmtot", _wrap_density_profile_othmtot, METH_VARARGS, NULL},
	 { (char *)"density_profile_othm", _wrap_density_profile_othm, METH_VARARGS, NULL},
	 { (char *)"density_profile_ott", _wrap_density_profile_ott, METH_VARARGS, NULL},
	 { (char *)"density_profile_set_hm_type", _wrap_density_profile_set_hm_type, METH_VARARGS, NULL},
	 { (char *)"density_profile_accel", _wrap_density_profile_accel, METH_VARARGS, NULL},
	 { (char *)"density_profile_Daccel", _wrap_density_profile_Daccel, METH_VARARGS, NULL},
	 { (char *)"density_profile_truncate_to_fraction", _wrap_density_profile_truncate_to_fraction, METH_VARARGS, NULL},
	 { (char *)"density_profile_swigregister", density_profile_swigregister, METH_VARARGS, NULL},
	 { (char *)"period", _wrap_period, METH_VARARGS, NULL},
	 { (char *)"new_point_mass_profile", _wrap_new_point_mass_profile, METH_VARARGS, NULL},
	 { (char *)"delete_point_mass_profile", _wrap_delete_point_mass_profile, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_set_mvir", _wrap_point_mass_profile_set_mvir, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_set_parameters", _wrap_point_mass_profile_set_parameters, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_mass", _wrap_point_mass_profile_mass, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_mvir", _wrap_point_mass_profile_mvir, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_mtot", _wrap_point_mass_profile_mtot, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_rvir", _wrap_point_mass_profile_rvir, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_rt", _wrap_point_mass_profile_rt, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_rs", _wrap_point_mass_profile_rs, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_vvir", _wrap_point_mass_profile_vvir, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_dens", _wrap_point_mass_profile_dens, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_enc_dens", _wrap_point_mass_profile_enc_dens, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_enc_mass", _wrap_point_mass_profile_enc_mass, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_num_parameters", _wrap_point_mass_profile_num_parameters, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_get_parameters", _wrap_point_mass_profile_get_parameters, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_get_parameter_names", _wrap_point_mass_profile_get_parameter_names, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_truncate_to_fraction", _wrap_point_mass_profile_truncate_to_fraction, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_redshift_obj_clone", _wrap_point_mass_profile_redshift_obj_clone, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_density_profile_clone", _wrap_point_mass_profile_density_profile_clone, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_point_mass_profile_clone", _wrap_point_mass_profile_point_mass_profile_clone, METH_VARARGS, NULL},
	 { (char *)"point_mass_profile_swigregister", point_mass_profile_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_tNFW_profile", _wrap_new_tNFW_profile, METH_VARARGS, NULL},
	 { (char *)"delete_tNFW_profile", _wrap_delete_tNFW_profile, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_set_mvir", _wrap_tNFW_profile_set_mvir, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_set_parameters", _wrap_tNFW_profile_set_parameters, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_set_z", _wrap_tNFW_profile_set_z, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_set_tau", _wrap_tNFW_profile_set_tau, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_set_c", _wrap_tNFW_profile_set_c, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_mvir", _wrap_tNFW_profile_mvir, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_mvir0", _wrap_tNFW_profile_mvir0, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_mtot", _wrap_tNFW_profile_mtot, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_rvir", _wrap_tNFW_profile_rvir, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_rvir0", _wrap_tNFW_profile_rvir0, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_rt", _wrap_tNFW_profile_rt, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_rs", _wrap_tNFW_profile_rs, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_vvir", _wrap_tNFW_profile_vvir, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_vvir0", _wrap_tNFW_profile_vvir0, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_c", _wrap_tNFW_profile_c, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_tau", _wrap_tNFW_profile_tau, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_dens", _wrap_tNFW_profile_dens, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_enc_mass", _wrap_tNFW_profile_enc_mass, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_num_parameters", _wrap_tNFW_profile_num_parameters, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_get_parameters", _wrap_tNFW_profile_get_parameters, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_get_parameter_names", _wrap_tNFW_profile_get_parameter_names, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_truncate_to_fraction", _wrap_tNFW_profile_truncate_to_fraction, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_redshift_obj_clone", _wrap_tNFW_profile_redshift_obj_clone, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_density_profile_clone", _wrap_tNFW_profile_density_profile_clone, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_tNFW_profile_clone", _wrap_tNFW_profile_tNFW_profile_clone, METH_VARARGS, NULL},
	 { (char *)"tNFW_profile_swigregister", tNFW_profile_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_sky_obj", _wrap_delete_sky_obj, METH_VARARGS, NULL},
	 { (char *)"sky_obj_clear", _wrap_sky_obj_clear, METH_VARARGS, NULL},
	 { (char *)"sky_obj_partial_clear", _wrap_sky_obj_partial_clear, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ra", _wrap_sky_obj_set_ra, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_dec", _wrap_sky_obj_set_dec, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ra_err", _wrap_sky_obj_set_ra_err, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_dec_err", _wrap_sky_obj_set_dec_err, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ra_dec", _wrap_sky_obj_set_ra_dec, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ra_dec_z", _wrap_sky_obj_set_ra_dec_z, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ra_dec_z_err", _wrap_sky_obj_set_ra_dec_z_err, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ra_dec_err", _wrap_sky_obj_set_ra_dec_err, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_weight", _wrap_sky_obj_set_weight, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_index", _wrap_sky_obj_set_index, METH_VARARGS, NULL},
	 { (char *)"sky_obj_set_ID", _wrap_sky_obj_set_ID, METH_VARARGS, NULL},
	 { (char *)"sky_obj_ra", _wrap_sky_obj_ra, METH_VARARGS, NULL},
	 { (char *)"sky_obj_dec", _wrap_sky_obj_dec, METH_VARARGS, NULL},
	 { (char *)"sky_obj_ra_err", _wrap_sky_obj_ra_err, METH_VARARGS, NULL},
	 { (char *)"sky_obj_dec_err", _wrap_sky_obj_dec_err, METH_VARARGS, NULL},
	 { (char *)"sky_obj_weight", _wrap_sky_obj_weight, METH_VARARGS, NULL},
	 { (char *)"sky_obj_index", _wrap_sky_obj_index, METH_VARARGS, NULL},
	 { (char *)"sky_obj_ID", _wrap_sky_obj_ID, METH_VARARGS, NULL},
	 { (char *)"sky_obj_m", _wrap_sky_obj_m, METH_VARARGS, NULL},
	 { (char *)"sky_obj_mag", _wrap_sky_obj_mag, METH_VARARGS, NULL},
	 { (char *)"sky_obj_redshift_obj_clone", _wrap_sky_obj_redshift_obj_clone, METH_VARARGS, NULL},
	 { (char *)"sky_obj_sky_obj_clone", _wrap_sky_obj_sky_obj_clone, METH_VARARGS, NULL},
	 { (char *)"sky_obj_swigregister", sky_obj_swigregister, METH_VARARGS, NULL},
	 { (char *)"dfa", _wrap_dfa, METH_VARARGS, NULL},
	 { (char *)"skydist2d", _wrap_skydist2d, METH_VARARGS, NULL},
	 { (char *)"galaxy_stellar_mass_set", _wrap_galaxy_stellar_mass_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_stellar_mass_get", _wrap_galaxy_stellar_mass_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_umag_set", _wrap_galaxy_umag_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_umag_get", _wrap_galaxy_umag_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_umag_err_set", _wrap_galaxy_umag_err_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_umag_err_get", _wrap_galaxy_umag_err_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_gmag_set", _wrap_galaxy_gmag_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_gmag_get", _wrap_galaxy_gmag_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_gmag_err_set", _wrap_galaxy_gmag_err_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_gmag_err_get", _wrap_galaxy_gmag_err_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_rmag_set", _wrap_galaxy_rmag_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_rmag_get", _wrap_galaxy_rmag_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_rmag_err_set", _wrap_galaxy_rmag_err_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_rmag_err_get", _wrap_galaxy_rmag_err_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_imag_set", _wrap_galaxy_imag_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_imag_get", _wrap_galaxy_imag_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_imag_err_set", _wrap_galaxy_imag_err_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_imag_err_get", _wrap_galaxy_imag_err_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_zmag_set", _wrap_galaxy_zmag_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_zmag_get", _wrap_galaxy_zmag_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_zmag_err_set", _wrap_galaxy_zmag_err_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_zmag_err_get", _wrap_galaxy_zmag_err_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_z_phot_set", _wrap_galaxy_z_phot_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_z_phot_get", _wrap_galaxy_z_phot_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_z_phot_err_set", _wrap_galaxy_z_phot_err_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_z_phot_err_get", _wrap_galaxy_z_phot_err_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_odds_set", _wrap_galaxy_odds_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_odds_get", _wrap_galaxy_odds_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_phot_template_set", _wrap_galaxy_phot_template_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_phot_template_get", _wrap_galaxy_phot_template_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_host_group_set", _wrap_galaxy_host_group_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_host_group_get", _wrap_galaxy_host_group_get, METH_VARARGS, NULL},
	 { (char *)"galaxy_host_group_index_set", _wrap_galaxy_host_group_index_set, METH_VARARGS, NULL},
	 { (char *)"galaxy_host_group_index_get", _wrap_galaxy_host_group_index_get, METH_VARARGS, NULL},
	 { (char *)"new_galaxy", _wrap_new_galaxy, METH_VARARGS, NULL},
	 { (char *)"delete_galaxy", _wrap_delete_galaxy, METH_VARARGS, NULL},
	 { (char *)"galaxy_m", _wrap_galaxy_m, METH_VARARGS, NULL},
	 { (char *)"galaxy_mag", _wrap_galaxy_mag, METH_VARARGS, NULL},
	 { (char *)"galaxy_clear", _wrap_galaxy_clear, METH_VARARGS, NULL},
	 { (char *)"galaxy_redshift_obj_clone", _wrap_galaxy_redshift_obj_clone, METH_VARARGS, NULL},
	 { (char *)"galaxy_sky_obj_clone", _wrap_galaxy_sky_obj_clone, METH_VARARGS, NULL},
	 { (char *)"galaxy_galaxy_clone", _wrap_galaxy_galaxy_clone, METH_VARARGS, NULL},
	 { (char *)"galaxy_swigregister", galaxy_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pair_bin_summary", _wrap_new_pair_bin_summary, METH_VARARGS, NULL},
	 { (char *)"delete_pair_bin_summary", _wrap_delete_pair_bin_summary, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_clear", _wrap_pair_bin_summary_clear, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_fixbad", _wrap_pair_bin_summary_fixbad, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_pair_count", _wrap_pair_bin_summary_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_pair_count", _wrap_pair_bin_summary_shear_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_pair_count", _wrap_pair_bin_summary_magf_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_effective_pair_count", _wrap_pair_bin_summary_effective_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_effective_pair_count", _wrap_pair_bin_summary_shear_effective_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_sum_of_weights", _wrap_pair_bin_summary_sum_of_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_sum_of_weights", _wrap_pair_bin_summary_shear_sum_of_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_sum_of_weights", _wrap_pair_bin_summary_magf_sum_of_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_sum_of_square_weights", _wrap_pair_bin_summary_sum_of_square_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_sum_of_square_weights", _wrap_pair_bin_summary_shear_sum_of_square_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_sum_of_square_weights", _wrap_pair_bin_summary_magf_sum_of_square_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_R_min", _wrap_pair_bin_summary_R_min, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_R_max", _wrap_pair_bin_summary_R_max, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_R_mid", _wrap_pair_bin_summary_R_mid, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_R_amid", _wrap_pair_bin_summary_R_amid, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_R_mean", _wrap_pair_bin_summary_R_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_R_mean", _wrap_pair_bin_summary_shear_R_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_R_mean", _wrap_pair_bin_summary_magf_R_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_m_min", _wrap_pair_bin_summary_m_min, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_m_max", _wrap_pair_bin_summary_m_max, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_m_mid", _wrap_pair_bin_summary_m_mid, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_lens_m_mean", _wrap_pair_bin_summary_lens_m_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_lens_m_mean", _wrap_pair_bin_summary_shear_lens_m_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_lens_m_mean", _wrap_pair_bin_summary_magf_lens_m_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_z_min", _wrap_pair_bin_summary_z_min, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_z_max", _wrap_pair_bin_summary_z_max, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_z_mid", _wrap_pair_bin_summary_z_mid, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_lens_z_mean", _wrap_pair_bin_summary_lens_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_lens_z_mean", _wrap_pair_bin_summary_shear_lens_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_lens_z_mean", _wrap_pair_bin_summary_magf_lens_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_source_z_mean", _wrap_pair_bin_summary_source_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_source_z_mean", _wrap_pair_bin_summary_shear_source_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_source_z_mean", _wrap_pair_bin_summary_magf_source_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mag_min", _wrap_pair_bin_summary_mag_min, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mag_max", _wrap_pair_bin_summary_mag_max, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mag_mid", _wrap_pair_bin_summary_mag_mid, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_lens_mag_mean", _wrap_pair_bin_summary_lens_mag_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_lens_mag_mean", _wrap_pair_bin_summary_shear_lens_mag_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_lens_mag_mean", _wrap_pair_bin_summary_magf_lens_mag_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_shear_sigma_crit", _wrap_pair_bin_summary_shear_sigma_crit, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_sigma_crit", _wrap_pair_bin_summary_magf_sigma_crit, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_t_mean", _wrap_pair_bin_summary_delta_Sigma_t_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_x_mean", _wrap_pair_bin_summary_delta_Sigma_x_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_t_mean_square", _wrap_pair_bin_summary_delta_Sigma_t_mean_square, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_x_mean_square", _wrap_pair_bin_summary_delta_Sigma_x_mean_square, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_t_std", _wrap_pair_bin_summary_delta_Sigma_t_std, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_x_std", _wrap_pair_bin_summary_delta_Sigma_x_std, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_t_stderr", _wrap_pair_bin_summary_delta_Sigma_t_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_delta_Sigma_x_stderr", _wrap_pair_bin_summary_delta_Sigma_x_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_t_mean", _wrap_pair_bin_summary_gamma_t_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_x_mean", _wrap_pair_bin_summary_gamma_x_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_mean", _wrap_pair_bin_summary_gamma_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_mean_square", _wrap_pair_bin_summary_gamma_mean_square, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_t_stderr", _wrap_pair_bin_summary_gamma_t_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_x_stderr", _wrap_pair_bin_summary_gamma_x_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_stderr", _wrap_pair_bin_summary_gamma_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_gamma_square_stderr", _wrap_pair_bin_summary_gamma_square_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_delta_Sigma_t", _wrap_pair_bin_summary_model_delta_Sigma_t, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_gamma_t", _wrap_pair_bin_summary_model_gamma_t, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_1h_delta_Sigma_t", _wrap_pair_bin_summary_model_1h_delta_Sigma_t, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_1h_gamma_t", _wrap_pair_bin_summary_model_1h_gamma_t, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_offset_delta_Sigma_t", _wrap_pair_bin_summary_model_offset_delta_Sigma_t, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_offset_gamma_t", _wrap_pair_bin_summary_model_offset_gamma_t, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_area_per_lens", _wrap_pair_bin_summary_area_per_lens, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_area", _wrap_pair_bin_summary_area, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_num_lenses", _wrap_pair_bin_summary_num_lenses, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_effective_num_lenses", _wrap_pair_bin_summary_magf_effective_num_lenses, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_magf_num_lenses", _wrap_pair_bin_summary_magf_num_lenses, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mu_hat", _wrap_pair_bin_summary_mu_hat, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mu_square_hat", _wrap_pair_bin_summary_mu_square_hat, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mu_W", _wrap_pair_bin_summary_mu_W, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mu_std", _wrap_pair_bin_summary_mu_std, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_mu_stderr", _wrap_pair_bin_summary_mu_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_kappa", _wrap_pair_bin_summary_kappa, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_kappa_stderr", _wrap_pair_bin_summary_kappa_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_Sigma", _wrap_pair_bin_summary_Sigma, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_Sigma_stderr", _wrap_pair_bin_summary_Sigma_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_mu", _wrap_pair_bin_summary_model_mu, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_kappa", _wrap_pair_bin_summary_model_kappa, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_Sigma", _wrap_pair_bin_summary_model_Sigma, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_1h_mu", _wrap_pair_bin_summary_model_1h_mu, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_1h_kappa", _wrap_pair_bin_summary_model_1h_kappa, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_1h_Sigma", _wrap_pair_bin_summary_model_1h_Sigma, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_offset_mu", _wrap_pair_bin_summary_model_offset_mu, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_offset_kappa", _wrap_pair_bin_summary_model_offset_kappa, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_model_offset_Sigma", _wrap_pair_bin_summary_model_offset_Sigma, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary___iadd__", _wrap_pair_bin_summary___iadd__, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary___add__", _wrap_pair_bin_summary___add__, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_save", _wrap_pair_bin_summary_save, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_load", _wrap_pair_bin_summary_load, METH_VARARGS, NULL},
	 { (char *)"pair_bin_summary_swigregister", pair_bin_summary_swigregister, METH_VARARGS, NULL},
	 { (char *)"lens_id_id_set", _wrap_lens_id_id_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_id_get", _wrap_lens_id_id_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_m_set", _wrap_lens_id_m_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_m_get", _wrap_lens_id_m_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_z_set", _wrap_lens_id_z_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_z_get", _wrap_lens_id_z_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_mag_set", _wrap_lens_id_mag_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_mag_get", _wrap_lens_id_mag_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_weight_set", _wrap_lens_id_weight_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_weight_get", _wrap_lens_id_weight_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_unmasked_frac_bin_limits_set", _wrap_lens_id_unmasked_frac_bin_limits_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_unmasked_frac_bin_limits_get", _wrap_lens_id_unmasked_frac_bin_limits_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_unmasked_fracs_set", _wrap_lens_id_unmasked_fracs_set, METH_VARARGS, NULL},
	 { (char *)"lens_id_unmasked_fracs_get", _wrap_lens_id_unmasked_fracs_get, METH_VARARGS, NULL},
	 { (char *)"lens_id_unmasked_frac", _wrap_lens_id_unmasked_frac, METH_VARARGS, NULL},
	 { (char *)"new_lens_id", _wrap_new_lens_id, METH_VARARGS, NULL},
	 { (char *)"delete_lens_id", _wrap_delete_lens_id, METH_VARARGS, NULL},
	 { (char *)"lens_id_swigregister", lens_id_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pair_bin", _wrap_new_pair_bin, METH_VARARGS, NULL},
	 { (char *)"delete_pair_bin", _wrap_delete_pair_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bin_set_z_buffer", _wrap_pair_bin_set_z_buffer, METH_VARARGS, NULL},
	 { (char *)"pair_bin_z_buffer", _wrap_pair_bin_z_buffer, METH_VARARGS, NULL},
	 { (char *)"pair_bin_add_pair", _wrap_pair_bin_add_pair, METH_VARARGS, NULL},
	 { (char *)"pair_bin_add_lens", _wrap_pair_bin_add_lens, METH_VARARGS, NULL},
	 { (char *)"pair_bin_clear", _wrap_pair_bin_clear, METH_VARARGS, NULL},
	 { (char *)"pair_bin_pair_count", _wrap_pair_bin_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_pair_count", _wrap_pair_bin_shear_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_pair_count", _wrap_pair_bin_magf_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_effective_pair_count", _wrap_pair_bin_effective_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_effective_pair_count", _wrap_pair_bin_shear_effective_pair_count, METH_VARARGS, NULL},
	 { (char *)"pair_bin_sum_of_weights", _wrap_pair_bin_sum_of_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_sum_of_weights", _wrap_pair_bin_shear_sum_of_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_sum_of_weights", _wrap_pair_bin_magf_sum_of_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_sum_of_square_weights", _wrap_pair_bin_sum_of_square_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_sum_of_square_weights", _wrap_pair_bin_shear_sum_of_square_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_sum_of_square_weights", _wrap_pair_bin_magf_sum_of_square_weights, METH_VARARGS, NULL},
	 { (char *)"pair_bin_num_lenses", _wrap_pair_bin_num_lenses, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_num_lenses", _wrap_pair_bin_magf_num_lenses, METH_VARARGS, NULL},
	 { (char *)"pair_bin_R_mean", _wrap_pair_bin_R_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_R_mean", _wrap_pair_bin_shear_R_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_R_mean", _wrap_pair_bin_magf_R_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_lens_m_mean", _wrap_pair_bin_lens_m_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_lens_m_mean", _wrap_pair_bin_shear_lens_m_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_lens_m_mean", _wrap_pair_bin_magf_lens_m_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_lens_z_mean", _wrap_pair_bin_lens_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_lens_z_mean", _wrap_pair_bin_shear_lens_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_lens_z_mean", _wrap_pair_bin_magf_lens_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_lens_mag_mean", _wrap_pair_bin_lens_mag_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_lens_mag_mean", _wrap_pair_bin_shear_lens_mag_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_lens_mag_mean", _wrap_pair_bin_magf_lens_mag_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_source_z_mean", _wrap_pair_bin_source_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_shear_source_z_mean", _wrap_pair_bin_shear_source_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_magf_source_z_mean", _wrap_pair_bin_magf_source_z_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_unmasked_frac", _wrap_pair_bin_unmasked_frac, METH_VARARGS, NULL},
	 { (char *)"pair_bin_area", _wrap_pair_bin_area, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_t_mean", _wrap_pair_bin_delta_Sigma_t_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_x_mean", _wrap_pair_bin_delta_Sigma_x_mean, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_t_mean_square", _wrap_pair_bin_delta_Sigma_t_mean_square, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_x_mean_square", _wrap_pair_bin_delta_Sigma_x_mean_square, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_t_std", _wrap_pair_bin_delta_Sigma_t_std, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_x_std", _wrap_pair_bin_delta_Sigma_x_std, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_t_stderr", _wrap_pair_bin_delta_Sigma_t_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_delta_Sigma_x_stderr", _wrap_pair_bin_delta_Sigma_x_stderr, METH_VARARGS, NULL},
	 { (char *)"pair_bin_mu_hat", _wrap_pair_bin_mu_hat, METH_VARARGS, NULL},
	 { (char *)"pair_bin_mu_square_hat", _wrap_pair_bin_mu_square_hat, METH_VARARGS, NULL},
	 { (char *)"pair_bin_mu_W", _wrap_pair_bin_mu_W, METH_VARARGS, NULL},
	 { (char *)"pair_bin_swigregister", pair_bin_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pair_bins_summary", _wrap_new_pair_bins_summary, METH_VARARGS, NULL},
	 { (char *)"delete_pair_bins_summary", _wrap_delete_pair_bins_summary, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_R_limits", _wrap_pair_bins_summary_set_R_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_m_limits", _wrap_pair_bins_summary_set_m_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_z_limits", _wrap_pair_bins_summary_set_z_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_mag_limits", _wrap_pair_bins_summary_set_mag_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_linear_R_limits", _wrap_pair_bins_summary_set_linear_R_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_linear_m_limits", _wrap_pair_bins_summary_set_linear_m_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_linear_z_limits", _wrap_pair_bins_summary_set_linear_z_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_linear_mag_limits", _wrap_pair_bins_summary_set_linear_mag_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_log_R_limits", _wrap_pair_bins_summary_set_log_R_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_log_m_limits", _wrap_pair_bins_summary_set_log_m_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_log_z_limits", _wrap_pair_bins_summary_set_log_z_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_log_mag_limits", _wrap_pair_bins_summary_set_log_mag_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_clear_R_limits", _wrap_pair_bins_summary_clear_R_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_clear_m_limits", _wrap_pair_bins_summary_clear_m_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_clear_z_limits", _wrap_pair_bins_summary_clear_z_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_clear_mag_limits", _wrap_pair_bins_summary_clear_mag_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_limits", _wrap_pair_bins_summary_set_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_linear_limits", _wrap_pair_bins_summary_set_linear_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_set_log_limits", _wrap_pair_bins_summary_set_log_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_fixbad", _wrap_pair_bins_summary_fixbad, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_R_limits", _wrap_pair_bins_summary_R_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_m_limits", _wrap_pair_bins_summary_m_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_z_limits", _wrap_pair_bins_summary_z_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_mag_limits", _wrap_pair_bins_summary_mag_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_valid_limits", _wrap_pair_bins_summary_valid_limits, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_sort", _wrap_pair_bins_summary_sort, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_clear", _wrap_pair_bins_summary_clear, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_pair_bin_summaries", _wrap_pair_bins_summary_pair_bin_summaries, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_delta_Sigma_t_mean_for_bin", _wrap_pair_bins_summary_delta_Sigma_t_mean_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_delta_Sigma_x_mean_for_bin", _wrap_pair_bins_summary_delta_Sigma_x_mean_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_delta_Sigma_t_std_for_bin", _wrap_pair_bins_summary_delta_Sigma_t_std_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_delta_Sigma_x_std_for_bin", _wrap_pair_bins_summary_delta_Sigma_x_std_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_delta_Sigma_t_stderr_for_bin", _wrap_pair_bins_summary_delta_Sigma_t_stderr_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_delta_Sigma_x_stderr_for_bin", _wrap_pair_bins_summary_delta_Sigma_x_stderr_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_print_bin_data", _wrap_pair_bins_summary_print_bin_data, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary___iadd__", _wrap_pair_bins_summary___iadd__, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary___add__", _wrap_pair_bins_summary___add__, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_save", _wrap_pair_bins_summary_save, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_load", _wrap_pair_bins_summary_load, METH_VARARGS, NULL},
	 { (char *)"pair_bins_summary_swigregister", pair_bins_summary_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_source_obj", _wrap_delete_source_obj, METH_VARARGS, NULL},
	 { (char *)"source_obj_source_obj_clone", _wrap_source_obj_source_obj_clone, METH_VARARGS, NULL},
	 { (char *)"source_obj_gamma_1", _wrap_source_obj_gamma_1, METH_VARARGS, NULL},
	 { (char *)"source_obj_gamma_2", _wrap_source_obj_gamma_2, METH_VARARGS, NULL},
	 { (char *)"source_obj_kappa", _wrap_source_obj_kappa, METH_VARARGS, NULL},
	 { (char *)"source_obj_set_gamma_1", _wrap_source_obj_set_gamma_1, METH_VARARGS, NULL},
	 { (char *)"source_obj_set_gamma_2", _wrap_source_obj_set_gamma_2, METH_VARARGS, NULL},
	 { (char *)"source_obj_set_kappa", _wrap_source_obj_set_kappa, METH_VARARGS, NULL},
	 { (char *)"source_obj_swigregister", source_obj_swigregister, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_store_data", _wrap_lens_source_pair_store_data, METH_VARARGS, NULL},
	 { (char *)"new_lens_source_pair", _wrap_new_lens_source_pair, METH_VARARGS, NULL},
	 { (char *)"delete_lens_source_pair", _wrap_delete_lens_source_pair, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_set_lens", _wrap_lens_source_pair_set_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_set_source", _wrap_lens_source_pair_set_source, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_set_weight_pair", _wrap_lens_source_pair_set_weight_pair, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_lens", _wrap_lens_source_pair_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_source", _wrap_lens_source_pair_source, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_z_lens", _wrap_lens_source_pair_z_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_z_source", _wrap_lens_source_pair_z_source, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_z_diff", _wrap_lens_source_pair_z_diff, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_m_lens", _wrap_lens_source_pair_m_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_id_lens", _wrap_lens_source_pair_id_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_mag_lens", _wrap_lens_source_pair_mag_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_mag_source", _wrap_lens_source_pair_mag_source, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_R_proj", _wrap_lens_source_pair_R_proj, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_theta", _wrap_lens_source_pair_theta, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_gamma_t", _wrap_lens_source_pair_gamma_t, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_gamma_x", _wrap_lens_source_pair_gamma_x, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_weight_lens", _wrap_lens_source_pair_weight_lens, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_weight_source", _wrap_lens_source_pair_weight_source, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_weight_pair", _wrap_lens_source_pair_weight_pair, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_shear_weight", _wrap_lens_source_pair_shear_weight, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_mag_weight", _wrap_lens_source_pair_mag_weight, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_sigma_crit", _wrap_lens_source_pair_sigma_crit, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_delta_Sigma_t", _wrap_lens_source_pair_delta_Sigma_t, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_delta_Sigma_x", _wrap_lens_source_pair_delta_Sigma_x, METH_VARARGS, NULL},
	 { (char *)"lens_source_pair_swigregister", lens_source_pair_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_lensing_tNFW_profile_extension", _wrap_new_lensing_tNFW_profile_extension, METH_VARARGS, NULL},
	 { (char *)"delete_lensing_tNFW_profile_extension", _wrap_delete_lensing_tNFW_profile_extension, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_lensing_profile_extension_clone", _wrap_lensing_tNFW_profile_extension_lensing_profile_extension_clone, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_proj_dens", _wrap_lensing_tNFW_profile_extension_proj_dens, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_proj_enc_mass", _wrap_lensing_tNFW_profile_extension_proj_enc_mass, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_proj_enc_dens", _wrap_lensing_tNFW_profile_extension_proj_enc_dens, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_quick_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_offset_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_offset_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_offset_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_quick_offset_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_group_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_group_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_semiquick_group_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_group_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_quick_group_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_two_halo_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_two_halo_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_two_halo_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_quick_two_halo_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_shift_factor", _wrap_lensing_tNFW_profile_extension_shift_factor, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_shifted_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_shifted_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_semiquick_shifted_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_semiquick_shifted_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_shifted_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_quick_shifted_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_shifted_no_enh_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_shifted_no_enh_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_semiquick_shifted_no_enh_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_semiquick_shifted_no_enh_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_shifted_no_enh_Delta_Sigma", _wrap_lensing_tNFW_profile_extension_quick_shifted_no_enh_Delta_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_Sigma", _wrap_lensing_tNFW_profile_extension_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_Sigma", _wrap_lensing_tNFW_profile_extension_quick_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_offset_Sigma", _wrap_lensing_tNFW_profile_extension_offset_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_offset_Sigma", _wrap_lensing_tNFW_profile_extension_quick_offset_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_group_Sigma", _wrap_lensing_tNFW_profile_extension_group_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_semiquick_group_Sigma", _wrap_lensing_tNFW_profile_extension_semiquick_group_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_group_Sigma", _wrap_lensing_tNFW_profile_extension_quick_group_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_two_halo_Sigma", _wrap_lensing_tNFW_profile_extension_two_halo_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_quick_two_halo_Sigma", _wrap_lensing_tNFW_profile_extension_quick_two_halo_Sigma, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_extension_swigregister", lensing_tNFW_profile_extension_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_lensing_tNFW_profile", _wrap_new_lensing_tNFW_profile, METH_VARARGS, NULL},
	 { (char *)"delete_lensing_tNFW_profile", _wrap_delete_lensing_tNFW_profile, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_density_profile_clone", _wrap_lensing_tNFW_profile_density_profile_clone, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_tNFW_profile_clone", _wrap_lensing_tNFW_profile_tNFW_profile_clone, METH_VARARGS, NULL},
	 { (char *)"lensing_tNFW_profile_swigregister", lensing_tNFW_profile_swigregister, METH_VARARGS, NULL},
	 { (char *)"lens_id_lt___call__", _wrap_lens_id_lt___call__, METH_VARARGS, NULL},
	 { (char *)"new_lens_id_lt", _wrap_new_lens_id_lt, METH_VARARGS, NULL},
	 { (char *)"delete_lens_id_lt", _wrap_delete_lens_id_lt, METH_VARARGS, NULL},
	 { (char *)"lens_id_lt_swigregister", lens_id_lt_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pair_binner", _wrap_new_pair_binner, METH_VARARGS, NULL},
	 { (char *)"delete_pair_binner", _wrap_delete_pair_binner, METH_VARARGS, NULL},
	 { (char *)"pair_binner_set_z_buffer", _wrap_pair_binner_set_z_buffer, METH_VARARGS, NULL},
	 { (char *)"pair_binner_z_buffer", _wrap_pair_binner_z_buffer, METH_VARARGS, NULL},
	 { (char *)"pair_binner_binnable", _wrap_pair_binner_binnable, METH_VARARGS, NULL},
	 { (char *)"pair_binner_add_pair", _wrap_pair_binner_add_pair, METH_VARARGS, NULL},
	 { (char *)"pair_binner_add_lens_id", _wrap_pair_binner_add_lens_id, METH_VARARGS, NULL},
	 { (char *)"pair_binner_clear", _wrap_pair_binner_clear, METH_VARARGS, NULL},
	 { (char *)"pair_binner_empty", _wrap_pair_binner_empty, METH_VARARGS, NULL},
	 { (char *)"pair_binner_sort", _wrap_pair_binner_sort, METH_VARARGS, NULL},
	 { (char *)"pair_binner_delta_Sigma_t_mean_for_bin", _wrap_pair_binner_delta_Sigma_t_mean_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_binner_delta_Sigma_x_mean_for_bin", _wrap_pair_binner_delta_Sigma_x_mean_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_binner_delta_Sigma_t_std_for_bin", _wrap_pair_binner_delta_Sigma_t_std_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_binner_delta_Sigma_x_std_for_bin", _wrap_pair_binner_delta_Sigma_x_std_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_binner_delta_Sigma_t_stderr_for_bin", _wrap_pair_binner_delta_Sigma_t_stderr_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_binner_delta_Sigma_x_stderr_for_bin", _wrap_pair_binner_delta_Sigma_x_stderr_for_bin, METH_VARARGS, NULL},
	 { (char *)"pair_binner_swigregister", pair_binner_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_source_galaxy", _wrap_new_source_galaxy, METH_VARARGS, NULL},
	 { (char *)"delete_source_galaxy", _wrap_delete_source_galaxy, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_m", _wrap_source_galaxy_m, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_mag", _wrap_source_galaxy_mag, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_redshift_obj_clone", _wrap_source_galaxy_redshift_obj_clone, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_sky_obj_clone", _wrap_source_galaxy_sky_obj_clone, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_galaxy_clone", _wrap_source_galaxy_galaxy_clone, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_source_obj_clone", _wrap_source_galaxy_source_obj_clone, METH_VARARGS, NULL},
	 { (char *)"source_galaxy_swigregister", source_galaxy_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *)  ((IceBRG::lensing_tNFW_profile *) x));
}
static void *_p_IceBRG__source_galaxyTo_p_IceBRG__galaxy(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::galaxy *)  ((IceBRG::source_galaxy *) x));
}
static void *_p_IceBRG__source_objTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *) (IceBRG::sky_obj *) ((IceBRG::source_obj *) x));
}
static void *_p_IceBRG__density_profileTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *)  ((IceBRG::density_profile *) x));
}
static void *_p_IceBRG__point_mass_profileTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *) (IceBRG::density_profile *) ((IceBRG::point_mass_profile *) x));
}
static void *_p_IceBRG__tNFW_profileTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *) (IceBRG::density_profile *) ((IceBRG::tNFW_profile *) x));
}
static void *_p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *) (IceBRG::density_profile *)(IceBRG::tNFW_profile *) ((IceBRG::lensing_tNFW_profile *) x));
}
static void *_p_IceBRG__source_galaxyTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *) (IceBRG::sky_obj *)(IceBRG::source_obj *) ((IceBRG::source_galaxy *) x));
}
static void *_p_IceBRG__galaxyTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *) (IceBRG::sky_obj *) ((IceBRG::galaxy *) x));
}
static void *_p_IceBRG__sky_objTo_p_IceBRG__redshift_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::redshift_obj *)  ((IceBRG::sky_obj *) x));
}
static void *_p_IceBRG__point_mass_profileTo_p_IceBRG__density_profile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::density_profile *)  ((IceBRG::point_mass_profile *) x));
}
static void *_p_IceBRG__tNFW_profileTo_p_IceBRG__density_profile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::density_profile *)  ((IceBRG::tNFW_profile *) x));
}
static void *_p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__density_profile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::density_profile *) (IceBRG::tNFW_profile *) ((IceBRG::lensing_tNFW_profile *) x));
}
static void *_p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__tNFW_profile(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::tNFW_profile *)  ((IceBRG::lensing_tNFW_profile *) x));
}
static void *_p_IceBRG__source_objTo_p_IceBRG__sky_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::sky_obj *)  ((IceBRG::source_obj *) x));
}
static void *_p_IceBRG__source_galaxyTo_p_IceBRG__sky_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::sky_obj *) (IceBRG::source_obj *) ((IceBRG::source_galaxy *) x));
}
static void *_p_IceBRG__galaxyTo_p_IceBRG__sky_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::sky_obj *)  ((IceBRG::galaxy *) x));
}
static void *_p_IceBRG__source_galaxyTo_p_IceBRG__source_obj(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::source_obj *)  ((IceBRG::source_galaxy *) x));
}
static void *_p_IceBRG__pair_binTo_p_IceBRG__pair_bin_summary(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::pair_bin_summary *)  ((IceBRG::pair_bin *) x));
}
static void *_p_IceBRG__pair_binnerTo_p_IceBRG__pair_bins_summary(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((IceBRG::pair_bins_summary *)  ((IceBRG::pair_binner *) x));
}
static swig_type_info _swigt__p_IceBRG__density_profile = {"_p_IceBRG__density_profile", "IceBRG::density_profile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__galaxy = {"_p_IceBRG__galaxy", "IceBRG::galaxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__galaxy_group = {"_p_IceBRG__galaxy_group", "IceBRG::galaxy_group *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__lens_id = {"_p_IceBRG__lens_id", "IceBRG::lens_id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__lens_id_lt = {"_p_IceBRG__lens_id_lt", "IceBRG::lens_id_lt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__lens_source_pair = {"_p_IceBRG__lens_source_pair", "IceBRG::lens_source_pair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t = {"_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t", "IceBRG::lensing_profile_extension< IceBRG::lensing_tNFW_profile > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__lensing_tNFW_profile = {"_p_IceBRG__lensing_tNFW_profile", "IceBRG::lensing_tNFW_profile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__limit_vectorT_double_t = {"_p_IceBRG__limit_vectorT_double_t", "IceBRG::limit_vector< flt_t > *|IceBRG::limit_vector< double > *|IceBRG::limit_vector< distance_type > *|IceBRG::limit_vector< mass_type > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__pair_bin = {"_p_IceBRG__pair_bin", "IceBRG::pair_bin *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__pair_bin_summary = {"_p_IceBRG__pair_bin_summary", "IceBRG::pair_bin_summary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__pair_binner = {"_p_IceBRG__pair_binner", "IceBRG::pair_binner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__pair_bins_summary = {"_p_IceBRG__pair_bins_summary", "IceBRG::pair_bins_summary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__point_mass_profile = {"_p_IceBRG__point_mass_profile", "IceBRG::point_mass_profile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__redshift_obj = {"_p_IceBRG__redshift_obj", "IceBRG::redshift_obj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__sky_obj = {"_p_IceBRG__sky_obj", "IceBRG::sky_obj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__source_galaxy = {"_p_IceBRG__source_galaxy", "IceBRG::source_galaxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__source_obj = {"_p_IceBRG__source_obj", "IceBRG::source_obj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IceBRG__tNFW_profile = {"_p_IceBRG__tNFW_profile", "IceBRG::tNFW_profile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_T = {"_p_T", "T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_custom_unit_typeT_0_0_0_2_0_t = {"_p_custom_unit_typeT_0_0_0_2_0_t", "custom_unit_type< 0,0,0,2,0 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_custom_unit_typeT_0__2_0_0_0_t = {"_p_custom_unit_typeT_0__2_0_0_0_t", "custom_unit_type< 0,-2,0,0,0 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_custom_unit_typeT_1_0_0__1_0_t = {"_p_custom_unit_typeT_1_0_0__1_0_t", "custom_unit_type< 1,0,0,-1,0 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_custom_unit_typeT__1_0_0_1_0_t = {"_p_custom_unit_typeT__1_0_0_1_0_t", "custom_unit_type< -1,0,0,1,0 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_custom_unit_typeT__4_0_2_0_0_t = {"_p_custom_unit_typeT__4_0_2_0_0_t", "custom_unit_type< -4,0,2,0,0 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "inverse_time_type *|temperature_type *|inverse_square_angle_type *|angle_type *|square_angle_type *|inverse_angle_type *|inverse_volume_inverse_mass_type *|dimensionless_type *|mass_type *|area_type *|inverse_area_type *|any_units_type *|time_type *|inverse_volume_type *|inverse_distance_type *|volume_type *|distance_type *|acceleration_type *|velocity_type *|density_type *|inverse_density_type *|surface_density_type *|inverse_surface_density_type *|double *|flt_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_first_type = {"_p_first_type", "first_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int_t = {"_p_int_t", "int_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_lens_source_pair = {"_p_lens_source_pair", "lens_source_pair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_second_type = {"_p_second_type", "second_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ssize_t = {"_p_ssize_t", "ssize_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__istream = {"_p_std__istream", "std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostream = {"_p_std__ostream", "std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_double_std__allocatorT_double_t_t = {"_p_std__vectorT_double_std__allocatorT_double_t_t", "std::vector< double,std::allocator< double > > *|std::vector< flt_t,std::allocator< flt_t > > *|std::vector< any_units_type,std::allocator< any_units_type > > *|std::vector< distance_type,std::allocator< distance_type > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t", "std::vector< std::string,std::allocator< std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t = {"_p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t", "std::vector< std::vector< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > >,std::allocator< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > > > >,std::allocator< std::vector< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > >,std::allocator< std::vector< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > >,std::allocator< std::vector< IceBRG::pair_bin_summary,std::allocator< IceBRG::pair_bin_summary > > > > > > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unitconv_map = {"_p_unitconv_map", "unitconv_map *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_IceBRG__density_profile,
  &_swigt__p_IceBRG__galaxy,
  &_swigt__p_IceBRG__galaxy_group,
  &_swigt__p_IceBRG__lens_id,
  &_swigt__p_IceBRG__lens_id_lt,
  &_swigt__p_IceBRG__lens_source_pair,
  &_swigt__p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t,
  &_swigt__p_IceBRG__lensing_tNFW_profile,
  &_swigt__p_IceBRG__limit_vectorT_double_t,
  &_swigt__p_IceBRG__pair_bin,
  &_swigt__p_IceBRG__pair_bin_summary,
  &_swigt__p_IceBRG__pair_binner,
  &_swigt__p_IceBRG__pair_bins_summary,
  &_swigt__p_IceBRG__point_mass_profile,
  &_swigt__p_IceBRG__redshift_obj,
  &_swigt__p_IceBRG__sky_obj,
  &_swigt__p_IceBRG__source_galaxy,
  &_swigt__p_IceBRG__source_obj,
  &_swigt__p_IceBRG__tNFW_profile,
  &_swigt__p_T,
  &_swigt__p_char,
  &_swigt__p_custom_unit_typeT_0_0_0_2_0_t,
  &_swigt__p_custom_unit_typeT_0__2_0_0_0_t,
  &_swigt__p_custom_unit_typeT_1_0_0__1_0_t,
  &_swigt__p_custom_unit_typeT__1_0_0_1_0_t,
  &_swigt__p_custom_unit_typeT__4_0_2_0_0_t,
  &_swigt__p_double,
  &_swigt__p_first_type,
  &_swigt__p_int_t,
  &_swigt__p_lens_source_pair,
  &_swigt__p_second_type,
  &_swigt__p_ssize_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__istream,
  &_swigt__p_std__ostream,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_double_std__allocatorT_double_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  &_swigt__p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unitconv_map,
};

static swig_cast_info _swigc__p_IceBRG__density_profile[] = {  {&_swigt__p_IceBRG__density_profile, 0, 0, 0},  {&_swigt__p_IceBRG__point_mass_profile, _p_IceBRG__point_mass_profileTo_p_IceBRG__density_profile, 0, 0},  {&_swigt__p_IceBRG__tNFW_profile, _p_IceBRG__tNFW_profileTo_p_IceBRG__density_profile, 0, 0},  {&_swigt__p_IceBRG__lensing_tNFW_profile, _p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__density_profile, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__galaxy[] = {  {&_swigt__p_IceBRG__galaxy, 0, 0, 0},  {&_swigt__p_IceBRG__source_galaxy, _p_IceBRG__source_galaxyTo_p_IceBRG__galaxy, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__galaxy_group[] = {  {&_swigt__p_IceBRG__galaxy_group, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__lens_id[] = {  {&_swigt__p_IceBRG__lens_id, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__lens_id_lt[] = {  {&_swigt__p_IceBRG__lens_id_lt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__lens_source_pair[] = {  {&_swigt__p_IceBRG__lens_source_pair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t[] = {  {&_swigt__p_IceBRG__lensing_tNFW_profile, _p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0, 0},  {&_swigt__p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__lensing_tNFW_profile[] = {  {&_swigt__p_IceBRG__lensing_tNFW_profile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__limit_vectorT_double_t[] = {  {&_swigt__p_IceBRG__limit_vectorT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__pair_bin[] = {  {&_swigt__p_IceBRG__pair_bin, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__pair_bin_summary[] = {  {&_swigt__p_IceBRG__pair_bin_summary, 0, 0, 0},  {&_swigt__p_IceBRG__pair_bin, _p_IceBRG__pair_binTo_p_IceBRG__pair_bin_summary, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__pair_binner[] = {  {&_swigt__p_IceBRG__pair_binner, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__pair_bins_summary[] = {  {&_swigt__p_IceBRG__pair_bins_summary, 0, 0, 0},  {&_swigt__p_IceBRG__pair_binner, _p_IceBRG__pair_binnerTo_p_IceBRG__pair_bins_summary, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__point_mass_profile[] = {  {&_swigt__p_IceBRG__point_mass_profile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__redshift_obj[] = {  {&_swigt__p_IceBRG__source_obj, _p_IceBRG__source_objTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__redshift_obj, 0, 0, 0},  {&_swigt__p_IceBRG__source_galaxy, _p_IceBRG__source_galaxyTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__density_profile, _p_IceBRG__density_profileTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__point_mass_profile, _p_IceBRG__point_mass_profileTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__tNFW_profile, _p_IceBRG__tNFW_profileTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__lensing_tNFW_profile, _p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__galaxy, _p_IceBRG__galaxyTo_p_IceBRG__redshift_obj, 0, 0},  {&_swigt__p_IceBRG__sky_obj, _p_IceBRG__sky_objTo_p_IceBRG__redshift_obj, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__sky_obj[] = {  {&_swigt__p_IceBRG__source_obj, _p_IceBRG__source_objTo_p_IceBRG__sky_obj, 0, 0},  {&_swigt__p_IceBRG__source_galaxy, _p_IceBRG__source_galaxyTo_p_IceBRG__sky_obj, 0, 0},  {&_swigt__p_IceBRG__galaxy, _p_IceBRG__galaxyTo_p_IceBRG__sky_obj, 0, 0},  {&_swigt__p_IceBRG__sky_obj, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__source_galaxy[] = {  {&_swigt__p_IceBRG__source_galaxy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__source_obj[] = {  {&_swigt__p_IceBRG__source_obj, 0, 0, 0},  {&_swigt__p_IceBRG__source_galaxy, _p_IceBRG__source_galaxyTo_p_IceBRG__source_obj, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IceBRG__tNFW_profile[] = {  {&_swigt__p_IceBRG__tNFW_profile, 0, 0, 0},  {&_swigt__p_IceBRG__lensing_tNFW_profile, _p_IceBRG__lensing_tNFW_profileTo_p_IceBRG__tNFW_profile, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_T[] = {  {&_swigt__p_T, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_custom_unit_typeT_0_0_0_2_0_t[] = {  {&_swigt__p_custom_unit_typeT_0_0_0_2_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_custom_unit_typeT_0__2_0_0_0_t[] = {  {&_swigt__p_custom_unit_typeT_0__2_0_0_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_custom_unit_typeT_1_0_0__1_0_t[] = {  {&_swigt__p_custom_unit_typeT_1_0_0__1_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_custom_unit_typeT__1_0_0_1_0_t[] = {  {&_swigt__p_custom_unit_typeT__1_0_0_1_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_custom_unit_typeT__4_0_2_0_0_t[] = {  {&_swigt__p_custom_unit_typeT__4_0_2_0_0_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_first_type[] = {  {&_swigt__p_first_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int_t[] = {  {&_swigt__p_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_lens_source_pair[] = {  {&_swigt__p_lens_source_pair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_second_type[] = {  {&_swigt__p_second_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ssize_t[] = {  {&_swigt__p_ssize_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__istream[] = {  {&_swigt__p_std__istream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostream[] = {  {&_swigt__p_std__ostream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_double_std__allocatorT_double_t_t[] = {  {&_swigt__p_std__vectorT_double_std__allocatorT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t[] = {  {&_swigt__p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unitconv_map[] = {  {&_swigt__p_unitconv_map, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_IceBRG__density_profile,
  _swigc__p_IceBRG__galaxy,
  _swigc__p_IceBRG__galaxy_group,
  _swigc__p_IceBRG__lens_id,
  _swigc__p_IceBRG__lens_id_lt,
  _swigc__p_IceBRG__lens_source_pair,
  _swigc__p_IceBRG__lensing_profile_extensionT_IceBRG__lensing_tNFW_profile_t,
  _swigc__p_IceBRG__lensing_tNFW_profile,
  _swigc__p_IceBRG__limit_vectorT_double_t,
  _swigc__p_IceBRG__pair_bin,
  _swigc__p_IceBRG__pair_bin_summary,
  _swigc__p_IceBRG__pair_binner,
  _swigc__p_IceBRG__pair_bins_summary,
  _swigc__p_IceBRG__point_mass_profile,
  _swigc__p_IceBRG__redshift_obj,
  _swigc__p_IceBRG__sky_obj,
  _swigc__p_IceBRG__source_galaxy,
  _swigc__p_IceBRG__source_obj,
  _swigc__p_IceBRG__tNFW_profile,
  _swigc__p_T,
  _swigc__p_char,
  _swigc__p_custom_unit_typeT_0_0_0_2_0_t,
  _swigc__p_custom_unit_typeT_0__2_0_0_0_t,
  _swigc__p_custom_unit_typeT_1_0_0__1_0_t,
  _swigc__p_custom_unit_typeT__1_0_0_1_0_t,
  _swigc__p_custom_unit_typeT__4_0_2_0_0_t,
  _swigc__p_double,
  _swigc__p_first_type,
  _swigc__p_int_t,
  _swigc__p_lens_source_pair,
  _swigc__p_second_type,
  _swigc__p_ssize_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__istream,
  _swigc__p_std__ostream,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_double_std__allocatorT_double_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  _swigc__p_std__vectorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_std__allocatorT_std__vectorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_std__allocatorT_std__vectorT_IceBRG__pair_bin_summary_std__allocatorT_IceBRG__pair_bin_summary_t_t_t_t_t_t_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unitconv_map,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  
  import_array();
  
  PyDict_SetItemString(md,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"mtom",Swig_var_mtom_get, Swig_var_mtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtomm",Swig_var_mtomm_get, Swig_var_mtomm_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mmtom",Swig_var_mmtom_get, Swig_var_mmtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtocm",Swig_var_mtocm_get, Swig_var_mtocm_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"cmtom",Swig_var_cmtom_get, Swig_var_cmtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoum",Swig_var_mtoum_get, Swig_var_mtoum_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"umtom",Swig_var_umtom_get, Swig_var_umtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtonm",Swig_var_mtonm_get, Swig_var_mtonm_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"nmtom",Swig_var_nmtom_get, Swig_var_nmtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoangstrom",Swig_var_mtoangstrom_get, Swig_var_mtoangstrom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"angstromtom",Swig_var_angstromtom_get, Swig_var_angstromtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtokm",Swig_var_mtokm_get, Swig_var_mtokm_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kmtom",Swig_var_kmtom_get, Swig_var_kmtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ltyrtom",Swig_var_ltyrtom_get, Swig_var_ltyrtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoltyr",Swig_var_mtoltyr_get, Swig_var_mtoltyr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"AUtom",Swig_var_AUtom_get, Swig_var_AUtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoAU",Swig_var_mtoAU_get, Swig_var_mtoAU_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"pctom",Swig_var_pctom_get, Swig_var_pctom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtopc",Swig_var_mtopc_get, Swig_var_mtopc_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kpctom",Swig_var_kpctom_get, Swig_var_kpctom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtokpc",Swig_var_mtokpc_get, Swig_var_mtokpc_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Mpctom",Swig_var_Mpctom_get, Swig_var_Mpctom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoMpc",Swig_var_mtoMpc_get, Swig_var_mtoMpc_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mitom",Swig_var_mitom_get, Swig_var_mitom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtomi",Swig_var_mtomi_get, Swig_var_mtomi_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Mmitom",Swig_var_Mmitom_get, Swig_var_Mmitom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoMmi",Swig_var_mtoMmi_get, Swig_var_mtoMmi_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"fttom",Swig_var_fttom_get, Swig_var_fttom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoft",Swig_var_mtoft_get, Swig_var_mtoft_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"intom",Swig_var_intom_get, Swig_var_intom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoin",Swig_var_mtoin_get, Swig_var_mtoin_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ydtom",Swig_var_ydtom_get, Swig_var_ydtom_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mtoyd",Swig_var_mtoyd_get, Swig_var_mtoyd_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stos",Swig_var_stos_get, Swig_var_stos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stocs",Swig_var_stocs_get, Swig_var_stocs_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"cstos",Swig_var_cstos_get, Swig_var_cstos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stoms",Swig_var_stoms_get, Swig_var_stoms_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mstos",Swig_var_mstos_get, Swig_var_mstos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stous",Swig_var_stous_get, Swig_var_stous_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ustos",Swig_var_ustos_get, Swig_var_ustos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stons",Swig_var_stons_get, Swig_var_stons_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"nstos",Swig_var_nstos_get, Swig_var_nstos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mintos",Swig_var_mintos_get, Swig_var_mintos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stomin",Swig_var_stomin_get, Swig_var_stomin_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"hrtos",Swig_var_hrtos_get, Swig_var_hrtos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stohr",Swig_var_stohr_get, Swig_var_stohr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"daytos",Swig_var_daytos_get, Swig_var_daytos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stoday",Swig_var_stoday_get, Swig_var_stoday_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"weektos",Swig_var_weektos_get, Swig_var_weektos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stoweek",Swig_var_stoweek_get, Swig_var_stoweek_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"yrtos",Swig_var_yrtos_get, Swig_var_yrtos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stoyr",Swig_var_stoyr_get, Swig_var_stoyr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"monthtos",Swig_var_monthtos_get, Swig_var_monthtos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stomonth",Swig_var_stomonth_get, Swig_var_stomonth_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kyrtos",Swig_var_kyrtos_get, Swig_var_kyrtos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stokyr",Swig_var_stokyr_get, Swig_var_stokyr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Myrtos",Swig_var_Myrtos_get, Swig_var_Myrtos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stoMyr",Swig_var_stoMyr_get, Swig_var_stoMyr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Gyrtos",Swig_var_Gyrtos_get, Swig_var_Gyrtos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"stoGyr",Swig_var_stoGyr_get, Swig_var_stoGyr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mpstomps",Swig_var_mpstomps_get, Swig_var_mpstomps_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mpstokmps",Swig_var_mpstokmps_get, Swig_var_mpstokmps_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kmpstomps",Swig_var_kmpstomps_get, Swig_var_kmpstomps_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ctomps",Swig_var_ctomps_get, Swig_var_ctomps_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mpstoc",Swig_var_mpstoc_get, Swig_var_mpstoc_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mpstomiphr",Swig_var_mpstomiphr_get, Swig_var_mpstomiphr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"miphr",Swig_var_miphr_get, Swig_var_miphr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kgtokg",Swig_var_kgtokg_get, Swig_var_kgtokg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kgtogm",Swig_var_kgtogm_get, Swig_var_kgtogm_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"gmtokg",Swig_var_gmtokg_get, Swig_var_gmtokg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Mearthtokg",Swig_var_Mearthtokg_get, Swig_var_Mearthtokg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kgtoMearth",Swig_var_kgtoMearth_get, Swig_var_kgtoMearth_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Msuntokg",Swig_var_Msuntokg_get, Swig_var_Msuntokg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kgtoMsun",Swig_var_kgtoMsun_get, Swig_var_kgtoMsun_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"kgtottMsun",Swig_var_kgtottMsun_get, Swig_var_kgtottMsun_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ttMsuntokg",Swig_var_ttMsuntokg_get, Swig_var_ttMsuntokg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"KtoK",Swig_var_KtoK_get, Swig_var_KtoK_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"KtodegF",Swig_var_KtodegF_get, Swig_var_KtodegF_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degCtoK",Swig_var_degCtoK_get, Swig_var_degCtoK_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"KtodegC",Swig_var_KtodegC_get, Swig_var_KtodegC_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degFtoK",Swig_var_degFtoK_get, Swig_var_degFtoK_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degCtodegF",Swig_var_degCtodegF_get, Swig_var_degCtodegF_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degFtodegC",Swig_var_degFtodegC_get, Swig_var_degFtodegC_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"KtodegR",Swig_var_KtodegR_get, Swig_var_KtodegR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degRtoK",Swig_var_degRtoK_get, Swig_var_degRtoK_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degCtodegR",Swig_var_degCtodegR_get, Swig_var_degCtodegR_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degRtodegC",Swig_var_degRtodegC_get, Swig_var_degRtodegC_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"radtorad",Swig_var_radtorad_get, Swig_var_radtorad_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degtorad",Swig_var_degtorad_get, Swig_var_degtorad_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"radtodeg",Swig_var_radtodeg_get, Swig_var_radtodeg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degtoamin",Swig_var_degtoamin_get, Swig_var_degtoamin_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"amintodeg",Swig_var_amintodeg_get, Swig_var_amintodeg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"amintoasec",Swig_var_amintoasec_get, Swig_var_amintoasec_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"asectoamin",Swig_var_asectoamin_get, Swig_var_asectoamin_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"asectodeg",Swig_var_asectodeg_get, Swig_var_asectodeg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"degtoasec",Swig_var_degtoasec_get, Swig_var_degtoasec_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"amintorad",Swig_var_amintorad_get, Swig_var_amintorad_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"radtoamin",Swig_var_radtoamin_get, Swig_var_radtoamin_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"asectorad",Swig_var_asectorad_get, Swig_var_asectorad_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"radtoasec",Swig_var_radtoasec_get, Swig_var_radtoasec_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"CtoC",Swig_var_CtoC_get, Swig_var_CtoC_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Ctoesu",Swig_var_Ctoesu_get, Swig_var_Ctoesu_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"esutoC",Swig_var_esutoC_get, Swig_var_esutoC_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Gc",Swig_var_Gc_get, Swig_var_Gc_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"c",Swig_var_c_get, Swig_var_c_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"t_present_day",Swig_var_t_present_day_get, Swig_var_t_present_day_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"H_0",Swig_var_H_0_get, Swig_var_H_0_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"h_0",Swig_var_h_0_get, Swig_var_h_0_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Omega_m",Swig_var_Omega_m_get, Swig_var_Omega_m_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Omega_r",Swig_var_Omega_r_get, Swig_var_Omega_r_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Omega_k",Swig_var_Omega_k_get, Swig_var_Omega_k_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Omega_l",Swig_var_Omega_l_get, Swig_var_Omega_l_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"Omega_b",Swig_var_Omega_b_get, Swig_var_Omega_b_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"sigma_8",Swig_var_sigma_8_get, Swig_var_sigma_8_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"n_s",Swig_var_n_s_get, Swig_var_n_s_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"default_c",Swig_var_default_c_get, Swig_var_default_c_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"default_tau_factor",Swig_var_default_tau_factor_get, Swig_var_default_tau_factor_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"bright_abs_mag_i_max",Swig_var_bright_abs_mag_i_max_get, Swig_var_bright_abs_mag_i_max_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"faint_app_mag_i_max",Swig_var_faint_app_mag_i_max_get, Swig_var_faint_app_mag_i_max_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"lum_func_min_abs_mag_B",Swig_var_lum_func_min_abs_mag_B_get, Swig_var_lum_func_min_abs_mag_B_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"lum_func_max_abs_mag_B",Swig_var_lum_func_max_abs_mag_B_get, Swig_var_lum_func_max_abs_mag_B_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mass_func_l10_min",Swig_var_mass_func_l10_min_get, Swig_var_mass_func_l10_min_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"mass_func_l10_max",Swig_var_mass_func_l10_max_get, Swig_var_mass_func_l10_max_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"virial_density_factor",Swig_var_virial_density_factor_get, Swig_var_virial_density_factor_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"default_mass",Swig_var_default_mass_get, Swig_var_default_mass_set);
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

