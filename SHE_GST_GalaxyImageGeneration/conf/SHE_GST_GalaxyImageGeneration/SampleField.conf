output_file_name_base = sample_field

data_dir = '/home/user/git/SHE_GST/SHE_GST_GalaxyImageGeneration/auxdir/SHE_GST_GalaxyImageGeneration'

# Number of parallel threads the process will be split up into.
# 1 = Use 1. 0 = All available. -1 = All but 1, etc.
num_parallel_threads = 1

details_output_format = fits

# Adjustment for the random seeding. Set this to a different value each time you run
# the script to get entirely different images each time.
seed =   1
noise_seed =   0

# Set to False and error will be applied as normal
# Set to True and no noise (not even Poisson) will be present on the images
suppress_noise = False

# Set to 1 or 2 to compress images with fpack after they're generated to save
# disk space - 1 for lossless compression, 2 for lossy compression. Here, "lossy"
# just means that floats get scaled and then rounded to integers, so there's only
# very little actual loss.
#
# If fpack isn"t installed on your machine, be sure this is set to 0.
compress_images =           0

magnitude_limit = 24.5

num_images = 4

image_size_xp = 4132
image_size_yp = 4096

render_background_galaxies = False

# How to lay out the galaxies. 'field' is a simulation observed image, 'cutouts'
# draws a field and then cuts out stamps from it. 'stamps' draws galaxies directly
# to postage stamps
mode = field

# Settings for the psf used below

# The base file name for the image that will be saved showing the PSFs used
psf_file_name_base = sample_field_psf

# The subsampling factor for drawing the PSFs used
psf_scale_factor = 5

# The size of each PSF's stamp in subsampled pixels
psf_stamp_size = 256

# Whether to use different PSFs for bulge and disk components of galaxies. If False,
# will use bulge PSF for both components 
chromatic_psf = True

# Whether to use different PSFs for each galaxy (based on their simulated redshift and
# morphology). If False, all will use a redshift 0, n=1 PSF
single_psf = False

# Whether to use the Euclid PSF models or not. If not, will use a single-band PSF from
# GalSim's Optical PSF class designed to roughly resemble Euclid's PSF.
euclid_psf = True

# How to / if to get multiple exposures
dithering_scheme = 2x2
